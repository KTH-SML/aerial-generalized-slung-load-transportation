(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    638574,      12177]
NotebookOptionsPosition[    632921,      11978]
NotebookOutlinePosition[    633259,      11993]
CellTagsIndexPosition[    633216,      11990]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["check section \[OpenCurlyDoubleQuote]UAV-Manipulator\
\[CloseCurlyDoubleQuote] in companion pdf", "Subsection",
 CellChangeTimes->{{3.7156051387723627`*^9, 3.715605160488038*^9}, 
   3.7156144928722754`*^9}],

Cell[CellGroupData[{

Cell["Import vector field and transformed vector field", "Chapter",
 CellChangeTimes->{{3.715614698437812*^9, 3.7156147098862963`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookEvaluate", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<uav_manipulator_transformation.nb\>\""}], "}"}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.71005535745792*^9, 3.710055358482471*^9}, {
   3.710055419189004*^9, 3.710055459554541*^9}, {3.7100555370149403`*^9, 
   3.710055548671946*^9}, 3.710055638835634*^9, 3.710057803745392*^9, {
   3.7100599861952877`*^9, 3.710059990024391*^9}, 3.7101574160581427`*^9, {
   3.710157992771703*^9, 3.710157993807963*^9}, {3.715605297656705*^9, 
   3.7156052990654497`*^9}, 3.715626856685377*^9}],

Cell[CellGroupData[{

Cell["define a useful function to test some equalities", "Subsection",
 CellChangeTimes->{{3.715614717729388*^9, 3.715614733095043*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test", "[", 
    RowBox[{"t_", ",", "x_", ",", "V_", ",", "W_", ",", "X_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "xx", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"V", "[", 
           RowBox[{
            SubscriptBox["xx", "1"], ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["xx", "#"], "&"}], ",", 
              RowBox[{"Length", "[", "x", "]"}], ",", "2"}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["xx", "#"], "&"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", "x", "]"}], "+", "1"}]}], "]"}], "}"}]}],
          "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"X", "[", 
           RowBox[{"t", ",", "x"}], "]"}]}], "]"}]}], "-", 
       "\[IndentingNewLine]", 
       RowBox[{"W", "[", 
        RowBox[{"t", ",", "x"}], "]"}]}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["xx", "#"], "&"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], "+", "1"}]}], "]"}], "\[Rule]", 
        " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "t", "}"}], ",", "x"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.710065775043765*^9, 3.710065795099517*^9}, {
  3.7100658489309072`*^9, 3.710065954460703*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Get control for thrust propelled system and unit vector second order system\
\>", "Chapter",
 CellChangeTimes->{{3.708311346874426*^9, 3.708311364693557*^9}, {
  3.715614797706957*^9, 3.71561480446614*^9}}],

Cell[CellGroupData[{

Cell["defined some useful variables (these are just dummy names)", \
"Subsection",
 CellChangeTimes->{{3.7156147669263067`*^9, 3.715614781797352*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y1", "=", 
   RowBox[{"{", 
    RowBox[{
    "p1", ",", "p2", ",", "p3", ",", "v1", ",", "v2", ",", "v3", ",", "n1", 
     ",", "n2", ",", "n3", ",", "\[CapitalOmega]1", ",", "\[CapitalOmega]2", 
     ",", "\[CapitalOmega]3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y2", "=", 
   RowBox[{"{", 
    RowBox[{
    "r1", ",", "r2", ",", "r3", ",", "\[Omega]1", ",", "\[Omega]2", ",", 
     "\[Omega]3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"y1", ",", "y2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yRandom", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"xRandom", "[", "]"}], "]"}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1Random", "=", 
   RowBox[{"yRandom", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y2Random", "=", 
   RowBox[{"yRandom", "[", 
    RowBox[{"[", 
     RowBox[{"13", ";;", "18"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.710056110964754*^9, 3.710056282460198*^9}, {
  3.710057700594672*^9, 3.710057827288042*^9}, {3.710158039829153*^9, 
  3.7101580630270777`*^9}, {3.71015828686136*^9, 3.7101583152457314`*^9}, {
  3.710158524016624*^9, 3.7101585266638193`*^9}, {3.7156147624731493`*^9, 
  3.7156147627173862`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subsystem 1: thrust propelled system", "Chapter",
 CellChangeTimes->{{3.7098078908405523`*^9, 3.709807892985598*^9}, {
  3.715614810421947*^9, 3.7156148153698673`*^9}}],

Cell[CellGroupData[{

Cell["Controller for thrust propelled system", "Subsection",
 CellChangeTimes->{{3.715614825933526*^9, 3.715614838003574*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<controllers_for_transformed_systems/controller_thrust_propelled_\
system.m\>\""}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "gains", " ", "of", " ", "torque", " ", "cascaded", " ", "controller"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BoundedDoubleIntegratorGains", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kp", "\[Rule]", " ", "1.5"}], ",", 
     RowBox[{"kv", "\[Rule]", " ", 
      RowBox[{
       SqrtBox["2"], 
       SqrtBox["1.5"]}]}], ",", 
     RowBox[{"\[Sigma]p", "\[Rule]", " ", "0.6"}], ",", 
     RowBox[{"\[Sigma]v", "\[Rule]", " ", "0.6"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttitudeControllerGains", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kp", "\[Rule]", " ", "3"}], ",", 
      RowBox[{"kd", "\[Rule]", " ", 
       RowBox[{
        SqrtBox["2"], 
        SqrtBox["3"]}]}], ",", 
      RowBox[{"kVp", "\[Rule]", " ", "100"}], ",", 
      RowBox[{"kVd", "\[Rule]", " ", "200"}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gravity", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"pd", "''"}], "[", "t", "]"}], "+", 
     RowBox[{"g", " ", "e3"}]}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ControllerSubsystem1", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",",
         "n1_", ",", "n2_", ",", "n3_", ",", "\[CapitalOmega]1_", ",", 
        "\[CapitalOmega]2_", ",", "\[CapitalOmega]3_"}], "}"}]}], "]"}], "=", 
    "\[IndentingNewLine]", 
    RowBox[{"ThrustPropelledController", "[", "\[IndentingNewLine]", 
     RowBox[{
     "t", ",", "y1", ",", "gravity", ",", "\[IndentingNewLine]", 
      "BoundedDoubleIntegratorGains", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{"\"\<PD\>\"", " ", ",", "AttitudeControllerGains", ",", 
         RowBox[{"{", "\"\<Precise\>\"", "}"}], ",", "Null"}], "}"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<BackStepping\>\"", ",", "AttitudeControllerGains", ",", 
        RowBox[{"{", "\"\<Precise\>\"", "}"}], ",", "\"\<on\>\""}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v1cl", "[", 
   RowBox[{"t_", ",", "y1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ControllerSubsystem1", "[", 
    RowBox[{"t", ",", "y1"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "[", 
   RowBox[{"t_", ",", "y1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ControllerSubsystem1", "[", 
    RowBox[{"t", ",", "y1"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W1", "[", 
   RowBox[{"t_", ",", "y1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ControllerSubsystem1", "[", 
    RowBox[{"t", ",", "y1"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X1", "[", 
    RowBox[{"t_", ",", "y1_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ControllerSubsystem1", "[", 
     RowBox[{"t", ",", "y1"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"v1cl", "[", 
   RowBox[{"0.1", ",", "y1Random"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{"test", "[", 
    RowBox[{"0.1", ",", "y1Random", ",", "V1", ",", "W1", ",", "X1"}], "]"}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.708312587634118*^9, 3.708312589827909*^9}, {
   3.710158087432098*^9, 3.710158146573181*^9}, {3.7101581921841097`*^9, 
   3.710158243420414*^9}, {3.710158479819104*^9, 3.710158508631412*^9}, {
   3.710158572542955*^9, 3.710158611050692*^9}, {3.7101603484799013`*^9, 
   3.710160389864808*^9}, {3.715605342331863*^9, 3.715605350210002*^9}, 
   3.715614786270945*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.088`", ",", 
   RowBox[{"{", 
    RowBox[{"5.120189027160374`", ",", 
     RowBox[{"{", 
      RowBox[{"1.2203115183529838`", ",", 
       RowBox[{"-", "2.9317834226711286`"}], ",", 
       RowBox[{"-", "1.5331891032752858`"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7101582475435247`*^9, {3.710158483099429*^9, 3.7101585105484953`*^9}, 
   3.710158611720624*^9, {3.710159371749345*^9, 3.710159373669915*^9}, {
   3.7101603905503407`*^9, 3.7101603967210712`*^9}, 3.710415482831032*^9, 
   3.710415648907919*^9, 3.710416582390502*^9, 3.710417226377294*^9, 
   3.7143230437155657`*^9, 3.714377876630776*^9, {3.71562687692863*^9, 
   3.715626888422144*^9}, 3.715626983469737*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.592`", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7101582475435247`*^9, {3.710158483099429*^9, 3.7101585105484953`*^9}, 
   3.710158611720624*^9, {3.710159371749345*^9, 3.710159373669915*^9}, {
   3.7101603905503407`*^9, 3.7101603967210712`*^9}, 3.710415482831032*^9, 
   3.710415648907919*^9, 3.710416582390502*^9, 3.710417226377294*^9, 
   3.7143230437155657`*^9, 3.714377876630776*^9, {3.71562687692863*^9, 
   3.715626888422144*^9}, 3.7156269840611477`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subsystem 1: unit vector second order system", "Chapter",
 CellChangeTimes->{{3.7098078908405523`*^9, 3.709807892985598*^9}, {
  3.715614810421947*^9, 3.7156148153698673`*^9}, {3.715614849368482*^9, 
  3.7156148558456917`*^9}}],

Cell[CellGroupData[{

Cell["Controller for unit vector second order system", "Subsection",
 CellChangeTimes->{{3.715614825933526*^9, 3.715614838003574*^9}, 
   3.7156148695871983`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Get", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<controllers_for_transformed_systems/cascaded_attitude_control.m\>\
\""}], "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "gains", " ", "of", " ", "torque", " ", "cascaded", " ", "controller"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttitudeControllerGains", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kp", "\[Rule]", " ", "1.5"}], ",", 
      RowBox[{"kd", "\[Rule]", " ", "1.73"}], ",", 
      RowBox[{"kVp", "\[Rule]", " ", "10"}], ",", 
      RowBox[{"kVd", "\[Rule]", " ", "20"}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ControllerSubsystem2", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
        ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{"TorqueBacksteppingController", "[", "\[IndentingNewLine]", 
     RowBox[{"t", ",", "Null", ",", "y2", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "nd", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
        ",", "Null"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Null", ",", "Null", ",", "Null"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null"}], 
       "}"}], ",", "\[IndentingNewLine]", "AttitudeControllerGains", ",", 
      "\[IndentingNewLine]", "\"\<Precise\>\"", ",", "\[IndentingNewLine]", 
      "Null", ",", "\[IndentingNewLine]", "\"\<on\>\""}], "\n", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v2cl", "[", 
    RowBox[{"t_", ",", "y2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ControllerSubsystem2", "[", 
      RowBox[{"t", ",", "y2"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V2", "[", 
    RowBox[{"t_", ",", "y2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ControllerSubsystem2", "[", 
      RowBox[{"t", ",", "y2"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"W2", "[", 
    RowBox[{"t_", ",", "y2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ControllerSubsystem2", "[", 
      RowBox[{"t", ",", "y2"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"X2", "[", 
     RowBox[{"t_", ",", "y2_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"ControllerSubsystem2", "[", 
       RowBox[{"t", ",", "y2"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"v2cl", "[", 
   RowBox[{"0.1", ",", "y2Random"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{"test", "[", 
    RowBox[{"0.1", ",", "y2Random", ",", "V2", ",", "W2", ",", "X2"}], "]"}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.71015904916389*^9, 3.710159056379509*^9}, {
   3.710160406706458*^9, 3.710160421931229*^9}, 3.715605375139045*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.008`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.33281749661742055`"}], ",", 
     RowBox[{"-", "0.8404805000954736`"}], ",", 
     RowBox[{"-", "0.05494624890695254`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7101590340792313`*^9, 3.7101590642257233`*^9}, 
   3.71015937865933*^9, 3.71016023999559*^9, 3.710160422646009*^9, 
   3.7104154839795647`*^9, 3.710415650167777*^9, 3.7104165835629168`*^9, 
   3.71041722772961*^9, 3.7143230443704557`*^9, 3.7143778772682877`*^9, 
   3.715626891022583*^9, 3.715626984284732*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04`", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7101590340792313`*^9, 3.7101590642257233`*^9}, 
   3.71015937865933*^9, 3.71016023999559*^9, 3.710160422646009*^9, 
   3.7104154839795647`*^9, 3.710415650167777*^9, 3.7104165835629168`*^9, 
   3.71041722772961*^9, 3.7143230443704557`*^9, 3.7143778772682877`*^9, 
   3.715626891022583*^9, 3.715626984285537*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["yaw control law", "Chapter",
 CellChangeTimes->{{3.715614886873836*^9, 3.715614888709258*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]\[Psi]cl", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "r11_", ",", "r12_", ",", "r13_", 
        ",", "r21_", ",", "r22_", ",", "r23_", ",", "r31_", ",", "r32_", ",", 
        "r33_", ",", "P1_", ",", "P2_", ",", "P3_", ",", "R11_", ",", "R12_", 
        ",", "R13_", ",", "R21_", ",", "R22_", ",", "R23_", ",", "R31_", ",", 
        "R32_", ",", "R33_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
        "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "V1_", ",", 
        "V2_", ",", "V3_", ",", "\[CapitalOmega]1_", ",", "\[CapitalOmega]2_",
         ",", "\[CapitalOmega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{"-", "\[CapitalOmega]3"}]}], ";"}], " "}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["complete control law in transformed coordinates", "Chapter",
 CellChangeTimes->{{3.7098082802331867`*^9, 3.709808283128922*^9}, {
  3.715614910087439*^9, 3.715614917125544*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vcl", "[", 
   RowBox[{"t_", ",", "y_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"v1cl", "[", 
      RowBox[{"t", ",", 
       RowBox[{"y", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"v2cl", "[", 
     RowBox[{"t", ",", 
      RowBox[{"y", "[", 
       RowBox[{"[", 
        RowBox[{"13", ";;", "18"}], "]"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["complete control law in original coordinates", "Chapter",
 CellChangeTimes->{{3.7098082802331867`*^9, 3.709808283128922*^9}, {
  3.715614910087439*^9, 3.715614929950725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Ucl", "[", 
    RowBox[{"t_", ",", "x_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ucl", "[", "\[IndentingNewLine]", 
     RowBox[{"x", ",", "\[IndentingNewLine]", 
      RowBox[{"vcl", "[", 
       RowBox[{"t", ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f", "[", "x", "]"}], "-", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"pd", "[", "t", "]"}], ",", 
              RowBox[{
               RowBox[{"pd", "'"}], "[", "t", "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "12"}], "]"}]}], "]"}]}], ")"}], "/.", 
          "PhysicalConstants"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]\[Psi]cl", "[", 
       RowBox[{"t", ",", "x"}], "]"}]}], "\[IndentingNewLine]", "]"}], "/.", 
    "PhysicalConstants"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Ucl", "[", 
   RowBox[{"0.1", ",", 
    RowBox[{"xRandom", "[", "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.709808451557064*^9, 3.709808581275106*^9}, {
   3.7098086593056183`*^9, 3.709808698352441*^9}, {3.709809110729764*^9, 
   3.7098091267185917`*^9}, {3.709810152584485*^9, 3.709810156467136*^9}, 
   3.709872811342208*^9, {3.7098734512600822`*^9, 3.7098734544942617`*^9}, {
   3.710159074880591*^9, 3.7101591470411377`*^9}, {3.710159323934651*^9, 
   3.710159356986719*^9}, {3.7101604737179537`*^9, 3.7101604891350107`*^9}, 
   3.710160573439951*^9, {3.715614895701046*^9, 3.71561493220148*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.12`", ",", 
   RowBox[{"{", 
    RowBox[{"14.278479890893253`", ",", "0.2786942836196123`", ",", 
     RowBox[{"-", "1.4142155310991482`"}], ",", 
     RowBox[{"-", "0.10994764784226523`"}], ",", "0.5465284451319605`", ",", 
     RowBox[{"-", "1.194975645233774`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.709808670143977*^9, 3.7098086998524647`*^9}, 
   3.709810148001005*^9, 3.70981247595584*^9, 3.7098126068835497`*^9, 
   3.709812762957717*^9, 3.709812994134684*^9, 3.709813218839912*^9, 
   3.7098134359265413`*^9, 3.7098145235007267`*^9, 3.7098147779323063`*^9, 
   3.709814956614086*^9, 3.709816580084611*^9, 3.70981681889359*^9, 
   3.709817503415411*^9, 3.709871049119965*^9, 3.709871411041545*^9, 
   3.709872013208074*^9, 3.709872813503518*^9, 3.709873684281704*^9, 
   3.7098738953468933`*^9, 3.709874072063223*^9, 3.709874335323188*^9, 
   3.709874715845797*^9, 3.709875818159851*^9, 3.7098809539186077`*^9, 
   3.7101591514596443`*^9, {3.7101593248808393`*^9, 3.710159361230605*^9}, 
   3.710160244834754*^9, 3.710160490463682*^9, {3.710160574040798*^9, 
   3.710160576008502*^9}, 3.710415484262475*^9, 3.710415650456945*^9, 
   3.710416583849586*^9, 3.710417228097621*^9, 3.714323044543462*^9, 
   3.714377877446499*^9, 3.715626896406868*^9, 3.715626984617304*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["closed loop vector field", "Chapter",
 CellChangeTimes->{{3.715615160680562*^9, 3.715615164573325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xcl", "[", 
   RowBox[{"t_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"X", "[", 
   RowBox[{"x", ",", 
    RowBox[{"Ucl", "[", 
     RowBox[{"t", ",", "x"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VV", "[", 
   RowBox[{"t_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"V1", "[", 
       RowBox[{"t", ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], "+", 
      RowBox[{"V2", "[", 
       RowBox[{"t", ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"13", ";;", "18"}], "]"}], "]"}]}], "]"}]}], ")"}], "&"}], 
   "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "-", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"pd", "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"pd", "'"}], "[", "t", "]"}], ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", "12"}], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WW", "[", 
    RowBox[{"t_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"W1", "[", 
        RowBox[{"t", ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], "+", 
       RowBox[{"W2", "[", 
        RowBox[{"t", ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"13", ";;", "18"}], "]"}], "]"}]}], "]"}]}], ")"}], "&"}], 
    "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], "-", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"pd", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"pd", "'"}], "[", "t", "]"}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "12"}], "]"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Xcl", "[", 
     RowBox[{"t_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Ucl", "[", 
         RowBox[{"t", ",", "x"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"VV", "[", 
       RowBox[{"t_", ",", "x_"}], "]"}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"V1", "[", 
           RowBox[{"t", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], ")"}], "&"}], 
        "[", 
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "-", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"pd", "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"pd", "'"}], "[", "t", "]"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", "12"}], "]"}]}], "]"}]}], "]"}], 
       "\[IndentingNewLine]", 
       RowBox[{"WW", "[", 
        RowBox[{"t_", ",", "x_"}], "]"}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"W1", "[", 
          RowBox[{"t", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], ")"}], "&"}], 
       "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], "-", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"pd", "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"pd", "'"}], "[", "t", "]"}], ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "12"}], "]"}]}], "]"}]}], "]"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"test", "[", 
     RowBox[{"0.1", ",", 
      RowBox[{
       RowBox[{"xRandom", "[", "]"}], "/.", "PhysicalConstants"}], ",", "VV", 
      ",", "WW", ",", "Xcl"}], "]"}], "/.", "PhysicalConstants"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.709873383781961*^9, 3.7098734856862164`*^9}, {
   3.7098761752582006`*^9, 3.709876188849827*^9}, {3.710159467172331*^9, 
   3.710159533226755*^9}, {3.7101596892027082`*^9, 3.7101598237628307`*^9}, {
   3.710160259266901*^9, 3.710160296971055*^9}, {3.7101605855814543`*^9, 
   3.710160596170244*^9}, 3.710160662562289*^9, {3.710415493394764*^9, 
   3.710415502373907*^9}, 3.715615149875041*^9, {3.715626905067068*^9, 
   3.715626917507111*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.976`", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7156269217897053`*^9, 3.715626932398602*^9}, 
   3.715626988679325*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Projection: take any element in R36 and project it into X ", "Chapter",
 CellChangeTimes->{{3.7156151719663258`*^9, 3.715615219316828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"projR1", "[", 
   RowBox[{"U_", ",", "V_"}], "]"}], ":=", 
  RowBox[{"U", ".", 
   RowBox[{"ConjugateTranspose", "[", "V", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projR2", "[", "SVD_", "]"}], ":=", 
  RowBox[{"projR1", "[", 
   RowBox[{
    RowBox[{"SVD", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"SVD", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"projR3", "[", "R_", "]"}], ":=", 
   RowBox[{"projR2", "[", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"SingularValueDecomposition", "[", "R", "]"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Proj", "[", 
    RowBox[{"{", 
     RowBox[{
     "p1_", ",", "p2_", ",", "p3_", ",", "r11_", ",", "r12_", ",", "r13_", 
      ",", "r21_", ",", "r22_", ",", "r23_", ",", "r31_", ",", "r32_", ",", 
      "r33_", ",", "P1_", ",", "P2_", ",", "P3_", ",", "R11_", ",", "R12_", 
      ",", "R13_", ",", "R21_", ",", "R22_", ",", "R23_", ",", "R31_", ",", 
      "R32_", ",", "R33_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
      "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "V1_", ",", 
      "V2_", ",", "V3_", ",", "\[CapitalOmega]1_", ",", "\[CapitalOmega]2_", 
      ",", "\[CapitalOmega]3_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"projR3", "[", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r11", ",", "r12", ",", "r13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r21", ",", "r22", ",", "r23"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r31", ",", "r32", ",", "r33"}], "}"}]}], "}"}], "]"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], "+", 
       RowBox[{"l", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r11", ",", "r12", ",", "r13"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r21", ",", "r22", ",", "r23"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r31", ",", "r32", ",", "r33"}], "}"}]}], "}"}], ".", 
         "e3"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"projR3", "[", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"R11", ",", "R12", ",", "R13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"R21", ",", "R22", ",", "R23"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"R31", ",", "R32", ",", "R33"}], "}"}]}], "}"}], "]"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "+", 
       RowBox[{"l", "  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r11", ",", "r12", ",", "r13"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r21", ",", "r22", ",", "r23"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r31", ",", "r32", ",", "r33"}], "}"}]}], "}"}], ".", 
         RowBox[{"Skew", "[", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
          "]"}], ".", "e3"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalOmega]3"}],
        "}"}]}], "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Proj", "[", "x", "]"}], "-", "x"}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"error", "[", 
   RowBox[{
    RowBox[{"xRandom", "[", "]"}], "/.", "PhysicalConstants"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.70980880119038*^9, 3.7098088308972197`*^9}, {
  3.709808861330841*^9, 3.7098088957136993`*^9}, {3.7098089287721653`*^9, 
  3.7098089609881077`*^9}, {3.709809093942932*^9, 3.7098090942857027`*^9}, {
  3.7098102755340843`*^9, 3.709810395516766*^9}, {3.7098105812328672`*^9, 
  3.7098106835487413`*^9}, {3.709810742283586*^9, 3.7098108823824368`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.709810310949997*^9, 3.709810353475395*^9}, 
   3.709810398594356*^9, {3.7098105558438463`*^9, 3.709810584408265*^9}, {
   3.7098106190045233`*^9, 3.709810649913179*^9}, 3.709810686372169*^9, {
   3.709810852188141*^9, 3.7098108830159683`*^9}, 3.709812476060937*^9, 
   3.7098126069483423`*^9, 3.709812764142112*^9, 3.709812994211029*^9, 
   3.709813218894474*^9, 3.709813435986062*^9, 3.709814523686091*^9, 
   3.709814777988172*^9, 3.709814956683399*^9, 3.709816580173197*^9, 
   3.7098168189987698`*^9, 3.7098175035037727`*^9, 3.709871049189761*^9, 
   3.7098714111292543`*^9, 3.709872013283875*^9, 3.709872244699786*^9, 
   3.709873685184312*^9, 3.709873896159739*^9, 3.7098740729736958`*^9, 
   3.7098743361608067`*^9, 3.709874716714089*^9, 3.709875819835435*^9, 
   3.709880959475746*^9, 3.710160670737187*^9, 3.710415484677801*^9, 
   3.710415516350245*^9, 3.7104156568909388`*^9, 3.710416590395639*^9, 
   3.710417230021607*^9, 3.714323048277714*^9, 3.7143778814536953`*^9, 
   3.715626934268647*^9, 3.715626988824367*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Chapter",
 CellChangeTimes->{{3.7156151095743227`*^9, 3.71561511223711*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stepsize", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NN", "=", "1000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x0", "=", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"z3", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
       RowBox[{"l", " ", "e3"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", "z3", ",", 
       "z3", ",", "z3", ",", "z3"}], "]"}], "/.", "PhysicalConstants"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x0", "=", 
     RowBox[{
      RowBox[{"xRandom", "[", "]"}], "/.", "PhysicalConstants"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateListStar", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputList", " ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensionsList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kk", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"time", "=", 
     RowBox[{"stepsize", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"xstar0", " ", "=", " ", 
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{"yplusplusstar", "[", "time", "]"}], "]"}], "/.", 
        "PhysicalConstants"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"xstar0", " ", "=", " ", 
     RowBox[{
      RowBox[{"xplusplusstar", "[", "time", "]"}], "/.", 
      "PhysicalConstants"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"input", " ", "=", 
     RowBox[{"Ucl", "[", 
      RowBox[{"time", ",", "x0"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tensions", "=", " ", 
     RowBox[{
      RowBox[{"Tensions", "[", 
       RowBox[{"x0", ",", "input"}], "]"}], "/.", "PhysicalConstants"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"stateList", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"stateList", ",", 
       RowBox[{"{", "x0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"stateListStar", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"stateListStar", ",", 
       RowBox[{"{", "xstar0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"inputList", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"inputList", ",", 
       RowBox[{"{", "input", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tensionsList", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"tensionsList", ",", 
       RowBox[{"{", "tensions", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"xd", "=", "  ", 
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"x0", ",", "input"}], "]"}], "/.", "PhysicalConstants"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"x0", "=", 
     RowBox[{
      RowBox[{"Proj", "[", 
       RowBox[{"x0", "+", 
        RowBox[{"stepsize", " ", "xd"}]}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"200", " ", "kk"}]}], ",", 
      RowBox[{
       RowBox[{"Beep", "[", "]"}], ";", 
       RowBox[{"Print", "[", "i", "]"}], ";", 
       RowBox[{"kk", "=", 
        RowBox[{"kk", "+", "1"}]}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]",
   "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.697144670498608*^9, 3.697144801594841*^9}, {
   3.697144871491254*^9, 3.697145058488566*^9}, {3.697194422801775*^9, 
   3.6971944995778027`*^9}, {3.6971962026686897`*^9, 3.697196203668778*^9}, {
   3.6971982939991713`*^9, 3.6971983650003777`*^9}, {3.697198450349339*^9, 
   3.697198494025077*^9}, {3.6971985973378973`*^9, 3.697198598138495*^9}, {
   3.697198683550359*^9, 3.6971986870125017`*^9}, {3.6972020866865807`*^9, 
   3.6972021079744473`*^9}, {3.6972051780359097`*^9, 
   3.6972051821232347`*^9}, {3.697205244403036*^9, 3.697205245512591*^9}, {
   3.697209431602137*^9, 3.6972094837735777`*^9}, {3.6972095647681503`*^9, 
   3.697209565185904*^9}, {3.69720986977465*^9, 3.697209878899805*^9}, {
   3.69721013035539*^9, 3.6972101984258013`*^9}, {3.6972102423779182`*^9, 
   3.697210310368534*^9}, {3.697210361028081*^9, 3.697210399216175*^9}, 
   3.6972104382705507`*^9, {3.697210469281679*^9, 3.6972105247030163`*^9}, {
   3.697276942229973*^9, 3.69727697390705*^9}, 3.697277030255249*^9, {
   3.697277141422461*^9, 3.697277156205419*^9}, {3.697277318799739*^9, 
   3.697277356718541*^9}, 3.6972776371958427`*^9, {3.698246488547475*^9, 
   3.698246493209091*^9}, {3.698247563098871*^9, 3.69824756324855*^9}, {
   3.6982480189665823`*^9, 3.698248019450706*^9}, {3.6983036740358343`*^9, 
   3.6983037255726852`*^9}, {3.698502661584284*^9, 3.6985026618966103`*^9}, 
   3.6985067635653553`*^9, {3.698549717099725*^9, 3.698549719699305*^9}, {
   3.698549765461834*^9, 3.698549789936919*^9}, {3.69854987227381*^9, 
   3.698549931423819*^9}, {3.698549974688199*^9, 3.698550225727729*^9}, {
   3.6985505880302477`*^9, 3.698550592804903*^9}, 3.698550913343279*^9, {
   3.698551329394456*^9, 3.6985513349084377`*^9}, {3.69855378101232*^9, 
   3.698553781560462*^9}, {3.7098090047606707`*^9, 3.709809104776815*^9}, {
   3.709809138491555*^9, 3.709809240734477*^9}, {3.709810094417884*^9, 
   3.709810105480557*^9}, {3.709810900509095*^9, 3.709810966864901*^9}, {
   3.709810998617538*^9, 3.70981110053314*^9}, {3.709811830806892*^9, 
   3.70981183096369*^9}, {3.709812319360845*^9, 3.709812440498448*^9}, 
   3.7098125015314083`*^9, {3.709812594751631*^9, 3.70981259747471*^9}, {
   3.709812793937004*^9, 3.709812807509035*^9}, {3.709813106444386*^9, 
   3.7098131067669897`*^9}, {3.709813422801939*^9, 3.709813424705778*^9}, {
   3.709814907986623*^9, 3.7098149164898653`*^9}, {3.709816566659526*^9, 
   3.70981656681031*^9}, {3.709871392353381*^9, 3.7098713924965343`*^9}, {
   3.709871525736781*^9, 3.709871526410123*^9}, {3.709871726780685*^9, 
   3.7098717269984217`*^9}, {3.709871949563933*^9, 3.709871950300364*^9}, 
   3.709871999633788*^9, {3.709872214515512*^9, 3.7098722160715933`*^9}, {
   3.70987387070266*^9, 3.7098738732099257`*^9}, {3.709874702890387*^9, 
   3.709874705201005*^9}, {3.709876007577001*^9, 3.709876007722047*^9}, 
   3.709880960755843*^9, {3.709881002293099*^9, 3.709881005208293*^9}, {
   3.7104155592363567`*^9, 3.710415591229475*^9}, {3.710416595314748*^9, 
   3.7104165985833817`*^9}, {3.710416796765699*^9, 3.7104168053644648`*^9}, {
   3.71041723297288*^9, 3.7104172333102903`*^9}, 3.710417282810972*^9}],

Cell[CellGroupData[{

Cell[BoxData["200"], "Print",
 CellChangeTimes->{3.710417339385325*^9, 3.714323068067876*^9, 
  3.714377902265033*^9, 3.715626958640315*^9, 3.71562701021205*^9}],

Cell[BoxData["400"], "Print",
 CellChangeTimes->{3.710417339385325*^9, 3.714323068067876*^9, 
  3.714377902265033*^9, 3.715626958640315*^9, 3.715627030426505*^9}],

Cell[BoxData["600"], "Print",
 CellChangeTimes->{3.710417339385325*^9, 3.714323068067876*^9, 
  3.714377902265033*^9, 3.715626958640315*^9, 3.715627050581601*^9}],

Cell[BoxData["800"], "Print",
 CellChangeTimes->{3.710417339385325*^9, 3.714323068067876*^9, 
  3.714377902265033*^9, 3.715626958640315*^9, 3.715627071040196*^9}],

Cell[BoxData["1000"], "Print",
 CellChangeTimes->{3.710417339385325*^9, 3.714323068067876*^9, 
  3.714377902265033*^9, 3.715626958640315*^9, 3.715627091482386*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["saving data", "Chapter",
 CellChangeTimes->{{3.7156150686909*^9, 3.715615074526829*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_state.mat\>\""}]\
, ",", "stateList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_state_\
star.mat\>\""}], ",", "stateListStar"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6985036578259974`*^9, 3.698503658498044*^9}, {
  3.6985513603944273`*^9, 3.69855137572093*^9}, {3.698560606380211*^9, 
  3.698560634232679*^9}, {3.710161213598318*^9, 3.71016122452133*^9}, {
  3.7101614355717287`*^9, 3.7101614358044453`*^9}, {3.710165078996048*^9, 
  3.710165079217668*^9}, {3.7101652007095823`*^9, 3.710165207028686*^9}, {
  3.715615849252846*^9, 3.715615850497395*^9}}],

Cell[CellGroupData[{

Cell["export", "Subsection",
 CellChangeTimes->{{3.69866070255951*^9, 3.698660703322317*^9}, 
   3.7120373513051167`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_state.mx\>\""}],
     ",", "stateList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_state_star.mx\>\
\""}], ",", "stateListStar"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_input.mx\>\""}],
     ",", "inputList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_tensions.mx\>\"\
"}], ",", "tensionsList"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.698643310140045*^9, {3.6986605420481033`*^9, 3.6986605760214357`*^9}, {
   3.711775568342793*^9, 3.711775568511992*^9}, {3.7120360002619057`*^9, 
   3.712036000718154*^9}, {3.712036049359779*^9, 3.7120360627592773`*^9}, {
   3.71480853415761*^9, 3.714808538597221*^9}, {3.714899899030551*^9, 
   3.714899920456976*^9}, 3.7149163911269503`*^9, 3.714934563558934*^9, {
   3.7153311712011137`*^9, 3.715331205428688*^9}, {3.715615852601776*^9, 
   3.715615862005952*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import", "Subsection",
 CellChangeTimes->{{3.698660705542233*^9, 3.698660715146965*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"stateList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_state.mx\>\""}\
], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"stateListStar", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_state_star.mx\
\>\""}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"inputList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_input.mx\>\""}\
], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"tensionsList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_tensions.mx\>\
\""}], "]"}]}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.698660720009779*^9, 3.6986607477347527`*^9}, {
  3.698724459572261*^9, 3.698724460867153*^9}, {3.711775571270463*^9, 
  3.7117755714269047`*^9}, {3.712035673678891*^9, 3.712035678848196*^9}, {
  3.715331219581663*^9, 3.715331249744791*^9}, {3.7156158739876842`*^9, 
  3.715615882672974*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["necessary for the plots that follow", "Subsection",
 CellChangeTimes->{{3.715615086170679*^9, 3.715615093044836*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NN", "=", 
  RowBox[{"Length", "[", "stateList", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XTicksLabels", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"600", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"800", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "10"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xc", "[", 
   RowBox[{"i_", ",", "comp_"}], "]"}], ":=", 
  RowBox[{"stateList", "[", 
   RowBox[{"[", 
    RowBox[{"i", ",", "comp"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uc", "[", 
   RowBox[{"i_", ",", "comp_"}], "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{"i", ",", "comp"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.70987593390843*^9, 3.709875977762858*^9}, {
  3.7098762372569*^9, 3.709876270963366*^9}, {3.710160686678097*^9, 
  3.710160694202342*^9}}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{3.710160813241694*^9, 3.710415882969948*^9, 
  3.710416307430881*^9, 3.710417102550218*^9, 3.710417256662525*^9, 
  3.710417514693058*^9, 3.71432314803445*^9, 3.714377985352113*^9, 
  3.715627092068006*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"stateList", "=", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_state.mat\>\"\
"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"stateListStar", "=", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_manipulator/plot_trajectory_matlab/data_state_star.\
mat\>\""}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.710416236128977*^9, 3.710416304410242*^9}, 
   3.710416606960875*^9, {3.710417083666951*^9, 3.710417113031193*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric error", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}, {
  3.709875751367775*^9, 3.709875756536969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"errordY", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"dY", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"stateList", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", ";;"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"stateListStar", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", ";;"}], "]"}], "]"}], "]"}]}], "]"}], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"errordX", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"dXToStar", "[", 
     RowBox[{
      RowBox[{"stepsize", 
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}]}], ",", 
      RowBox[{"stateList", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", ";;"}], "]"}], "]"}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"errordX", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"errordY", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<distance between [x] and \
[x\!\(\*SubscriptBox[SuperscriptBox[\(]\), \(*\)], \(++\)]\)\>\"", ",", 
          "\"\<distance between y and \
\!\(\*SubscriptBox[SuperscriptBox[\(y\), \(*\)], \(++\)]\)\>\""}], "}"}], ",",
         "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.710416038746483*^9, 3.71041606592444*^9}, 
   3.710416481922625*^9, 3.7104170771280622`*^9, {3.7104176733904543`*^9, 
   3.710417718210802*^9}, {3.710417839624003*^9, 3.7104178420591097`*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LuUtRY/Jekn4sHDAqzs3yYZJ8E3v1rKvlDwnCfu1DAfpHSMjCfqN3P6++8hm
SWgwqMv22EK2SUJh/iP74UKyfRKCtqmdk0SSOUlY0cifdMaf7J0EPfHrpr3u
ZG4S7t4PNIYTOSKp83/c2nH7VpF5ndf/6P6BM+ZkcRL2Vkh2SZeQ05MQtvFm
1X/G5MwkpN162O41myxPAp475G2eTs5PwsM/JfZTDMiKzvt1PyksbxK5JAlH
xnZY1U4gK5NQNN19WNk4cnkSnOxO/nQdS65Mwnrzjo6zY8i1SdjkqKF9nbEq
Cd1bP08QMZ9vSMLhndldfzDf15QEn8GyDSP0yO1JaPRZUd/MXA9LjKK++vqh
zPWqi7Hg7M9TB5k8WmKE12/7lsDk1RFjfnmOuTpzP9hidNeA5mzmfumJsVPr
THwf5n4aipE9ZWKtyJaZvxjdwk1Nch2Y+YvxMvxvpasrM38xlHWz9yo3MfMX
Y7txRP65UGb+Ypw6sO+jLY+Zvxieb2UOCRJm/mIYX3tSs3wnM38xrhiFmxw4
wMxfDMt8R78tCmb+YrA09CZrXWTmL0akXuWSEbeZ+YtRojUt4vQTZv5ifNl+
QvC4kZm/GBOnPmYLfjDzF8Oo6PXfIg16fhRiFL63qfIcRi4RI64qYNGuyczz
L0b+8rc/LIyZ51+MgcsM9kdaM8+/GGyXESq2K/P8i9Hf2c7eJJR5/sXYa1l0
vJr5edAgxqqYKlHtHub5F2PISReB1Qnm+RcjJENsMf068/wnI2Wge0LCU+b5
T4bUyOT23Gbm+U+G5PGv+/Zq9PNLJxnCzx6Ln40gs5MxsyPsymXm559eMuo+
5/dQsyQbJiNdNrP0sBt5TjImcNZtPxRNRjLKAoRWfzLIZp3XIz0iP3qMbJMM
k9v25gXXyPbJ6Hq7XbNLHZmTDK9JrSdy28neybg2PZBloUG/D7jJiAipcvcZ
TI5IRvGbKwHHxpB5ydjbb7bmwGlkcTJW7fCbvIf5/ZOejISS7udMLcmZyajx
Ui/s70iWJ2NlS/OvDi9yfjLm+p7a0z2MrEjGjj2XxZME5JJk7B7Y76LfVrIy
GcOUQxdUyMnlyfhwuqH74kJyZTJybvUdcf8CuTYZFs5HJTG3yapktA/1dTR+
Sm5IxogB/O2D3pObkqF4V2TR5Qfz+7+zv8Py1K7q9H7ASsH6seqBQ4aQ1VPw
ZM7iXibjyVop2OF/IShiJlknBfqKkmtlS8nsFCgK37BHrCbrpSDJYH2uyI1s
mIIpbw8F/Qkiz0kBt2+uIpFPRgriFTKh9layWQqe72geVpRDtknB2P8O7XE6
QbbvvJ5z5XP6XiZzUqAXfUy3opLsnYLXs58lpqrI3BSI72rucmwiR6RAuHB4
1hQW8/6XAt+TP8/21GLe/1LgKDs9+60uOT0F7BAP6/Kp5MwUrF47GoUmZHkK
ipK7W2RZk/NTwGoaUiTcQFakwHLamgvBAeSSFEzqs0vhGk9WpkDnek6NbRq5
PAWuxb/DkE2uTEFss+bLKcz7cW0KZo/9uXHoJbKq8/rER1Z0vUduSMEJ7cuN
716Qmzqvr2Lr9pufye2d+WaN2p/3h8ySoGziIM+4vsz7vwTn9hfNtRnJvP9L
UKl6GTbcgHn/lyDzrHZknTHz/i9BvxFr9u5eSdaTwLRm6mJrF7KhBOOiSm/8
8CPPkSAoNzltVwwZEiywKfhlKCWbSWAmOBZ8fjfZRgL+5ATHBUfJ9hLUTNmm
oyglcyT4cfbs4CEVZG8J+tROucR9TOZKMHXiltjzDeQICcRv3l780UbmSaCp
LWueoMbs/yTI+rNEaDqY2f9JoKwc9WH1OGb/J0Hn47V9lRGz/5Ogo8GtfeES
Zv8nwVe1PPHQVcz+T4J3GTfOv+Qw+z8Joo4J++wMYPZ/Ehy//qlpThy5XILN
d53fXJeSKyX4FBnnit3k2s77edeyIfcwWSVBRHW/lm9nyA0SvA526THlOrlJ
ApfMoXutH5DbJRjKCTN2ekVmSWG2pcXHuomsLoWBofuhyX/IWlIkLXgb/aU3
s/+X4sDBBv9dQ5n9vxQj7aZp6E9g9v9S3PepeXDAiNn/S/Ez28Sly2Jm/y/F
kluGU5daM/t/KU4kXq7d5Mzs/6UI+uLWGO7D7P87P1/wttkrjGwvxZbXgYL5
iWSOFKc9M4y+ppG9pUjsNnunZA+ZK8XFtwWL1Q6TI6R4NFRx172YzJNi2LgN
Dw5cJoul+H3B7POVO+R0KdZl+ZRcfUzOlKKPlWHlwbdkuRR/bXkPPJvJ+VJY
9Sr2UPtNVnT2+5Q7LkmdOf+R4rsy98zbgcz5jxT+z1OUo3WZ8x8pfiWfrDee
xJz/SHF589+qWTOZ8x8pxnd/OVkTzPmPFBVj12YrzZnzHymm5jTV2qwhN0kx
+kWt6MIGcrsUs0VV9j19ySwZFiyaz5ocQlaXQSNIx3ByHFlLBpla/709xWQd
GcLMwn6f30Jmy5BbaKphxZx36ckw5da0qLO5ZEMZWkbu6f23gDxHhq9aB6JG
niFDBtEdtmiIkmwmQ7dFis+N5WQbGSJYJ8K2V5HtZbi91OLV0CdkjgzRlcFt
Ya/I3jJYfvsSe+w9mSvDah8Hk9Kv5AgZLrmMVpMz53s8GWabZ+136cqc/8lw
/N1H1VcNcroMTwYYZmzoT86UIb3QRXpAhyyXYYLIOeeiLjlfBm+dbocV48kK
GTb6D4+JZM4bS2Sweu/ZqmNEVspQx9rfnDqPXC4DtyXJ+inIlTL0Ezz88tuU
XCtDyHbb4u+WZFXnfMqvC66tIjfIYDeg/zJfe3KTDAlz/6t740Jul8HMpsF4
JnM+ykrF+IkyKydvsnoqDA4bs9ZtJmul4vRIi6V6QWSdVNiK9PreCyOzU6FV
stnOIpqslwpL2ZPee5nzWMNUSL85TLuaSJ6TiiOfuyuVSWSkYp5o3OmtEub8
NxVzjswdNC+NOf9NRWpb67PTW5nz31Q0h5lpa+xgzn9TcWm+01XDLOb8NxXf
W3d8m7KHOf9NxeGAg8dZ2cz5byp+NAV3O5zDnP+mwk82s+uEXGb+qahd73Eh
Ko+Zfyp8DpWvyM1n5p+KNTXciweOMPNPxbjYC0aRx5j5p6LnmPXlY48z80/F
SbXVO/MKmfmnov7Ct8t/FMz8U2FXWu875SQz/1RknNM/M72ImX8q3v034m7f
U8z8U3Gtu/fjy4xVnXmih/SwLGbmnwpT9/T4AsZNqdhkmRFZz7g9Fb8mGY9v
Y8xKw91WtXN1jNXTUNz/VoCcsVYakgrOxc1lrJOGXk1+Y48y/dlpyGJVZrcy
16uXBvycMX0oY8M0nD20THcwk29OGtwn9iv4yORHGhSebWP2dt6f/wMUwLWS

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Pj85ts0Xyfp8aMd1T/y5l2zER3GIce2MJDL4MJzl/XezC9mMj3AD2zEaIFvz
sWmj1rUKNtmBj74afeqiu5E5Xe+nli61aPKn/vm4+cpi75wr5GA+tFw3dkzL
J0fzkWkU9tdAQObyYbrQ3tDEiyziY+FR+1yXFeQsPs5UvFmfrEvO5qOhfYWy
qC9ZxkfKcPcRDz74Uf9d+xsX3u95i1zKx4mm/g6GR8jlfCi/LtDwzyDL+XAL
Lz+3P4hczUd5guG4BmtyLR+DD/XeqD6L/JiPmSWSgzZDyQo+hi9/GZD1w5f6
5+PGsziT+gdkZZdXtH3UOENu40OtTrncLZvMEkDY8mndiRiyigAbW9wt+zqS
1QTIP1Ef4r2QrClAXI/Xk+tGk9kC/Nlz+PfyTh/qXwDOrE+8awqyvgANz+Nj
7SrJRgL0/n6o9PsBMgQY2vuUaoGAbCZAQIs9z3cT2VqAL7Eu401Xkh0ESFBa
DJqvR+YIMLWpZ6jZALK3ALePpIjDWrypfwHinxfnX6gjRwtwYsJgrcmnyFwB
emnfW1W+gywSoNqeWxwQQ84SwN2ie+kqJ3K2AA/dNz+xW0yWdV3f39Jj6WPJ
RQLs3TJL/q0XuVQA85rFeyXvN1H/AsQM9HvpeJssF0Dz+7Xx7sfJ1QLkCf71
KthOrhWgRhY3fnws+bEAKzZK2a+cyQoBzo3MyH29jNwsQGzt8Fl6k8lKAQZm
zRScHUhuE2BsWdaMLT+8qP9UZD2sqTnzlKySimUa25qnXiarpeL5qb6jfhwk
a6ZiUe2nL4MyyexUVKm0vOFFknVToTL/b6KVM1k/FVpfhPrRpmSjVLgVP/Pu
nE5GKsaNDZe+0yCbpeJI/2W/Z3UjW6fi5NBR3V5/8KT+U3HDr/f7v/fJnFR8
37Pnc9IlsncqFI5hxkGHycGp6MMP77i1nRydimGnbJbtSiZzU5Gk93FYYwBZ
lIopBXL/zRvIWalo7uM558IKcnYqrpq2rnSdQ5alYk1VTkTSOHJRKtax/4Vq
DSGXpkI4vfGjfjdyeSoWsiTRVUoP6j8VbTbp+54ryNWpyL2r+SCqjlybivyZ
d2O3VZIfp6L8yooXc06RFV37219ZtLGQ3JyKINWnF/rlkJWp2M+eFbZUQm5L
xUcd443duWSWEH1Sum9aHU5WEeLEhyavMT5kNSFO7ovS5jmTNYUwq/edH2RH
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
kFoyjKzs+nzrC/PmjyK3STBAt/3GkXFklhT7I57c6qVHVpFC3rE7dOksspoU
+ZUnRe7zyJpS7EBxozfIbCn6uc5cZLuCrNv1+pUasTqWZH0pFi6386i1IxtJ
UXpA5Y6HIxld+x/iihtdyWZS5IYZBhp6k62l6Pv+iWVEIHP+J8XRQyt77Ahn
zv+kuNe6zz0nljn/kyK0WH9lEpc5/5PChS3NWJHKnP91Xe8k4aBv6cz5X9fr
PxscStzMnP9Ju55/vsz7vIM5/5Pi2Q2nvEW7mfM/KYLWBMqD8pjzPylsV7rH
pBQy539SPLW4fSy6mFwq7bo/32JmVUoul6Iu4uvkPmVkuRRJj5IXyM6Sq6Uw
cpznNYI5z6yVQhETsC2ikvxYimi/h8ePX2f6l6Lk4ebiOzeY/qUI3jIh+NYd
pn8pZlnxWg7XM/1LMdeg90jfh0z/GdAUJ73p+5TpPwMbzGYsEz9j+s/Au/03
J39UMP1nYHkWL2vqa6b/DEiW/A2yfMf0n4GijI2V1h+Y/jPwxsM8xeAz038G
bo9oPtbawvSfgagrL0xzmfNdswy8CueYaf9k+s/AlIQxp3m/mP4zEJHtsbWq
nek/A1t7t73+9IfpPwNfC42Of/vH9J+Bis6hrCedTP8ZKJuj2rCvG50vczNw
5tcMixU9yKIMBHH03e/2JGdloN8VSz2j3uTsDGj7eJcl9yHLMvDdqnVIiQq5
KAOVZwauO9OXXJqBf1VeOw6oksszENDD7l1wP7I8A4LLt111+pOrM3A2LVDn
GOPaDDR6RixgM+fhjzMQP7yqPpSxIgPPTVp6HGTcnIHVuWNazjNWZuBSxfzT
pxi3ZeDtksvxGYxZmZiX+3aTOWOVTDyqFO5tZvZXy4RX7+krfRhrZkKxe9CW
W8z1szNxd5JawRDGupkwn3n52AImr34mFiW7vVzBfB5GmWh3b/I1ZD4vZOLr
/WeJql2f5/8Baj6gUg==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {0, 2.1140123286112513`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {0, 2.1140123286112513`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"distance between [x] and \
[x\\!\\(\\*SubscriptBox[SuperscriptBox[\\(]\\), \\(*\\)], \\(++\\)]\\)\"", 
         "\"distance between y and \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(y\\), \\(*\\)], \\(++\\)]\\)\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7104160439029408`*^9, 3.7104170373778267`*^9, {3.7104170796595383`*^9, 
   3.710417115903936*^9}, 3.710417260239603*^9, 3.7104175156452847`*^9, 
   3.710417701094644*^9, {3.710417844511668*^9, 3.710417861073361*^9}, 
   3.714323149124469*^9, 3.714377986495318*^9, 3.715627093324769*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_error_distances.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.710060336662673*^9, 3.710060340697529*^9}, {
   3.7100604181923227`*^9, 3.710060477942663*^9}, 3.710160750656435*^9, 
   3.710160784594808*^9, 3.7101609042091513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error position", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"errorp", "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"stateList", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "NN"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], "+", 
         RowBox[{"M", " ", 
          RowBox[{"stateList", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "NN"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "14", ",", "15"}], "}"}]}], "]"}], "]"}]}]}], 
        RowBox[{"m", "+", "M"}]], "-", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"pd", "[", 
           RowBox[{"stepsize", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], "/.", 
      "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"errorp", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"errorp", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"errorp", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
          ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Ticks", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550255215838*^9, 3.69855026401581*^9}, {3.709817262583048*^9, 
   3.709817275977496*^9}, {3.709874481529686*^9, 3.709874507059774*^9}, {
   3.7098745543810663`*^9, 3.709874557062729*^9}, {3.7098745895655403`*^9, 
   3.7098746220978394`*^9}, {3.7101608244263*^9, 3.7101608638659143`*^9}, 
   3.710227185662554*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/Y3DJsMe7J3LPHUBsIT9bvmg7A2wlO2cYFxQAMvZV14Fdr8PK9ipEzo9/wUr
2RbWJ36I8T2TzJaZvfUaA6vYpRaxvZbAGWyzxtbD42E1+0izs9u3wznsnGyz
BWfhPOF6F7z1ewQXsHXVI679gDXsoJInCe3wfVXGPt//2upBsJbdwvTTSxe4
gl12eNJmX1jHLrp5Y2siXM1+vDjjQxZcw36+ZOeWfLiW3aaycfo1WJTM7duf
Pn8Om7BDPFxW/YTN2Qvsgpa1xPegBXv3m+ArVrCYnaVO8B0JW7FLD1csmAHb
sjsd2Lv7L9iB7dd78NhwmNjvjp21Xwk7sRV5G6K2wC5s96E/2u6HPdg7m05u
bPg+lbClQTf/vARL2UHtvnyogOXsVBOz6uewgr0qLm7Qf7CSXaw7XCmajfqz
b6abV5jCKrZn/Sb9LOCMZOF7pdWDrrCa/SZtxzNrOIf9eJ6d02A4j33qvaPx
aLiAXWsyo+NEWCOMX/5M5QyXsTWFyRI3WMt+tfJc6ly4gh3dsW+bRbBOaJdP
+bkUrmYnKQvH+MA17E2DW77wh2vZ9h5vX8lh0UquX+AL52DYhH27JLtlKGzO
vjvgzNAw2IIt7vfsrMFittvewgMGW7Gf/35TZzjelt3lZY+DIbADu3Jp69Ig
mNid8/zIcD1O7M+9H3U1XK8Lu2RaVz9v2IPdIuutpSGvRGjfWDdIAkvZTTYb
FcyB5exbz8p2uMIK9rTEP+qmwUr2oxGxhRMM9Wf3VX6sHmWoP7t0ca94Qz0z
2B6rHq+yMdRfyCt+LepuqD/72YVGz9sZ6s8OXWUyvJmh/uzv2iMiI0P92d1c
bw2pxf1Yxv6j+aiq17BWaB9R9PMhXMG2Gixecx3Wse/EDU8rgavZgbm6psfh
GvYlyZNfu+Ba9go7C69NsGgVicbku05Mgk3YN/4KUIca9n/YK9JGBxt+vxbs
XbJtmj8Nv392zOtFK8nw+2ePPeNZbmP4/bMfuSWp2ht+/2xR2VbtH4bfP9v5
3+VrP+J548S+eblt+QPYhZ24bcjqMtiDHXzyzNUjsIT9tPkaVSYsZZ9uvuy2
4XkoZ3unhatlsIJ96q7Le3dYye664k3JKDiZbZXep3NPWMV+4va6XlM4Q5iv
2c38Pxme/+wTEeGL7hqe/+xvl4x0pw3Pf/b6jRkvdxie/+ya6a3ikg3Pf3ZJ
+uxsP7iMndt38gwXWMvu++zCWju4gj3iyLH5bWDdKlKmrf1YWIv3WTV73fIl
+yvhGva9tJfWRXAtH3/woqfjNliUQkqXrv+8jIFN2J/XlPdcAJuncL3fRX8b
CVuwxY32Le4Ii9lnVg5Z8sPw/ufjnb//8aPS8P7n9qzibzYnDe9/bj/Z/sO3
TYb3P7dvaVYuCTG8/7m9ZVTgkhmwC9v/d2H9frAHu7fRmtGNYQk79/CF9s+x
XpHy+aRvnTaeheXsSe4fDmXCihTSfCG1bzisTCFSHLO/OANO5v72nqsv9oVV
3B6Qn+xvDGfw8SmHjU48xHpLzeM3b/BoRz6cw/29f/w3RAXn8fmmru4WLIUL
+PhjjhPdybD+4/Zfo0Y8bmtY//H5Zjo+bPse60VtCqmHbjapPQdXpJD4g9Wm
+ExYx+OdX7SoMAiu5nbvMePUTnANn//GTAu7TnBtCukK95wI+YT1rSiV1JNu
f11aBpuwq74fbWhYD5unktgtv3hOIGyRSvI+Vt8XjofFqUSr3thZtIOtUmmt
z+gkk7tYf9umUlmDvB+T4mCHVKqJnhL6pTtMfPyJrpubXcL63onHP2Jnni4z
rP9TSdPNa9maFob1P7f/s3r91+P4XpCk8vp4fvUND1iaSsrvsp49vuN7Q87O
G/7+TSasYFe0f2o9Clby+S1o1/OH+H5J5vbRJ693iINVfP4ufg3LO8EZ3H6h
1ZNf/+B7SM2eME6UNw/OYZ9e8O2x4Xsqj48P3ey1OQMuYPepe3xzEKzh/n+5
1U//F99rZWzXaXOrZLCW/WH68uON4Qo+fnB649a7Dd9/wvi9kuo5wtXcfulq
YvQ9fD/WsPPFm1eEwrXC8bHO3ZvBotUkOtzEzjUH36Mm7C3H/rVwhM3ZSX0L
gu/i+9WC7fbCzzMQFrO79oj4aAJbsQc/X9JOje9hW7b9hyP3B8MObLn21cir
+J4m9p1/14xaAjux1zXpoqvF97gLe/+Mrt3XwB7C+NTCtBssYXcfErA5H9/3
UnbnOSeuTjF8/7Nzu15wPYP9AQW7U6sni55j/0DJ3u139JwpnMwesdUqfiD2
G1Ts4s2222ZhPyKD3fjdiTbRhv1/dsL+nR//xn5GDvuvYJ1dCfY78ti1Ic4P
nmE/pIAdLdd+aAhr2OL88SG9h6D+7A19U7wmYz9Fyy4dH1Xug/2WCrZT83f7
V2E/RseW2p6svw/7NdXssvuHbpVhP6eG/d+r7b1eYL+nVuhfJvluZNj/WUMi
ifL4zK7YHzJha8JvecZi/8icrUhaOywf+0sWbI/63azeY/9JLBxv3HpQz96o
P1v9+ZnnvF6oP9slsXnJuh6oP5tOmk0/3w31Z0tfTzevw36YE7umfIypjRj1
F/o/U6tOW6L+bPO0U2ld2qH+wnjO663jW6P+gtMfLn2Cv4fI2eKkzRsSTFF/
trJ9/Yujsb+nZIsWz/lRY9j/E1z8vXvhK71VgjOvtck5qt8/zBCOf3C5T+57
vdXCfAWrfof/0jtHaH/ZLmXNH6P19Re88EHbJ031LmBrHxwoy2yht4Zt+zD4
g1MbvcuE671f+/1zO721Qp7Sbw92dNS7gl2hzpqwF/upOnaG28XfSuy3Vgvj
NfBuPRt/j6kR5uuH//IBPfWuZaseXXFsbKW3aC3P78ZY5yfY7zVhiyYpdxT1
1ducbeJ9Y/gm/L3Ggq3LjGkhx/6ymJ2wZFzzXdh/tmKbxy2zW4/9aVu2xfg4
/zjsXzuwte/Kivyw301sv8uvO82xH/0/X21e9Q==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/esA9t7IqWvbTPVj3N1PPG41WYjjfUkUHL2zierHeMwxjrUpWYT5edc+qJ+h
3xslGC+Zq/llLFmKPvnq8bsDKVQ/jndWLf3HQLJ8HUiv7UzvuyOZ6kcLOk0n
9COzEkD621/VYlsS1Y8WiT2W9yNz0BamtWt2bKD60ZY+T9y1yJAArOLJWlYH
hVR/Aggf8Udo6JL5GO9jaxK6OpHqR1e82hQTtZ7qx+tPzjqgvzuB6sf44ty/
scXrqH60gLfE/XE81Y/Xn7A0r+2Ko/rR1/T3V+qTZeif+7njebFUP7r/n+/t
W2Kofhxvz+Y3Uyqjqf71ILxlP+LSryiqfz2wymZW7p1J5mDc+n3vC8zvv1yM
L/q9WPNcBNWPLin8fKgjnOpHXx3q62RB5mO+YAiM3xFG9WP8jfHQ/i9CqX6M
TykXd+OSMzD+I+PsrxQB1Y92T9OtKQuh+tFHegelhQRT/ehC1rxhk9ZS/egx
jTe9PwRS/ehwVd7K4gCqH11x2Pddoj/Vnwgsgz17ui31o/rRvKDjO/R9qX50
y8Qtyao+VD86ynjx3dY1VD+aO2/ycpkX1Z8IQtW+G4dUeFL96MF+DZ2nPah+
dMu/hq95fKof8/sHnq6zcKf60XndkgqtVlP9aOOdgdaOK6l+9JCYD5t9llP9
6O/LZPYbXal+9LeLkxNOLaP60cMf8b+/cKL6FdcP0947ZCnVLwSW1p/Zlqsd
lFZD9/mhc8VpMT0PNO/u4ENdC5XWQee/UW26uICeD5pV29s51UJpPbRB8P2L
PkDPCy2QwKWC2Uobo50HCtUKDOj5oUsP6zXsmaK0DVqvc+sf7TH0PNGcu5ud
XPoqzVPMt7qqUsKap3y+ivFbbjvKRyjth66++0g/Wl9pAbrzk5lK43SlY9Cv
JXOutRoqLUQbLxSbP5ijdCq648lIgQMonYHOKHVROTFf6Sz0Vy3HLd8slRah
wwr5hlxrpcXorDiX2e4LlZagg3ckXRfaKV2Kbm0p6bVnsdJSxfMwn8vNXqJ0
Nbo5od3wjoPSMvSmHxm/qhyVrkcfOvBQcHap0nL0vb2hZdlOSreiR2TVvxE6
K92Gbp9rpum+TOl29N/te+2NXJRmbQCWidPhs71dlVZDjzhS51RHZqODZwqt
c3hK66DNX+UedVuuNAftqD0wbugKpfXQ6vruTTIyF/31zavPG1YqbYx+/P3K
+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
z7LP5Hp0b93B5b3oPFmOHt9uFzGK3IpOWJT525DcpshP/mlnT25X1DsrNtCb
zNoGrJVTx/LWkdXQWwL/DNhNZqPDh/Xef4Ksg5590OljJZmDto1s6l9H1kM/
dK/4+57MRXvP+VDWjc7DjdHBA6ItBpMB3aLpc2Ay2QbdvLfqsjnZAe01ZJfE
hcxTxE3kIYHM+Tp67sWSzkSyH5qfoOOaSRagp2zSShSTY9ALfxZFlJOF6MHq
HUYycip62/if1a/IGehJF89M+EXOQg9YwXXuQ+f9IvSnog32I8hi9MBNpwZx
yRL0jrMVhfPJpej5E8vZy8hStNbPs/N9ydXoHgaF82PJMnTSoLPsbeR6dOqr
msJsshz981u/wafJrejbZ6OWVJLb0InZg1yY3yfa0Y5zf01sJLO2A+vSrLE1
X8hq6MvT8uap0O8bbDSvdXOiJlkH/V2/Lm0MmYN+d/dAwAyyHvrnebn2fDIX
ffHp2R2OZGO0vdHwej7z+wn6/uMJn0PINmiVB/KH68kO6Hu2S7ekkXloVtDm
ftlkPvrN2m1uJ8l+6I6d/omlZAF6z9gpITfIMeij0Y1THpKF6MAPOy81klPR
pm8X6nwmZ6BtX2hZdpKz0EGWXXN7e1P/0e+zB/QeRBaj3UNXHB1DlqATnF73
mUYuRfd4fnH+HLIUvfPM24XW5Gr0toh1HCeyDK3+fP0NN3I9+umRzjkBZDna
MrnbhkhyK9pg4f49QnIbWutqbew2cjv62U3JlL1kVhqwehnaFInIaugj3470
KCCz0Ss+3ZpwjqyDjht2d2glmYNmx5Q8rybrod+o7RDcJ3PRV576PnhGNkbz
VOxUm8mAjs227P2JbIOeXcNv+El2QPe7XpD4j8xLU/x9Tf/Wi36P46NzmroM
2WQ/dPaOUXY6ZAF6U3/RNA45Bm1etv31BLIQrfvti/80cip6pn5DpSE5A+1y
37XFjJyF3hsS+tySLEL7b5+VZ0cWoxsvS8yWkiXoz8c/5/PIpehz37rkbmQp
Wrb8/fs15Gr05pyqmwFkmeJ+0tMjBOR6RbyX+9dIshx988s883hyK9po/lwP
IbkNHfTHZ+lGcjt6w5SbWlvJrHRcb/8MFKeT1dCayZ7qu8ls9Gf1Uot9ZB30
7MZYu4NkDnqJyzndw2Q9tGVddO1R5vdStMXTGrt8sjH6y/ub+0+QAV2dJygr
JNugNxXXnTxDdkDH3O8VfJbMQ6veH9D9HNN/9PvdKgEXmP6jK/u1Hi1j+o9e
ZCk7dYnpP7qvy62tFUz/0eGhjSaVTP/RoU/HX5Iy/Uc3vj3e/wrTf/RT9XCD
q0z/0fNv7518jek/uk/Z6F+MJehnW8dkXmf6r3g+vcTdbzD9R7uqV1kxrlbU
l7luBWMZ+sDJt+aM6xX9iR3cyYwnRxeC9hbGrWibVV9bmfnbFPcLl4cxbkfL
E1JHM/fP2oHv6wp+RxXTf/ShGy75TP1sdHts3Djm+eigVeueRTPPj4PO/LE1
h3m+eugidtZe5vlz0f0SBnox/TFGC0+r/1//AO1ltC8K+/s/aq37FA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92nlcTP/3B/AREsJYC8nYs8TYy3qyZquRKFKmPW0mSStGQooMUVkbe5b6
hBDC2LPVWD6kLGMPIbIUPnzP/OZ1f/75PJ6f837fc0+vO3fuTHXwmufkayQS
icpri0T6/xr+VY6c/3//7pzD/6BeiqzwMf9vE3rp9VwUHiZYTOdf7rCopRDc
gnaZfb3wOUSwOaUEDysbHyTYgjybNbQ1DhAsoX3va7b28RHckcJ91hy7Mkdw
Z1pS2kpSNEtwV6qzJW2u/XTBVvT+/JYmNo6Ce9DBlZKlmfaCe1G/y57tl9oJ
7k179ueOeGorWErdbw7vVtBXcF+a9eFRyzbdBfejUp1m2K/2gvuTbnCfS56t
BA8gS6+eNxxNBQ+kd81bB1ytJXgQdb4/ff/177fhwXT9xLWNbu8F21B593nW
cU8F29Jkiztze98VPIRUi1eMWHBF8FByckrb5HhS8DAavfyN94WDgofT3+JN
S4u2CR5Bbx7NvhOxVvBIavr3bN9TSsFEay8tiNwWBiuJmh/ZFNnBS6jb0Yyo
d0b2TkLdjp5UVb9uNkqoj6JP9rM+Lusr1EeRaUixbqtEqI+m16EBy+Y0Eeqj
ae/NnRm3/tOiPoYquy7Tlb+HlWPowLYD5kcfCvWxJO8Q8Nv6qlAfS+2Mroxx
yxPq48jBaEPWsB1CfRyd7xv66O4aoT6eFtzRrO8YI9THU9MV12J7+Al1e8oV
pY39MFWo21NUjGhr8HChPoHEZgesDlgJ9Qm0JbJq/b7mQn0iLZ765u/N38Wo
TySyKet8+zYsmkTORxP/9dgr1CdReddHU6JjhPpk8llx81InB6E+mXp/Gh7s
2UGoT6Fm5c8VA78WoT6FXBMtfu68AoscqM2lh92zM4S6AyWYLbRwCRTqjmRy
Nb1811Chzn7TKDPNVKjL6LtrzsR+j28ZTDISvetfGZ0NK2XU4rRFimIRrJFR
YatVFq2nwKKpZFrSZs1CC2H/VPq65N/rye9vYv9UMjf/e9LtFKyZSpt/1rJ5
mwiLnEiS4dh2sAtMTjRCNqa/fRdhvxM1Vpjat6+6gf1OdMEvqc05DSyaRq9H
jvDpkQLTNLKa1/uBtxusnEZda263C7US9k+jrFq/Syd9u479zmR6tXD/3/Mw
OdORJqvbrU6Blc70vdH581WzYI0zRRX8am3bTdg/ndKOlu3wqLqG/dPpQqTo
lt85WDmdKob/NXZOhjXTKbDTrKNWLrBoBpnci7J+01HYP4MqMnYWrvtYiP0z
qOu1muIep2DNDPqTGrUibzksciEri09d+06FyYW+PDR6udNC2O9CjYf0KW9Y
fhX7Xagw5Or00KOwyJU6y2vG3VwMkyv5Xbp9q9tEWOlKSqnd1/iWwn5Xkg/q
WPBUdwX7Z9L9UGpPh2CaSaIAeZO9kbByJhkF2i9sPhrWzKT82tcHJjUW9s8i
crrZzbT0MvbPIsm3GZZb9sDKWWSzc9sLmzBYM4saTDYd8mYYLHKjQ7emPdpn
Iux3I22TyEVx9y5hvxuJtpQU+qlhjRvNTrb3CgiGRbOpvLTZ63gbmGbT9h+N
3p6oI+yfTR5b9leb3L6I/bNJ8ei/zZHbYJE7tQgpdagbCJM7HTG6n3x0EKx0
p5Iy9wvLagv73anQ47JbpPYC9ntQwLXpp9Zug4ld4W5bFAgrPehIhZ31ABtY
40GhdZNfXKgr7J9DceN+7Iy9ex7755B80qqDc3bAyjlU+Tp9kGIerJlDOZrH
C3OGwyI5SZ8lZrQ1hSVycu458Xx+qQbHk5NY4yNeuR+Wy0k96cz2lVGwUk5b
h7xdfHo8rJbT83+Hn+lkBmvkZJJ09lz8rXMG6+Q83/ZbPUJgkSeJS2rS7RrB
Ek/6qttpfC37LPp7Uq7b0m8XHGC5J1XOyh7Qt/IM+nuSNnp1Ysv1sNqTWiz4
uD9sAKzxpMQ13ceNf1CA/p6kuj7ob3oMLPKiDT9vBflawhIv0qUtNTt84TT6
e5E2sjQ+zh+We5HSM7zTNVNY6UV5gS18Mo6cQn8vqhhZtPu9K6zh449pOfTS
35Po70W7Ux+FddoHi7zJ/EXuqgaOsMSbTCbdzY/5kY/+3lTxZVrPCDUs96b8
vb1q/5oAK70parqba6OvJ9Dfm2Sxv22yt8Mab0qM9t1fNgHWeVOLshG7N307
jv4+VJi8vU35DljiQy1EHb9edYDJhwIcTJoM+X0M/X1ow4jJNPIArPShrVPO
TitxhdU+VL7X0tTYBNawWw7udO1EHvr7kMWnrxM6BsAiXzL5HG/VrDUs8aWo
9t4em64fRX9fEmUkxufHwXJfksrDOin6wEpe34euap4fQX9fUve7//5AGqzx
pa3XK4z7TIJ1viQf12fFFBEs8qOAdOdi4+OH0d+POteyJbdgmPyILv7oPakT
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
fS9lnr8lrGCrqgs63pyA/Nm7+zdNjIaV7OqbERu7wols+eQ6E+7aI3829Xmt
XgJnsE2eO2/pCav1/U5uGvRgPPJnF1Y0CouHc9nipDYTrOF8/bxhNmcejEP+
7LwJlTeWwoX6eSNLw3vCWvbsZplH741F/mxp6bdVi2AdO67n3m9d4HJ2YtWK
b7fGIH927q7FiRFwtT7fzsuyLWDRCs7vyibvi6ORP7vO4Af758JitiZ0zpIm
sLl+/S7fF3mjkD/b1KbXvzNhK/alQ3Wc/9ghf3bBGsc5O2Ebdi+vuO9jYWLL
N9dv/Ra/D7Nnb1iUcCUZlunrZqv+WMOu7Cj7hKWZI5E/W/b7duvnI5A/O1+c
fLkTrGCXDJyd4DMc+bMTyxrP2D0M+bOlxquGvBiK/PX1Trf6doBV7KzHNUM9
hiB/tvbDhJmbbZG/vt/H5kn/2iB/tqTX9aImcC5bFPGz24TByF9//m+npC0d
hPzZldcS25wciPzZ5WOSjn0agPz184+ZHNAFLmFX277oP6s/8mfnvlvUOqUf
8tfvt/Vtc74v8mdnVP0aXCVF/vp+G8+Gd4ZFK/n6Hrhi+/7eyJ8tjgvLMMHv
K8X6uqq4xLcn8mfrdnt5n++O/NmadpbD2lohf7a6TVf/8K7Iny2tVVx+rTPy
19eNt1227IT82drjo43md0D++vr3ieNXtkf++v6j9rp3s0D++v4nWzldMkf+
+vr2BX08WiJ/tqjBF9G3pshf74/9dzdthPz15xu13b2/MfLXe0TvNdv/jDDk
r3edmMrrlQar9PsTUi7LrxqcoXe71KRfr84a8tevHzg5/Eu1wVlsyaHPj6Jq
nzPkr/exXrmLGhicr//5pve+cVFssEY//9dvNpPw++JCfd19WrN/zQzW6n9+
E5+N92xrcAlbWfbx2idLg3Xs6ggaQx0MLmfLUvefrN/J4Ep2uapi2L3OBlez
VacyL2d2NViUyPWgQZOCrQw2YWdsrXXZtofBYnbJPGkPk14Gm7PVF7VhD6wN
lrCrzxWv39fHYCu2T///7AqkBkvZL5v9bbenr8E27F5H81xT+hlMbIl4xofI
/gbbs6MGmj7wHGCwjG2S+Fk8eaDBruxHTZqlDRpksFx/fE2QZ4fBBgfo65c/
hpjaGKxgVxYuOv4DjtLXR34c+AK/r1eyW+SZvCkaYnAi27TJqkunhhqs0s/7
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
7MyILdXv8X5M7ILY+gMuzTz3P+Fx5KY=
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.6254205430608398, 0.01011082329079388}},
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.6254205430608398, 0.01011082329079388}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698469943974267*^9, 3.698469970044737*^9}, {
   3.698470107328289*^9, 3.698470116667494*^9}, {3.698481384616886*^9, 
   3.698481412261808*^9}, 3.698481524038104*^9, 3.698494014689568*^9, 
   3.6985036157679863`*^9, {3.698505664074839*^9, 3.698505675203444*^9}, 
   3.698505706744568*^9, {3.698505738431473*^9, 3.6985057860874443`*^9}, {
   3.698505847732589*^9, 3.69850588992857*^9}, {3.6985059216233892`*^9, 
   3.698505938460219*^9}, 3.698506081280951*^9, 3.6985061756350203`*^9, {
   3.698506208351253*^9, 3.698506238026346*^9}, {3.698506442623125*^9, 
   3.698506459723701*^9}, 3.6985064985028677`*^9, {3.698550258678968*^9, 
   3.698550275942671*^9}, 3.6985506183401127`*^9, {3.698551257631946*^9, 
   3.698551269709711*^9}, 3.698552478288631*^9, 3.6985606831794577`*^9, 
   3.698560763235948*^9, 3.709811279824759*^9, 3.709811725258622*^9, 
   3.7098125180858183`*^9, 3.7098126082726*^9, 3.7098127693302526`*^9, 
   3.709812872527194*^9, 3.709813041384952*^9, 3.709813280931357*^9, {
   3.709813544088724*^9, 3.7098135536429663`*^9}, 3.70981428310697*^9, 
   3.709814634868668*^9, 3.709814887765304*^9, {3.709815067288465*^9, 
   3.709815084432659*^9}, 3.709816689834647*^9, 3.709816925674377*^9, 
   3.709817276631494*^9, {3.70981760848983*^9, 3.709817616633629*^9}, {
   3.709871144126614*^9, 3.70987115739559*^9}, 3.70987146967312*^9, 
   3.7098716264379387`*^9, {3.7098719113936853`*^9, 3.709871920321082*^9}, 
   3.709872098333021*^9, 3.7098721299063387`*^9, 3.709872367106674*^9, 
   3.709873800074621*^9, 3.709873852186593*^9, 3.709873990470662*^9, 
   3.709874162299107*^9, 3.7098744336096687`*^9, {3.709874507980527*^9, 
   3.709874522506502*^9}, 3.709874557776506*^9, 3.709874837660089*^9, 
   3.709875994832974*^9, 3.709876214561326*^9, {3.7101608470391417`*^9, 
   3.7101608644758387`*^9}, 3.7104163260350657`*^9, 3.710416371234131*^9, 
   3.710416411730682*^9, 3.710417125819791*^9, 3.7104175181488323`*^9, 
   3.714323149913216*^9, 3.714377987252537*^9, 3.715627094468287*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_error_position.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{3.710160784309525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error velocity", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}, {
  3.709817225495492*^9, 3.709817226500821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"errorv", "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"stateList", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "NN"}], ",", 
             RowBox[{"{", 
              RowBox[{"25", ",", "26", ",", "27"}], "}"}]}], "]"}], "]"}]}], 
         "+", 
         RowBox[{"M", " ", 
          RowBox[{"stateList", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "NN"}], ",", 
             RowBox[{"{", 
              RowBox[{"31", ",", "32", ",", "33"}], "}"}]}], "]"}], "]"}]}]}], 
        RowBox[{"m", "+", "M"}]], "-", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pd", "'"}], "[", 
           RowBox[{"stepsize", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], "/.", 
      "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"errorv", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"errorv", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"errorv", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
          ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Ticks", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550255215838*^9, 3.69855026401581*^9}, 3.7098170446596127`*^9, {
   3.7098170991440277`*^9, 3.709817188882389*^9}, {3.709873588937932*^9, 
   3.709873589469365*^9}, {3.7098745700898848`*^9, 3.709874581133526*^9}, {
   3.7098746331639423`*^9, 3.7098746442518673`*^9}, {3.710160912325617*^9, 
   3.7101609155167007`*^9}, 3.710227183191496*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
i52BnufNaMn8iL3mOvT8R6uVuCzRZM//ru3N1nK36dLzPxufpwOW+mrQeKGG
jj/hbbp9HD3/0ZV777tp0/iiiVYUB5+XGtD4jw48E2Iz3ojGfzT/+tGLFTQ+
8dGNKZsNp06i8R8tOvlr+XkTGv/RQs+KYl0+jf9oyd2FLu/Igq76tTvmVtB4
6IbOidoaGGFG43/X8fwIrzCn8TMQfT/5QK8Osgit7fEj4OJUGv/RGzyXXMui
8VeMln36pOFoTuM/us5hmtNgGq8l6D2n73s+IBei5RcP2RRb0PiPLox+9NKL
xvtytMW2E6A/nfJHn/9wbWEzuRq9JvzJf4doviBDb935j2P4DMof3XZcb6IZ
zS/k6Oi2T5I2cmOXvzVHV9lQ/ujqt02342ZS/uiC1f7z2XxF2XV9esWuTCa3
o+331I9pInNy8HoOtllnRfMdNXST4Z7CIjIX7bC2w/4HWRO9Rnd5wTKaL/HQ
zkNeJZ8iG6Dz9R+3D6H5Fb+r/59be4vIFui2s6mlt8iAvntK67rBbMof7a/D
iVtDFqBF556UPye7oWMNwz2m03xOiFYUSHK3kgPRnpFG5q1kETpEx8ptHs0H
49GyQ/dbS8hi9P1M7e/fyTlortGCsEU0n5R0HX/LocX7yIVd10e6Y1cHWYo2
WpLn7GxP+aMbuZzV+8mVaJPcnDe/yNXo829vXlhE81cZWjVU/L2UXNd1Pg6h
67+S5WjfhcGx82j+24huLfE6U0hWoBPXz1n8D7kZ3cnXn2G5gPJHB7oMjc8h
t6MHDpyu8pDMWYfXp/jOE32ab6uhW4eP4ESSueiT033DasiaaP9Jo8b1pfk6
D33e6pDuErIBWlm62a+EzEc3uq782Ey2QM+u2XPK1InyRxfkDZIlkO3ROxIX
971IFqB9B07c0ofeF9zQxiFByxeShej3Wm89NpMD0ePrs7Y/IIvQPYp3qQ2g
9494NE+o4m1CFqPnTItdsoic07U/p/Q34WQJeknwSa6EXIheW7fnwVGyFB3V
r8W8nlyOjtWZZNpKrkRb6vW90p/eh6rRDYtMPhuRZejRL+yr7cl16ITOARr+
ZDn6Rpn5wExyY9f1Xi/eWUJWoJcPO1J7jtyMfmmWlfmQrES/cbn/6DO5HX3F
IfDaAHpf46zH+ZPVCEcDsho6Z01VgC2Ziw6tGKe1gqyJfukwe1UMmYeWff1m
m8/e/9APjcef2Ufmo03n1lypIVugD7ofDXxABnSlWcvuFrI9OnZKeIQqvV8K
0GMd+Q+1yG7olFcm9/hkIfrWlRC/ueRA9PEhn/I8yCL044k1jiJyPNqg7M3u
NWQxWmEYnVdIzkH7pyUNqiBL0HVCrsEFciF6SLzDwwayFG3mOHv0a3I5uok/
6udXciX6hvmn0D70Pl2NNtZ+Fa9JlqE9rbVHGZLr0NVrL7lakuVd10fIGT+f
3Ii2ONRzoxtZ0VV/b/vGAHIz2v3VUMNYsrLreGfluK8ht6P33M3V30zm5OJ8
9OHS7BKyGvr4Yb3MCvb+j357yUTzDFkTbbSuau4VMg89O+jXwAayAdqhamZE
E5mPht3XQt+RLdC3jB+pfiYD2n3sefMOsj16TI+zKr1pPUKAzuoYHTKI7IZ+
/HaqSJMsRN81WsgdSw5E77tQ5WhIFqGHjbk8zpQcjz74x5ViC7K46/h9Bh+d
Sc5BH/H+7TWXLEGHzVcccSQXoi8lD9nhTJaib5S2THAjl3cdz45bzivJleim
5H6jfcjV6LnJfbL9yTL0ms9jNgWT69C2jseswshytE9PnewIciNauOl6VDRZ
gT4rGtozjtyMlvQVmiWQlV3bnxjaK4ncjv65e0tiMpmzAedD7+ZsSWHrP2h5
wKZFqWQu2rfh6VFmTbRbwZaTzDz01dejPJkN0OUligq2Pz5ausxxN6tngbaZ
fcOKHQ+g22ZcTWbHa9+1/fEKX3Y+AnRj+fsv7Hzd0KVHW4wiWf7oIU/1+oaz
/NHm135tWs3yR3NSX18KYPmjRWsX7lzF8kfL6veN9WL5oy+dFgrcWf5o118f
DJew/NHKU2eOLGL5o6M9rJ7PZ/l3He/xl+fsWP5o3Yaxc6xZ/l3Xe9jqJHOW
PzpLx9RrMssf3fv+W+UElj/6m9N/fB7LH73rVYsO+/0rus5XY3wNuz+a0ft2
jOrfh+WPthXY9u1k9z+6esrAM23s/s/D+UfwF80P7P5Hr5/ib/SC3f9ox/eP
Wx6w+x9t0Hll1S12/+d1vf8Vb7jI7n+0q2tDYBW7/9H7Lj9uP8jufzT/lbE1
e94A+qDHDPMt7P7vqvcw5XUWWYCu6PSzTyS7oe/HBPmEkoVo20cdZkJyIFr7
3NazzmQR2l+698dscnyXO8uU5mQxumOaqtSAnIPWL56upkWWoNd4njPsRy5E
9y75qdrBnv/o0pUhRR/Z8x89MGXN+yb2/M/73+fR11vkarTDldjz58kydKq6
xUw23tShnV6EphaT5V31E3IT15Mb0S/vq0xNICvQzjfmHwogN6Onq8gVS8hK
9Ocfan/bkdvRo9v9c0zJnHzgzBq+4tcYshra/g93k/5kLlq/z72xP9j4j05T
sXjwho3/6OTVPxfcZeM/OmlebiYb7/nob34eKQfZ+I8OdX9iWcDGf/Ti5KQz
6Wz8Rw98e6gjhCxAq0Y3qbiR3dD3LifXs/mJED1nSofXJHIg+tTz66c0yCI0
b69rQw9yPPrY6H4nPtB8SIyWSz08/ibnoI/YnrxRQ5agz97L6FFOLkQrn0/l
bCJL0ZuPTLuWQC5Hi2a1L/UhV6L/dn111IHN/9BPPf3umrH5X9fxb3xfo8Xm
f+gx9c9ierL5Hzpbdvj7PzSfbET71Fya3UBWoOc25aysJjejp78Nti0hK9GH
hfe+rCW3o+flGEeGkDkbgfPvYsVfzmQ1dH2w20MLMhc9zKKzZgxZE7384fQY
VTIPfWtGa9s9mm8boO+bT9u1i8xH6xuNfRdItkBvGJ4sN2Pr/+gZQRoeHU4z
/wfUwXiv
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92XlcjOv/P/CxniwxByeRZWSr0BmEhLyzZh9bC5UppbRO+7SosaTSIgnJ
Ntk+kaVCOkhjD6WQI1vGnj0chPB995vX/Tv/nMfzcV3v+z3XvMx9X/dVL7eA
OR5NRSLRxmYiUeP/Y6dO63r2zTy6fWlW8p7SqyWi//fffJruJm3eJhmm+bR1
htyjxbkrOqvmU5lt++3Z3y/rrJlPRQerT3waAovsqGhxTf/2vqWot6PqHo8P
ttx7CfV2pHIoC3ijvYh6O7Iuza693g0W2dP+jBcvLzleQL09WT0KzarZdB71
9iS9fDy07+1zqLenhon203I7wyIHWvBmztgYx7Ood6A3jyKv5G49g3oHUj2b
fZIeaVDvQL6lM0dM6Q+LHCln1X/K7AenUe9IVXR50vmAYtQ7Umnt/XHtW5xC
vSNFDzy9ccO2E6hfQKpO8dKlI/9B/QJqmCa5nFV9HPULaPTsX69GRhWifgGV
aqZ/m9frGOoXku+tqBHfrhxB/UKaMLLP9SHKAtQvJK+Fwx63Nc1H/UISu1z4
ZXzyMOqdSPklYdn6AQdR70TVynHLo3btR70TWf7Yp3hpnIN6J5J02Pzq5b49
qHcmqfqv6njLXah3JtkHl5iya2rUO5NoYnWv2DtbUe9Mqj6Zq6/1yUS9C9Vt
yDuWFrse9S5EfoWizTdTUO9C2rERNm0vrUK9C4lebfb/WRCO+kUk2je2a6S9
A+rZAaLV29OXjNXVs31MZu7wjtZZs4goInqpwf9W6yySk6qtcpj+91SdJXIi
Rapnn03rdSY5SQYP31aXvUlnuZy04z+dVW7bguvLSVyadvVq4g6d1Tw/dMGv
6CPZ6MfX25jlsyZrl85aOekZjlB1jtyD/q5EcTMNzOf8D/1dyTbLKK7aeB/6
u5LDrh6ber3Zj/48//sZVadDB9DflSxbhd8+5XUI/V2pm3L3hI7t8tDflXyr
Fa/Mn8JaV6qe/Ft9vDAf/d1IYmRSfiSuAP3dSKZy/WA6+wj6u1HZsw37JV2O
or8bKc6bHdz+AFa50cA3w87u334M/d1otOLh+WlOhejvRplz3u1IMDiO/m6U
82fMNK9yWLSY6unelQ+qIvRfTHVOcWYDB/+D/ovpv47zYnrUwPLFZDL59MOK
+BPov5gGdrLxnWx+Ev0Xkzs9G598HdYspraKR/F7Ak+h/2JSbbd3zGpXjP7u
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
1LtgRSiJ50Y2cVwi7N9DaV/LrU5jTOG0UNKPOlc86w32++pQOje8oXTdYTgv
lE53jzVsEQxrQunTsnOjc4fDlaHkUpR2Ku473ie0oVS1QvzXxtNwXSj1OPXo
nwcrYFEY5V0b8JfLZFgcRn22FMQbthXeR8Lo8fNXXu2u431FGkaRtu3/sNkI
UxgNSRn2v/yFsCyMfq1zj3PtBcvDKC1pf9XsF3gfUoRReeHQkpUHYVUYzfB3
XVIfDKeFkev2R4/zrGB1GL1OvzjhUBM4L4wWd92x/kMp3rc0YdS7PvVaVBpc
GUYvsj3fzHCAtWHUZvyZe14SuC6MPoo6rSyvxfubKJz6RV3XROfD4nB6vTLG
JzwSloRTYOvy2afHw9JwcrIotJqjD1M4uakzng29jfdFWTituGbd2j0blofT
l5xejk98YEU4zTFbGFUwHFaFk8zoVocbTeC0cGr+fNGJceV4H1WH031leYsW
m+E8vv7wtiu6eMCacLJ8Z3NMNRiuDKewO897jPqF91ttOJVmaUdMuQrXhdNO
q21BuZnC+6+S7vcwH+W2BBYr6Vq921c/C1iiJIOcpy0rmsJSJSn1ZefiruN9
mpRUe1WmSlfDMiW5/Hcy6XMALFfS0c37Bx0eCyuUFDMlI6ekPaxSkmXljaCZ
msNYv5LmVS/4u8wVVnN9Xa/X9c3gPCV1UncW3dqL932NklZNfVssnwpXKikz
cor31ncHsX4lKW59p4T1cJ2ScgrMQvqMhEURpLVfOzDwIc4TxBEUfX1bov9q
WBJB8zxPZnczh6UR5JDjvyLq31ysP4JMWqdJk2JhWQR5dYvMmWYKyyOo2nZk
zambOL9QRFCV5GRxTQysiqBVFj/N8s3gNL5+4KimFrdx/qGOoIaWPQw9V8F5
EZRQ/nzk1CGwJoIspdsHPdDmYP0RVJcxtqBnGqyNIL2Jz2L/JLiO+1d+mlxQ
h/MWUSQZvp9wrMlOWBxJ6tuzfX/PFc5jIklk4NwmtyUsjaS6W1vMmp/Yi/Xz
/D0uTq39YVkkaQ6PHFRsDMt53Gdgn27VOO9RRJL4bOnZfqmwKpJychzj7k+A
0yLJQdrqyeiG3Vg/u3XLmZOPwnncPzZn6A9fWBNJyocbG+z7wZVs55dtnbXC
eVMkZXrPON9qC1wXSQkxJjHOdrAoimR2J9bZd4DF7P3Wc75e24n1R5HIoV37
0cmwNIpymmo69p0KUxRJB9jm5OvBsijSO23456NLOP+SR5FXV1pbEA8roshy
Xby8ry2siiIH53Ullq3gtCiy7fzlyesraqyf+2W7NrVOgfOiSJVxeLq5DNaw
jf/4eLIjXBlFlQ1vxpQdxnmcNooUUUY/7EfCdVEkUX707nJ+O9YfTfR7eHU7
GSyOJq31jMThD7Zh/dGUZu+tSfWBpdEkGX3h5F8/tmL90aTJuHjschIsi6bK
whHPcrrDcvZexbL8PJwXKrh+SNyhRxOE88NoyusauGfE3Sysn/svGJ+cr4DV
0SSOs10zQw/OY4+1ON8qezPWH02imilOT63gymhS9FkVdO9WJtbP1+tzqs/b
QLiO58+sSO3cHhYtI/GO81ccDuJ8U7yMpG0/1B2aDkuWUdqfRoaGbzdi/Txf
uW1+eipMPH9eYrHRYFi2jOpGXHIrqNqA9fP47hH28yJgxTKSFd7I/d0DVi2j
SoNLioILGVj/MtIOzDzm7Qeref7GUYn9DOA8vt6rYd+flOB8VrOM1JcKDbK9
4cplJBl69M1CA1i7jDQTWqzpcC4d62ebRTecVcCiGFKs+j3bpycsjiHJX7sy
W1Wsw/pjSFVVUrMlFpbGkNy5zVDJYJh4/PSh3RlP0rD+GFLnOY3/uhGWx5Bo
sGfPSdNgBY8nVE2JFcGqGKLIFzk2fmuxfvZT7a7Z93AerY4hbWhZrtk0OI/r
S56/LD2VgvWzh25MNJHCley01KKJe5Kxfv68Np/2dusG18WQ5pgyfl9GEtYf
S/KSVWtr28HiWJJ8mPH11po1WD/7j+/f/PRgaSxp5SdvHYhPxPrZcW+vpurB
sljSXJX2EiclYP18fXFc90HtYUUs0abFbR9nxGP9sSRqXT16QDc4ja+Xndmk
xR6cz6u5/4ru+T5/w3lsq+N7Fp6Mw/q5PnH3mOu2cGUsqWT975XeXoX1c/8r
mU+tveA67i9adv7v7yuxfhWpV254uSkF1lORKvTTxWBjWKwiuq1XVVK0QmdD
FWkH/JOslMESnh+4NDDr5XKdTdh+7f8wXgVLud6JbreRwJZc/9VaMa9Yhe+P
+z/X86hfCNuqSCO5lFX7NRbfJ/toZVKiFezA198l0ZbFxuD75fG0mKe5l5bp
7MX9Tm9937MDrOD5PQe6GS/C3z+UKhLJ3u89cCgK3z/PX1s2pEgEJ/D1CmpW
Wc+PRB5cPyCu38gDETpn8vyWwbnZLWA1j7ctzg90Veqcw37//NHOknDkxfO3
vH9nLoGL2NlOG9uvDEN+PP/WBLV1bajOpew2Cx4emwVXsjt+lAb8E6JzNX++
h+2WufeFtTz+waNw7fpgnWt5vInn3VfN4Doef23zISAsSOd6Hn/zWr/L60Dk
v5xUJn1mal1hPfbK8LsldxXIfzlp7ox/nj8fNuRxo9BFrnsCkD/74/nfvrv8
kf9yEsUMmR+1xw/5s/uZdF+e64v82YUlZsHHfJA/e8+ZJZPOeSN/tsWuivdV
S5E/O2FlhPsrL+TPzuufurkZLGef/Dx9lcQT+bMr3rXuaoO/fynYU3KGyDw8
kD/71/gJ3VLckT873fNWcNFi5M9+N2Td9BduyL/Rwyy3doEz2QM91A6zXJE/
26DdsfAEOfJnL8l4W5O4CPmzRz/54tPKBfmza7vcX7HWCfmzy5K7i7stRP7s
mUc9RIcdkT97e9tEsnVA/o2f51Nc8Qs75M/eG7/KPWU+8mdPUv1rPHIe8mfb
tf367NUc5M9uuX/Nlp2zkf8Kfn7+dhkslyF/tsbrltnkmcif7ZCY5XNnGvJn
hxzd1iR8CvJnm4zVXO45GfmzlSYW2TcnIP/G+SVRHunjkD/7wOSl/y0k5M8W
W45xkI9G/mypusu/3S2RP1uiftGzbijyZ2sb4l8c/Bv5s/PmVUh290f+jeNl
W6pW9UT+jf52Nl4sRv5s0dP7e6eVW+vyZ6uyms140KZElz+bnsVGR3XTOY1d
6VmS4tJX58zG7+fX+1ELBuqsZteufa3OHKxzDttyak6bjxY65zWur0fC5pGW
Ohexqx/PjgsYpbOm8fuysGqVYa1zKTvDNOjwTdK5kp25PP/hvHE6V7MnHN+a
Xz5eZy37VDNzG+uJOteyvQoN9++dpHMd+83ey3/8YatzPVuR4xm6aIrOopXc
r+Gmft5UnfXYoy/tf10/TWcxO2fFeFOrGTobNjo4Xxs8U2cJW97j/IC9s3Q2
Yac+aJbuJdNZyi695Rb4HbZkd1Cu0CTM1pnYZ2deSOo4R2dbtrGp38MsWMZ2
s9tyqcdcnR3YK7Qy2Q5Yzp55yT+u2zydvdjeowqDNsIKtuxOaW/9+Tor2XZP
TXarYFXjepaP/F0HJ7AdPlmTix3yZ4+76RJUCmeyn85Qq/+2R/6Nn8/5za31
cA7bpHm77p/hPPbW+ALVXPx9voj9bv/SNodhDXvJyz2X/nBE/uz6vFMlznAl
e83W5z/z4OrG6x8am9xkAfJv/D4TL4XMgmvZBbmuZ7LgusbvY9+tqCdwPZvc
Kw6aLkT+q0i0YNJDuR+sx6aoyO2HYDG7h+mPgLewIfvsPnWNqRPyZ7ucW/tp
MWzCNn904/gWWMqumbbA4jpsya52bQhs7oz82RYVoRHDYFt21oWlc91hGfvG
UDe9dbBD4/V/VqhPwnL2CWmbvk9hL3Y3mruttQvyZ88bXvHn37CSLX2XsmY2
rGKvsl3dPghOYFu5bcpJg9PY9ZcTnA/Cmeydx1oPL4XV7P+NKBz5CM5hfwzW
V9TDeezMqiit/iLkz3aztkvvBWvYnyfcSx4Kl7KLXYbeHg9XsrcZBirnwNXs
2VPWhS+CtWzVhKh73nBt43z9JrkhcB07eM3DN9FwPdvr2On/rYRFcfy8rhj8
OAHWY4vTj+9MhsXsgfIT71NhQ/aF8LSKtbCEvc442lawCTvyea48BZayuxRa
9VgDW7IDJdL4OJjYFSpVdixsyzYw1w9WwjL2vX27myhgB/aIiqZzl8By9tgm
130Xwl7sqY57582CFeyLVX+Ix8FK9uMVXruF71vFvpNv2rkPnMD+YLTFryOc
xp7R6ceBJnBm4/dxJOzuOyF/trSp2Y+7Qv7s3iaSTheF/NnuGXPN8uAitp3Z
oXGbYQ1b37eV23K4lG22xzzFC65kN3S6XToTrmbnGh7oYgFr2bXzJq8yhGsb
1/9wiH4Dfg917I2eL4tq4Hp2mPzfJA0sWk0iPRO7NdmwHnuwtLBoOSxmK/sN
M3KFDdmXjZoVjoUl7KO5NindYRN2Zu/me74Lv3/2on2zmtwWfv/sr65Gewtg
Yq/dJNuUAtuyfR9eqfaEZezcsQ7+NrAD23PePwu7wnL2g5Ds3R9xf/JiD6ku
nH4FVrAr/km3z4aV7BPLzpSGwyr2zKqzu2bACez/HrR6YwynNa5/5s/dX3H/
zGT/Xvv1+lVYzW75fFLYDjiHvXrtoA1BcB57xctHgyfCReyraamzOsMa9qGV
cz7UCvd/tt94m64nhPs/2/qzW/ka4f7Ptll5VH8hrGU3L+5fYwbXsqvCd9l8
x/Oljl16qNmoy3A9O3Fnl/JNsCieRE/qc797wHrsinthF4fCYnae4cChTWBD
9mvr4PHX8HyTsGeefvktCzZhL23R29ETlrIX7MhZPBS2ZG+c/d3oN56nxJ4z
MnXVFdiWvae2cscGWMaOXdlXIYcd2PPuP/tqBsvZa9PcRn7G89uLfbjPk+El
sII9XrL3Y4Lw/G/sb/rIf47w/Gd36HXmoJHw/GerR3vnP8X+Ia2x3rg+6iCc
yZ7QLKZ9GKxmTyps6W8N57BPX8/Y3BLOY9dcMM64hv1KEdv+y85FG2EN+/fN
3z+d4VJ23WejwL5wJfv8kBsn3mA/VM22++fz/SOwlu1pOudOJFzL/vNAbr4N
XMe+2KbEUw+uZ0eU2fy8hv2XKIHvZ+MfB2+A9dixByeXL4TFbNGUDm2MYUO2
ifc981rs5yTsceuHWR2CTdgdkg6Yhwj7P3aX4Av6VsL+j9321M/839gvErv2
SnbvJNiWfSN2QbABLGNnHfi1Kxv7TQe2osChaCAsZ2880O/IcexPvdilm7tu
Ggcr2CtW311SPh35sz8eFfV1gFXsuotGVY+x301g2z07FOYHp7Gjawe3r8f+
OJM9L/ZP9QpYza6yOzxAH85h7ya3o5uwv85jWzuGjTaGi9hTzQddPID9uKbx
8z4pnjsCLmVnOM5/cWYy8mdbygxWToer2XopXUxvY3+vZRf98rvnCtc2fh6t
4dY3eB+oY3+v+csvHK5nW1jay5rCokS+/qMLk1MmIH92/V6b+YawmL1Glh25
C+8bhmw3TcE/5rCEPdpgVKcTeD8xYZtVfEmaCEvZh55vNr5ug/zZWV8q7jjB
xHa0H32kFu87tuwb1pF5IbCM3Urb7aYIdmCXdlw0sutY5M+uWePTfSjen7zY
Z2vt5k8fg/zZ/g9aPfUYjfzZ/5JLWSzev1Tsquk9/8yyQv7szNutjh0difzZ
suSyExV4f8tkf+mt1/f1COTP3rl11peWcA67X5DJ4N7DkT/7+43W1WOHIX92
6m3Xt054P9SwfxUmBUcORf7s1j/v+GYOQf7srafW3SvE+2V14/zzr8/ckiJ/
9qoc0wmv/kb+bG36wgZTc+TPPnpoU5433lfr2fe9PrgfMEP+a0g0fYtH9/cm
yJ+t9/LugyH9kT9bJjHeH473X0N2zqYvccW9kT/bJOlXSHNj5M9Wh1+NnC5B
/o31744OG9Ad+bO1g03zS7ogf7YmfLu/nQHyb5xfmhnyvgPyZ4tnvUn/qz3y
b6yPrnku00P+bGom/ZDWBPk3Xi9ieVTu59O6/Nmis3vly7Q6Kxv9tO3OdVV4
/2fLtU+Kln3UOYEt6TV8QPlvndMa+20aMj+x5Vhd/o3jx96J++vrrG5cb4zb
w4d/6pzDrlWH7Df9S+e8xu/L/PlThaHORWyLNfprjhnprGHXK102fO2hcym7
5rLFcqNeOlc2ft77fs//Mda5ml1w2rrero/O2sbPY7f56Me+OteyC+9Gd0nB
eUgde8iGz336mepcz+63rdutYjOdRUkkKtvU2WTeQJ312NJww24vB+ksZhtb
OR+OxnmLIfvDv50V8VKdJexdmUH/zhqsswnbx+p9YuchOkvZRtnnEmtgS/bW
HgNu7cZ5DrFP2i3x8bbQ2Za9pefJaX8P01nGvucZEvoJdmAXGz5+UThcZznb
5ofDzogROnuxW24bsnsUzo8U7AKL8jcNsJI9LCEpqnikzqokUt2/XjVrmZXO
CTz+7n+dlo4epXMaj//z6MTF73Amj2fEjvIqwnmVmn1rXbsZoWOQP3tMr7yQ
wdbIn93NQF3zBi5ie/RyW/O/scifr3/lxumTUpyHlbLfVZyekwJXJpEk3bY+
8SVczR5iYeE60Qb58/UODx9TrYZrub4s4+G7H3BdEqkPmL3cbYfzt/ok0uTI
Tb/nwaJkkszrFfiu9Xjkn0yajIr05e6wOJkyj492O1IMGyaT0nf70ZUGON+T
JJMoPk7+0R82SaYN8qoxvy8K53/JdP7Fsb77e0xE/slk2ynj48dQmLj/3+1V
d8pg22RS9fm837n3JOSfTHTGcnZsBOzA8/94Odu6Apbz/N8mKVl9cP7olUzy
s/2fro+AFTy+r/NIs2uwktc3v3+As7Et8k8mrXmE96AwOIHn/zQSZ12G03h+
QrNJu7rhvDOT1ytp8sk2AFbz+NBTv9acgXP487rmzl7acSry5+vl69964g4X
8fi0J0Hfj8Earjd88dfBljhfLeX5X+L3/bCDK9nFj7s83wtXc3/Tk3N9v8Ba
Hh8aNiF14nTkz+MnO96dlgHXsWtMmu15DNfz/MI7hzZLZyD/FFJdv1lmGgPr
pZDoru2M+VdhMXt2raSbIc6DDXn+jHuWMe6whMfNTq+OyoNN2L22NnRsgKU8
P/5l8uTJs5A/e3+smUE6TDzfbVNp7H3Ylj3ebdC4jjiPlrFPKl/9aQk7pJBm
+MG/DjvBcr5e6oR9XZbDXuy+OTtm74EV7G+LP9ldhpUpRM59dpi+hVV8/a5H
t10W4zw8ged7fX853AJO43HJt5hAeziT669fsY+IhNU8/kAdMHMbnMPWnDlT
VwLn8fXC46fIH8NF7J3OTbc1x3m8hv2p5MXefnAp1xdbfl5mC1eyxYv6GXvD
1Tx/y62w9Umwlv3b9vH1A3Ate5m/+4NyuI5t3/TbsXfC+T9f7+HFLQvbz0X+
qaS6t8L22t+wXiqJFop+6MtgMY9ntTncVQEb8vjOQPl/a2EJjzv9br3lMGzC
4yNV+9tVwFL24mKrWe9gS54fHX3cSR9/nyD2+ZhuIwbCtuw2Ko+aqbCM/XlY
6pylsAP7yMz09fGwnK9/SuGXvQf2YnuONIo+ByvYGaM39X4EK7l+RbMHm37B
Kh5f2ba22gh/P0lgd7py5LklnMbusHPUmflwJtcHvI30CoLVPG771fd+KpzD
47kNbbvnwnk8rh5gZ3YJLuLxP3eNb/4E1rDFQZX7f8GlPD9m09fuXfH3nUr2
uiZHnYfB1eyNKSJvmfD3H663+6N6nA9cy+O/TYbVxsF1PL49q8MCNVzPbvvR
O/MELFrL70cFlruqYL21pFoyPSzyHSxmj+/eo4eePfJnWweYpfaCJVxvH7Hh
ihVswm65yPHmXFjKHidV5PjClmzzlzenxMHE9gmKOb7Nfuz/AZhPhcc=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zik1IAPa5sQh+RVOBv8HQxByzg==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.2170607504954762, 0.3492567672615151}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.2170607504954762, 0.3492567672615151}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.710416420218576*^9, 3.710416450258751*^9, 
  3.710417129417596*^9, 3.7104175189257107`*^9, 3.714323150323311*^9, 
  3.714377987574851*^9, 3.715627094995957*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_error_velocity.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7100607902743483`*^9, 3.710060793502408*^9}, {
  3.71016097317192*^9, 3.7101609739502277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\[OpenCurlyDoubleQuote]Neglected\[CloseCurlyDoubleQuote] angular velocities \
(not seen by equivalence class)\
\>", "Chapter",
 CellChangeTimes->{{3.709872625974028*^9, 3.7098726324898252`*^9}, {
  3.715615950278701*^9, 3.715615954257133*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"stateList", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "NN"}], ",", "36"}], "]"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Chop", "[", 
         RowBox[{"stateList", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "NN"}], ",", "30"}], "]"}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<\[CapitalOmega]3\>\"", ",", "\"\<\[Omega]3\>\""}], 
          "}"}], ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<hz\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.709872457137939*^9, {3.709872491025449*^9, 3.709872538685989*^9}, {
   3.709872586709271*^9, 3.709872597930764*^9}, {3.710160921655756*^9, 
   3.7101609316229277`*^9}, 3.7102271808681717`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
eMZPOPx76RUu8BqXeIMrvMXx//4Pt4GIqw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
eMZPOPx76RUu8BqXeIMrvMXx//4Pt4GIqw==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1., 1.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 1000.}, {-1., 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[CapitalOmega]3\"", "\"\[Omega]3\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"hz\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.709872557075224*^9, 3.709872599971401*^9, 
  3.7098726356654463`*^9, 3.70987359241122*^9, 3.7098740229995832`*^9, 
  3.709874196750763*^9, 3.70987485551792*^9, 3.7098762214308167`*^9, 
  3.710160932400044*^9, 3.710416420851982*^9, 3.710417519614917*^9, 
  3.71432315067515*^9, 3.714377987847125*^9, 3.715627095363121*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error attitude", "Chapter",
 CellChangeTimes->{{3.698506624711748*^9, 3.6985066267613287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{
             RowBox[{"xc", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "9", ",", "12"}], "}"}]}], "]"}], ".", 
             RowBox[{"nd", "[", 
              RowBox[{"stepsize", 
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}]}], "]"}]}], "]"}], " ", 
           FractionBox["180", "\[Pi]"]}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "\[IndentingNewLine]",
          "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"xc", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"18", ",", "21", ",", "24"}], "}"}]}], "]"}], ".", 
              FractionBox[
               RowBox[{
                RowBox[{
                 RowBox[{"pd", "''"}], "[", 
                 RowBox[{"stepsize", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "+", 
                RowBox[{"g", " ", "e3"}]}], 
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pd", "''"}], "[", 
                  RowBox[{"stepsize", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "+", 
                 RowBox[{"g", " ", "e3"}]}], "]"}]]}], "]"}], " ", 
            FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<Attitude error manipulator\>\"", ",", 
           "\"\<Attitude error UAV\>\""}], "}"}], ",", "Above"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(deg)\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.698506525212187*^9, 3.698506565612026*^9}, {
   3.698550631492511*^9, 3.698550637743202*^9}, {3.6985508013439083`*^9, 
   3.6985508016424522`*^9}, {3.709811384899632*^9, 3.709811447726369*^9}, {
   3.709811490349411*^9, 3.7098115168139544`*^9}, {3.709811586221568*^9, 
   3.70981163243813*^9}, {3.709814321187766*^9, 3.709814346658772*^9}, 
   3.710227178747984*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
OcwcPgZ5F6RiErMOH3G2znXiYcwGfDz759axSb2ZjfjY3bWlYqUuszEfK86r
DD9838v656NBdcXu7VtmKz5ss/uMXvCYeSIfI412KExuMoMPzmc9g2WFzPZ8
RK/fvv57PrMjH/OGnv7v1z5mFz5+NP+esW4LszsfPS1LO45VMnvx8XNx4mB3
PjOXj6VzZGPfhzJH8FGkZ1RctZ6Zx8enGyvXmrgzy/jYXvwjq3gxcwoffv+s
+n1lDnMGH89T3dr1nc6cyceJ1EKrqxOZszXPb8YZnRujmFV8nPNo0DMbylzA
R+znOyduDWAu5GPV49XSaz2Zy/iYWXr2R0995go+zFdL01SdmKs085usd3Uz
h1mt+f32jn3Lvu9h/fMx62m9jm0TcyMfU0MzunV8z9zMh/Lpg5P6r5k5Aoyx
TY5yfcasI0B2cMuzxmpmAwFi/F4FFd9nNhLA7daak48qmY0FGNJ0esKoG8zm
AsxrDRBdKmO2EmCBxa4RKUXMEwU4Wnq9ZEshMwS4PMHw9eNzzPYCTB312tzl
NLOjAOMWj7TQO8nsIsDgDxsUH/OZ3QVIrxd86aJi9hLgBMe36/LDzFwBJq/+
Knp0kDlCgNzx6XrybGaeAHGK/xZ77WeWCcCxlw4M2cucopnPyN9DD+1mzhBg
4YsxY/SzmDMF+GfL5Q7bdzFnC1Bo7ROwYCezSoCGTlEYuYO5QIDtrq0Oo7cz
Fwrw4ef50KXbmMs0P2+Ws3HfVuYKAYItLVO6k6s0/ZzWW7hvC7NagLTA9WXO
5DoBzP4SvhpKbhRg+cuavb3IzQL867yMY0bmCLHu4MhWB7KOEGtaD23fSDYQ
Qn7WsfEz2UgIQcHHjgE0H2MhFgoXfm1D8zcXYvn1Ng8Pka2EaJrw44Y/5Z0o
xOgu1d9n0vOAEJ5vWkXW9LzshagsarNjPD1PRyGW/HINmZtJ/Quh1i+fFkrP
312IwHd+UFE/XkKM9XNR/dhD/Qvx/T3uL91H/Qth7HegpYT65glR4PS3jy2t
B5kQjR0+RNzMof6FsNszKGpdLvUvRIdDV8r+ovWVKcSYzz8vF+ZR/0LoG/W5
Fk/rUSXEy41xdrNpvRYI0Tq6evfA49S/EC22T2b/PkH9CxH+Wz+/7hT1L4TT
AHOHatoPVZrx9M233D9L/QvxLqZQ/9F56l+IoOO5Y2svUv9CNK+8JPt2ifoX
ordocroB7UeOCJP2C9+OKqH+RbAuWtttMe1fAxHiYnbviC+n/kXo15g3+Mh1
6l+EgZ98/n1xk/oXYUArX9aXzgcrEQw9mncuuUP9i7D51abB6feofxEqu84/
//AB9S/C3eldug18RP2LIBpVcHXtY+pfhHybQRtVNdS/CK8m/xz4Q039i5Ck
98/AWS+ofxE8bo63S6+l/kXgVF9xeEXnH08En7jMhnFvqX8R0tsPfyV+R/2L
MCb1QuO9D9S/CEPO194y+0j9i3CqqpNdKJ232SIc/+7ct+gL9S/Ce/+Xhn83
U/8iLKuzbXFtof5FcM6t3XLwB/UvwtDHnMLPv6h/ER7FyCZPaUPnvwgtgxaq
he3o/Bdh0PiVcWUdmOs0+eSV9Xo6zI0ieJc2/Zqtx9wswsaOm1JkXZg5YmxO
WR11pSuzjhjr43QyWg2YDcQQ931TYmXIbCRGyyxBrUcPZmMxVJKBd1N70f0v
hu5rVcj53nT/i5Fbn55T25fufzH+WzfQRY/uP4gRJSxaY2lM978YebqWp+0H
0f0vxuNkDxuPwXT/izE46c698CF0/4vhNOlrUII53f9i9Ng/+vdmC7r/xTA2
dVmXOZzufzEWvVi5Zd9Iuv/F2DtcX7zfiu5/MV7u9eyzZwzd/2L4xnvM3mZN
978YSL7ZKXk83f9iHB4s/i9Oe/+LIb1c+c1rEt3/mvkk7jGcP5nuf838B2Yl
WU2l+1+MlQKl21+g+1+M/gK7uNppdP9r+li15XmBLfUvRlLODbH0P+pfjNAt
Z1ctsKP+NeMZVnN7zqL+xWi81zfv/mzqXzO/wqAeG+ZS/xI0n9i+x96B+peg
zmbR4pb51L8E0z145gcWUP8SdF65vu98J+pfAoNhOcM/LaL+JQgfXr88xZn6
l2Dqq145w1yofwnmtvHsfmEp9S+Ba9SnnfOWU/8SDDY7M6tqBfUvgdkho16u
rtS/BPpeJTpP3ah/CX6aPDdZvor6l+CNTa3nbQ/qX4Kq/b/vzfCk/iXYPNcn
In8N9S/B4Zuljn3XUf8S2K01XR3vRf1LcCv1yfEab+pfgnpb1ex/fKh/CbYN
W2+R7Ev9S7DjRcZStR/1L0GX7wtqhgdQ/xJIlty8EMKl/iXYfv9rm4JA6l/T
x7uueV+DqH8J2nA3l1uFUP8SPPqd7LqW3mfVEnR7Lw5MD6P+JbAo/6lXFE79
SzDrUuOYdxHUvwT8Bes+6kdR/1I8XB7pMCqa+pfC2yV/4ewY6l+KuHazOq6K
pf6lGF8zJyg4jvqXYtUZ9138eOpfCsNW882JPOpfCr8Lz9xS6X18ohQ3z9d3
SBNQ/1KUOVqmpgipfylObbfuLBdR/1JMSRwbGy+m/qWY/bihkSuh/qVIHf8k
wFVK/UvxxPJWO3sZ9S9FybKlJ0ckUP9S9Pdenqovp/6laBxwdOd7skyKBqle
XWki9a8Zv3RX+E4F9S9FlbT3kkD6eyNTillpFSlIov6l8AiIGtklmfqX4q+7
MZPukgukaJ5z+UJGCvUvRXKHmcVLU6l/Kcw+/F7SawP1L0VWojW/klwlRYTw
0mxZGvUvhV3Zios2G6l/TX7rqLp6cqMUa2wtKjI2Uf9SiLp35E/fTP3LMKIp
ov0bso4MfYvzPRXp1L8M8jPq3OEZ1L8MhYG9X14lG8vgKKzt6Ul/j5nLcPdi
H4dWspUMqf0b05K3Uv8y1G8c/8l4G/Uvw/7n2UFHyPYynO8sG2CznfqX4e2K
NZwisosM6q4dTWbvoP5l6LwrTX6D7KWZn8nBmQ47qX8ZAtxdXK+TI2S4yZ1d
bbeL+pdhb/2jkkKyTIaM6DCLCZnUvwwGi+bq55IzNOM1JsT1y6L+ZchdPJaf
SM6WYebKPONmskqGqxaFazx2U/8yvHkdvbScXPi/74tub7WH+pdh7dZzAWnk
Chle3p649zO5SoazfeYcdNpL/ctwadh2uYpcJ0Pe4dx5nenv5UYZCno2t64m
N8uQVvh2xxkyJwGd+xfZ6O+n/hPwPvbKk1VkgwSMmmqoyCcbJWBC1yyHNgeo
/wQ0GuaMcCCbJyDco9pqC9kqAenHB7k/J09MgN0DryvDsqn/BMTwB3oEkO0T
YNa+04xjZMcEbD60jvuF7JKA0qGchnE51H8CnupZloaQvRJgbjmdk0/mJuB2
8e/M9+QIzed251RDD1L/CWiyezHenSxLwMeCRZPSySkJcGvwvHSdnJGAibtj
73Byqf8EzD3SO3wsOTsBdeuO5XuSVQnIXrtauZFckIC7FZZ/XSEXJmDRwMMT
G8llCXh7o7BHv0PUfwJs9nnnziRXJeCWu+/vALI6ASv6DTfKINclIKzQt/UC
uTEBQpPyvJfkZk3fizdM1D1M/cvRu5vhruFkHTkcV59/5UA2kKPy1IieXLKR
HJ/D7o9JIRvLMWP5o2lHyOZy3HVNt79BtpJj/ssNc9+SJ8qRVBDp1DGP+pfD
5M2ZVSZkezksJ5fG2JAd5bjs0ZqziOwix+/Txe99ye5y7FVXzhORveSYlr/r
xlYyV45vQQuCVeQIOVo6jrAtJvPkqCk3n/aQLJNjqEdE0DtyihzZSlX1L3KG
HJOsSnkGR6h/zXw926w1IWfLUSJcnzKarJIjIOa/dtPIBXL4Pl91ZT65UI7i
Gcq7K8llciT372LjQ66Qw7kotyWcXCVH16KtPUVktRzd79xKSybXyXH71vHQ
reRGOd4tLb24l9wsR/niu6F5ZE4iKpNGbztF1kmEasvFsYVkg0SMGnB3ehnZ
KBFtjxddu0U2TkTohIuV98nmiTgxt4PLE7JVIpo2lHi8IE9MROuKpqY6MhJh
usRK/wPZPhHjg4SnPpEdExHmH9v4leySiJaQrudayO6JiJfu6v+L7JWIWXaz
jdqoqP9EpPRzyGtHjkjEmr6cFx3IPM38BlYXdCLLErGMs2yMLjklEUlnli3U
I2ckat7/ZvTtTM5MhJ4yNlnrbM33jdh0VGuV5vN/aoRaFyTCbfN4Xa0LE2Hm
EGWr/f6yRLT3/mGtHb8iEV3f66u186tKRKRq78yOZHUi7rmP82lPrktEVsuO
+W3JjYlwjhn99be2/0ScHrvX/ae2fwVMir+naJ+njgKt8SsTvmn7V2Bkpztz
Pmv7V2BmeO7DRm3/CoydGzruvbZ/BW4PnOn+Rtu/ArXe41bUavtXYEbIN4tn
2v4VOG718cZjbf8KvHg/z65K278Cy3cGZdzR9q9As3XR5Zva/hXotO9A6VVt
/woICjZlF5G5Cnj30fW6SI5QQEdvQcczZJ4CnMqDouNkmQIhYepa7f5I0Tyf
8eXDcsgZCmxZl7Zwj3b/K2BxaMGqHdr9r4Dz90/O6dr9r4D/nMfWqdr9r5n/
rXs/5Nr9r8CmWU152v1cpnn+r3/MjdPufwVG3bet+v/9r8BjRdSCQO3+1zyf
MdGn12v3vwLm819189TufwV082cu154vzQpkebRJd9b2r4RMFFmsPY90lMjf
N7/OXtu/EtFTL/7Wnl9GSqQ6nexio+1fid7h9wystf0rEet/uvMIbf9K5N2P
/G2m7V8J1+ye7wZo+1fi9fvY2720/SvxMmfIMe356qiE47ziZF1t/0rklD9f
11bbvxLH/nk5uVV7/ivR8slI/7P2/Feiq+LgU+15HqHEJLe6vFrt+a+EWe+W
mBrt+a8EL89lzgPt+a/EvCvHe1doz38lun2a8KaMnKmEb9S5M5fI2UpY79uj
PENWKSG0jVp9jFygxBoXTD5ELlSiQ0S20T5ymeb7Ykuad5ArlIgao3qymVyl
xJ2iBaXJZLUSnT/POikj1ynRw7TuIJ/cqESMzal9UeRmJaZkdTwQTOYk4dOy
+3na+1QnCY9l3S+sIRsk4fO6wfdcyUZJ+JZ1smkJ2TgJt1q8+ywgmyfhUZVy
1myyleb7qu7ybckTk7BgX8Plydr7PwnDvnb4a7z2/k/CjMYOq0Zp7/8kbH3q
eMFce/8noeGW25BB2vs/CbOH6mb01fafhPnlD7v30PafhLMzN27rqu0/CbKD
R0foaPtPwsNUn/I22v6TNO+b9UGt9L6SkoSPXa2GfCFnJCHR26P2AzkzCXHJ
A1V15OwkdLxSLnlOViXh2nhH78fkgiT4nnBwuU8uTML+VTZOFeSyJNiNzFpW
Tq7QPO9QF/8icpVmfte2J10gq5PQ3E1wtoBcl4T3lv2+5JMbk9A4Z4nNYXJz
Elqn3E46oH3/S0bf4EcfsrTvf8kwe9qyfLv2/S8ZgU4V9zZr3/+SMcRs3MpU
7ftfMubMy/+YqH3/S4bFfbs0ifb9Lxn7Pj6bxte+/yXD4LvLz2gyND8f87Yk
TOP/AwLQXJs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92HlczN37P/BBkpAQsnQb2QotiELlZWtBlLUFbUqLatr3mmqqmampJClL
siV7WUupISkRkSVLTIgQQpQl/fo9Ptf53v/cj6fTe86c9+uc65wz4518Vrv0
5nA4LX04nP/////917Zg5fRBCldn/l5A/4Db/wyayv7PCrgYOvhC62xmZQzd
eDg005BZBXE62YH6psyqcNqWru69nnksXhuNGPjVg5mLbrnMLEE8szoOdL06
9zWPeSIqpmzb1HWXeTJqLeomO/b6Q9aA1ULhxevzmadi9PXFLkXRzNOhtdVO
sbCWWRs1D7Pl+k7+S9aFZlhqzAch8ww8jFjSGfSTeSayB28t2+/dRZ6Fwl9f
0ud/ZdZDcr85bXJR/8iz8cGe922vSjd5DmLOfsxJOc+sj2zbI1rHtDn4nw0w
Wl3lgkYi81wUBk84EvCaeR4G2cr76C/uRZ4PafClw6p5zIbY084xLhvQm2yE
lMe7Cmv9mY0xyPDaq9ZG5gXwSK9svmbehwy4zorN6bxI5gMwMzeaO0mO2hfC
a/jcnJkZZP5CPJ7kkrqzT19qXwS9u/W9RviT+YvQv1cfTc9XrH0x0rKNkldZ
yVP7YrQ75wyMKSdzlsDadNYr6fR+1L4EzpmW6fVZZM5SvJXWyPh9FKh9KRx7
RV3ZsY3MMUFXsKnO03rWboKX622MJs3tT+2msL168LHZXjLfFD9kz8rGdLF2
MwybfWRbsJ0itZvB4s6gv/qXyBxzpOiWDTVUHkDt5ggI/16zxZXMWYYOR7ec
ncWsfRk+ioxWn+8/kNqXY8iSD6/z15P5y9FQNid4Uy5rXwGnlfOXlr1l7StQ
f90uuVhzELVbYLDWzJgF7mS+BeQ32GDREda+EuWSvlcvNLL2lWiSt65OHapE
7avw0dO6sWoxmb8KQXVRRht8WbslHikU3TPYQ4YlZI21E9yvsr+3xM3wsWvf
viZLLWHzO2pwQe/B9LwVaus2xlepkWGFYQMqNunMJvOtUHgu4MxHM7LUCiYa
L3/0smHPr8axvy/lQ13Y86uRp7RCwcabPb8aZwI1XE74s+dX4+0m4bWwQPb8
GryPl2u/z9qxBhnBFV+k//f8GuzaM+Daalf2/BoY/bHl77Jlz6/Fjr29Dfcv
Z8+vhdJ0k/awuez5tVD72ltoOJE9vxZpMa/zfg5gz6+DjZbGtdI29v7WQWWM
UtfB++z9rcMf96axZYXs/a1DSWB1yIQU9v7XY5aC9fuWrez59dD62Kto4gL2
/HoELeClfBrGnl8Ped0mF9u3LP8NiPiSGRR7kYwN2CXgTYkUsPmwAUuqyrsc
LcnSDXA6wZOYjWbPW8PHbae72Suaf7CGQoDH8NB8Nh+tYbn/9Y+v28hSazzu
V7+4RofNXxt82Vf0T/UrzX/YYLivqay9gK0HG2yyOWkZ4EOW2kDTcb/dqels
/djC5LVp3oUWWm+wRcipTpeDh9h6tMV7x+oNwk1kqS1CT/YrDh/B1qcd+qzZ
ibQ7tJ5hhyuXlEY9iWfr3Q72I548czMkS+1wZFh3stU3Vj82onzw812Hj5Kx
EenDU277bWT1ZCOedkzafFuZLN2IL6rJTdLrrD5tQu4IZQv7EDI2Idw9q/PC
NFbPNmG37dac+y+o3kk3ISfNfeO17az+bcazyX0ubl9Cxmb83b4qc0UHq6eb
sUfz5up/x8jSzdg5wuJ04UZWX+1R/4b3nDeYDHscGDcufuk1Vq/tsVvZt9og
kCy1h8vnkkVrNFh9d8DC1Grlfc+o/nMdkKqo9UAtlQwHbNkhvfR8EdnBAfvk
1ANkP3vT5zugLGvZWp0T5FwH/Ld/8ry79mSpA5ac1D5UqUKWOaAi4O/JkTVs
/3JE86FHo2qiyVxHPFmqu65pNhmOcOaohji20n7o4IiU/AyLlYfIfEeYHGpd
f8KWnOsI3uBHd8OHkqWOuDxUzSV+J+2/Mkd49Dsb3Lcf24+dIAq+1hgRSvs3
1wlR9goz21ppf4cTxqr+Oe7sSHZwQlh4+/hnj+h8wHdC/C/uaFsLcq4TNEMN
q15fp/OG1Al7h6uphBuRZU6YYjD4mPoldp5xhm2I3LfnM8hcZ2gszJ548tQv
6t8ZFc3tS9Onkh2cETw3UXd7fif17wxuR3728SnkXGeUmEwYKTvaQf07o1fx
oYmzNMkyZ8xRUtc8cuIn9b8FAQnGEfo6ZO4WjHia4/nx3A/qfwt8bK1wbS7Z
YQvOrzVeckXaTv1vwfF9Z6oazci5W8A91Dl50v3v1P8WrHprVpexkSzbgmH3
z5lrt3yj/l3QlBSu/z2AzHXBGLsTTs29yXDBvO9DpPLpX6l/FwzwPxlso07m
u2DsxozWl+faqP+ev/+RULnXhCx1wV2Nua2TLnyh/ns+v2DH9qSXn6l/V8jz
0+t9B5K5rjCfOfqtbP4n6t8VcUsuf2vyaqX+XTF2wo7Z0Qc/Uv+usJY3Urv+
5AP174qVa4d5XxlGlrrCePJy91DL99R/z+cNNO/sl9ZC/W9F0sSC52H331H/
WzHd6nBz80gytuJKuHSqvcNb6n8rcjrnWXSfaKb+t0I7NLe86fcb6n8r8q3C
VCZZkKVbcamp19qPB19T/1uxq6nc2vbvK+rfDc0VaTP32pC5bih68T7l5eUm
6t8NYQ+CJ1pzyQ5u0GrmjFsgllH/bsh+NkHp6NeX1L8bdjsMM77Q8IL6d0N1
WKYNahqpfzcc3t3X/NON59S/O0LCSpZ7331G/buj/w1b/9g3T6l/d4iM9YLa
5ckO7sh7oHQiS/8J9e+ODy+/c5YFN1D/7jhwYu3t5huPqX93uCxTWmMyhSxz
x7nIEWMNsx9R/x6YveyudoIameuBEQ8/7Lt5/iH174FPqjatQnuygwempUvl
xv5H5nugqebk9mNtD6h/D/xonx6m/pgs9cCJQi9V3CPLPDDn7hPf+BdkjieO
C2U2i/+RuZ4w8wgctF+H9e+JspKR23f7sv498a1p/m+1Cta/J0orXtVxJtD3
z/VEourwhqFpZKkntE8plU/oz8bviX5aEwL6S8icbRjUeLjPkdH0/rjbcJa/
c+jbAjK2QSt0slrtSnrfDtvQ9XLmqW3f2fvfhrzbf8vf76N8crfhznL91HAL
ylO6Df1ien/06EV5y7Zh8R3HZUOKWf5eWC7XeuaxP80Prheedf0LmT2D5g+8
0Pfa4yln2sgOXj33j7JZDwtpvvG9cE2wyX/8PJqPuV74E3gi784estQLWw84
qt3sIsu8kBM7pfCjPc1njje8I+UqVK6Rud7Qmdf0fNJEWg/wRpvRgY19EsgO
3pA5j9XIeEfme8N+srH7VTNaX7nesNsSaxV0jCz1xpe7qm/296f1KPOG/79/
ldPdyRwfxCh5DRtUTeb6wHZP19yZk2l9wwctV5Qep8SRHXwgt7Mxe4SMrX8f
+Mh91yibT/Uh1wfzPKIUwzPJUh9E6FikLm4jy3zgbTNAqmRO9YXDg/Kr7Sse
5JKVeVhe3zsyuYPVIx6eLIqZqGtB9UqXhxWqa3cWHSCDh+YvKzLH/SBb8qBn
a2Vjb0r1zoGHXo0yP78sMo8Hq9qY+2tayHweLgZ1lPybQ/UyjYcj6TpXvQWs
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
97dZ/Rfhcv+n1dFF5BARAr7+WTXsMJkvwtisHbIjqWShCLe0z4jnhpPTRPhl
Cqs6V3KWCBlKm6dvW03OFaHP15WKg43J+SLoj1Gvv6xJLhAhrW+Wve9wcpEI
Rx9H8PXYficVYXftGzn5T7QfVovAex94+l0DuU6EOwq9NJ5dJzeI0G+Ppsar
ArKsZ/zc9FX/9pJbRMj6OcBwhojcJsI3g47QiEBypwicyks7mhzJHDEMK00G
Oq0kK4jx6+CKtd3zyMpixI263nh5CllVDN64Uf0zVchcMcKbPuil92L7vxiW
lcdOFXym84GuGKeXBF359oxsIEbH6q4TNjfJEKOMs7/g7UWymRj2Lku+7D5M
thRDc+K7jOB0srUY4mUq0kg+O/+LsWP49cjT3mQ3Mf5lPX2juInME+PUn67P
O5aTQ8Twqf68b9k8Ml+MwFdSmY4mWSjGgsD1+5aoktPEcE6vvSDqR84SwyNK
SY7TQeenXDEOt/y1zX9Lzhcj/q9ORNwjckHP82WNGuk3yEViPB9lPuzhRbJU
jB9hYztWHCVXi9GacM3r9y5ynRg2IQUjXgjJDWJ49YvK6Awly8RQ9JvutIzd
f1rEGFD+dciDjez8J4aUe2JU5kp2/hNjbljY7zSw818S9n3OVa2cSVZIgjDw
zbOZk8jKSbh0evCRpyPJqklQnX29qlSRzE1C49+VmU+66DyqkYRedt3rZ3wl
6ybB8Fik2fU3ZIOe57X089IbyEjC1eWGR/beJpslIbTcw/2VlGyZBLnQQSO2
XCBbJyHkxPLb44+THZKgdHpV7pj9ZLckKA84vNsqg93/knA2/mhNhYgc0tNe
0KjrF03mJ2Fo8+/rGwPJwiTo8N+HxHmS05Lg9kmCt47krCR4HlXrHW9Nzk1C
qvHZ3faryPlJuFbn1BpoQi5IQoSN860qI3JRErZ5SBTXzSZLkyAI3OimpkWu
ToJ3XMhF7iR2/k+C3ZPVFzarsfN/EvzD9w5/PJyd/5Nwb/fHDJESuSUJivIF
rwL7kduSUN2r9NgeDrkzCRMN1qv9+E73DU4ysiOV/Ce+IyskQ+VQ+/brT8nK
yRAVbz/84A5ZNRl6af7P11SQucn4EeTqspDdXzSS0Svy+cq9p8i6yXAqji51
PkQ2SEbz8or8zGwykiH/UqCjl0Y2S0arQbLl/ESyZTLKRsR9OR5Ftk6GwaEi
jdggskMyVNtLbpV7k92S4V/YVe+0lcxLRhQ8Rno4sPt/Ms5ZpAoe2JD5yeiQ
+n/OXUMWJiNv1vdZdyzIacnYWLRgup0ZOavn8xdO3meymJybjKqyQutUY3J+
MrbGfJyuN49ckIzHS87KZs0hFyXjqMdSLclMdv9LRnvO32fGOuz+l4yZwy6c
NZ1OrktGv4CjvDxNckMyUtLsrtpMIcuSEa+SudVhErklGQ6LyzSLJ5DbknHS
M/C4kzq5MxnPJBHn7caz/CUYds7o70Euy1+CmlpnXX1mZQmWFgUqjmRWleC+
ftXChcxcCVJMdNLPM2tIwL2QcsGHfb6uBNbN5et9Wf8GEshJFswtYt8PEpSc
8FNazL6/mQR6Kzm7ldn4LHv6M9u+axwbv7UEUsdPl72nsfwluCq8UPtXi+Uv
gVKISVK1Lstfgrtftp+vm8Xyl+BFa+QwFX2WvwR25xdu3c7yEkqw41tUuCnL
M00CFZWWkbMXsfwlyOp4J29jwvKXoNQpf/rZZSx/CXKe8AwWrGL5S7AuT1+l
m82vIgkWVYn2tlmz/CU4r2SRNnQzy1+C7sjcV87OLH8Jco9u3vbajeUvwaCt
LQPT2HyXSYC1nefcAlj+EmT2H7hwWxjLX4KwsoG7svksfwkkww8Xf0lg+acg
3edAvJeE5Z+CUzPdfgzJYPmnoI/bW/nnu1n+KWg9wb1Qc4DlnwJ5vRtfn+ez
/Hvao7i3hxSw/FMwx6jNxO0Syz8Fxpf/bn5ZxvJPwc5mtdlBN1j+Kbir/bFi
Gqs3liloOp4zofshyz8F9wo4Xl8aWf4peKH2ovxPM8s/BW86xk6e8Jnln4Iy
Y9PHW36y/FMweoPds/J/LP8UbF2ofSm7D6v/KXjX+4jNS1Y/01LQYN3qqjuQ
1f8UhBf0ikpWZvU/BZ9GzJ/zXYXV/xQ8GRk+dcsoVv9ToG7p1v6C1e+iFOyd
kq7vrM7qf8/7thdsb5vM6n8Kpj0vP5AwjdX/FOgPuKcySZfV/xSkjvokvqXH
6n8KBGXae0LnsvqfAtOvEQN1jFn9T4F0YoX3x0Ws/qcgRrCWd9qUzEnFmTUr
bgavICukYs6w6NGmVmTlVLQ+eTpu7HqyaiqKNs2O+WlL5qZiwHSttof2bP9P
hf7kp+Mvb2H7fyrmLbKpO+jO9v9UZOXsPpbqzfb/VJzQ+OHO9+cv+H8gE5OO

           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {0, 5.316706642438211}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {0, 5.316706642438211}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"Attitude error manipulator\"", "\"Attitude error UAV\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(deg)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.698506540240511*^9, 3.698506574225786*^9, 3.698550639109888*^9, 
   3.698551274212489*^9, 3.698552484376136*^9, 3.6985606939333553`*^9, 
   3.6985607673466787`*^9, 3.709811497424402*^9, 3.709811634077739*^9, 
   3.709812524916224*^9, 3.7098126123060093`*^9, 3.709812770069318*^9, 
   3.70981287796918*^9, 3.709813050324771*^9, 3.7098133304551983`*^9, 
   3.7098135591532297`*^9, 3.709814305691019*^9, 3.7098143473544083`*^9, 
   3.709814635568054*^9, {3.709815068453228*^9, 3.709815086862986*^9}, 
   3.709816705122311*^9, 3.709816926667398*^9, 3.709871336687048*^9, 
   3.709871513624998*^9, 3.7098719248457108`*^9, 3.709872386429635*^9, 
   3.70987359472139*^9, 3.709874199508333*^9, 3.7098748579376717`*^9, 
   3.7098762240750303`*^9, 3.709876279124421*^9, 3.710160939090761*^9, 
   3.7101609906694403`*^9, 3.7104164211900883`*^9, 3.710417133944538*^9, 
   3.710417520009029*^9, 3.714323150850864*^9, 3.714377988033761*^9, 
   3.715627095582344*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_attitude_errors.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.710060853230784*^9, 3.7100608564878073`*^9}, {
  3.7101610029390182`*^9, 3.710161003699313*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["UAV thrust", "Chapter",
 CellChangeTimes->{{3.714322869438383*^9, 3.714322880137272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"aux", "[", "1", "]"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<UAV thrust\>\"", "}"}], ",", "Above"}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.7098117708344173`*^9, {3.709811843596953*^9, 3.709811864482003*^9}, 
   3.710227175804454*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxF2ndYU0u3BvCoxyO2I3bssaNYsKNYXitYUFBUUJEISAdDDz3UBEIAOwpq
xIYV7AiKsaBgxY49duyxgwUv97m8+37/fM/vjMNkMtkza63ZXZ2WzV5aVyQS
VdQTif73///vf/pxs2e88gv5YYra/4Cg8im+iq+0AUz799m8+xNtiPkNJBHP
PtCtYC3v5D3gHW2Eqa0mlate0x0Rekrf89dLWowg2fX88Od0N3icm/O1yVO6
BxqMzxy97zHdCx8fu/5Y/JA2hqfRuZTO9+m+WDP2iNu7crofrjtt/X7+Nj0A
/uvv7M67SZtCKTn3Z9t1ehB8I+3ddpTRg7FxV2f3Q1foIZj1xTv+0iV6KEI3
R0z+eIEehlP2gSM7ltLDseGx95fZ5+kROHbTu/HKYtoMQ7c6dH5whh6Jfrt+
Xu5/mh6FCapCrUJLm6P/6oLNr4vo0Rj8eq14zgl6DG50WPDpTCE9Fum6GZfM
C+hxaGfxyKcgnwYyq8PWjDtaaznQqL5no4uH2T4e4zvkLF90iO3jMXramR9f
DrB9AroUHmm8fD/bJ+BWu/ObhuSxfSI67XdMur+P7RNx3lWvUe5l+yTcPnrp
1Kg9bJ8E5eXGFz7tYvtkuBV5rN+7k+2TMbph3za+OWyfggezf3UbsoPtUzDH
60HO721st8D4zLorLmxluwUmDj91IWsL2y0xy9t/fEA22y1Rx2bJS6vNbJ+K
Y00O7+6nYftU3O7jkNBsE9unwfl9tfv3DWyfBtudz6yeZLF9OiRfX/Ury2T7
dLgc8BKdWc/2GXh/e8LZY+vYPgOHL2wPOpTBdiu0XmTc8uBatlthRLfsrMNr
2D4ToaNMWh5fzfaZ2GfRKPTcKrbPgl1mzrWbK9k+C8v8Erq+WsF2a6w27uP7
Z3mtYY2QJUZFbWm5NX5/Omc0PL3WWmt4rE9OtEtjfxs89FYbRqeyvw0e3D2p
3almfxs0nn9hc3kK+9tgYEZ1UWNaNBuT5lr2mKhi/9nIyOz0KCqZ/Wej427f
qqIk9p+Npi6r4+rRojmImDEpeYaS/edgillQh/UK9p+Dcs38ye8S2X8OHE+M
bTORFtmis29a1sYE9reFjeG+l9Xx7G+LKzbv6rrQWlvM7RTy93Ic+8/FvmOT
3oymMRcRw+tdy4tl/7kYMqHBqT60di5M4s3P74hh/3m4utpQ35fGPEgO+Vgc
lLP/PGyemF0OWjsPnc3s9t2IZv/5GBWpuO5FYz46eXjObEjL52OnVUDfPVHs
Px8PB0/0taVFdvh+ZrO4Lg07uAcFWxyOZH87lL08/cqH1trhinxj/X60yB7K
6UO2foxgf3u0rywszqfl9mjQKs5LQWvtcXzhs9ULadECpHSeOmmY0H8Bmm0b
GtRK6L8AhcoxvarC2X8BvN+0sX1GixYiO3DVz+s0FqJH67xWJbR8IfbZp2ed
FvovxLkFaSrBokWYLJ5w77zQfxEGecnlwt+TL4LxNe+gp0L/RQhvE5n7Q+jv
gEOHYnu0ED6/A7ZHHCwdJHx+BzyeeGDlPGH+DqhKXRssF+a/GCNMfi7NFfov
xpTdP2yfCf0XY8Hx0cM7Ct//YrSc1vS3vfD9O+Kl+4yMLBqOaCiK//1MWD9H
VPV7185UWH9H/LPI/4lcWH8J6rbQTrxNiyXY7zJ+kKnwe5LgTheT9am0RIKJ
a+S+n4TflwRundtttOPvUyNBO/NtRmeF36sEs/0OXh7C37dOguOXDu35/9//
EpS2qrOtC58P8RJcOnRvWyaNJSiz99/Ygc+XZAleWb6J3ETLl6C/n/2Q3nw+
NUtwYvSVvQeE53UJ7nS3eTCez7duCY7Xf7X3Ji1yQva0lc29uB+IndD7uv33
f7h/wAk5+zE9m5Y4oazY5u8E7jdyJxxon1XnFa1xgm//YeNThf3KCZsajdpr
xv1M54T5M8qGvqRFzkj62ev8Gu5/YmdorEPmTOP+CGds8axfKuJ+KnFG9ANx
2wJhf3WGeljP/sHcfzXOUPmH/RzK/VnrDCPJat/vtM4ZMz/+kBVwPxe5YHnU
oIYx3O/FLihs+/i/aTwf4IL123aHtub5IalxV+uRz4TzxAUzC1eOOcjzRuOC
bT+nByfwPNK6oOrhohv2PK90Lnj/NX+SKc8z0VJcli0pMOB5J14KZ2fXHs9o
LMX++Jf+J3k+SpYiOKPZmg08P+VLUbCwc1Qkz1fNUtTZsriDI89f7VKE+5ks
nsDzWbcUe5t/HN57I8d3xYaB3dc05XkudsWHr9be32i4YkDv5rse8fyXuMLC
sglKGR/IXbH02M/Ohxk/aFwxTbd1RDbjC60rxs56FpbO+EPniuiPG+9GC/GJ
G2wGXJsk3c7x3bC2X/zeJYxn4IZGn67/Y8t4R+KG61mvzS2EeMgN2dn1J5kz
XtK4YbAo+D/T3RzfDU9DM1N6Mr7SuWFPeUVuByH+ckfTvs88WjA+E7vjW51u
exrmcnx3yIpmuddhPCdxx+zLfdKraLk7Pn2Wt/7M+E/jjqoVI9+8YXyodUev
n9NFzw9yfHd47Dw79SHjSZEH6mWfzb/NeFPsgcIDMePKjnB8D5wrnlJWyvhU
4oGkgYEOZxi/yj1Q8if67vFjHN8DoRbfhx9hvKv1wN2IUPdcxsM6D5QePS3J
Oc7xPWHRJLvFZsbPYk9Ul1dL1zG+hicOtS33XX6S43ti495Jf5WMx+We8CwM
aC0/xfE98ePdnq3BjN+1nlhRYq3xZnyv88TFP+W/lpzl+F7IOli+ax7zAbEX
qm/91kw7x/G9cMipyfUxzB8kXlh8uGKQaQnH98Ke6+pDXZlvaLyw70CLmS2Y
j2i9MCZ55+c6Fzm+F2xbatboaZE3fG46DnjEfEbsjZuuvvsuXOb43igq9Gl8
hPmPxBteko6jNFc5vjc+aecOTGK+pPHGe48WOuk1ju+NH5bu4+czv9J54+rb
ZMvRNzi+D+YWXXzThfmY2Af9LdZ3qnuL4/ugi3P87ae0xAd9ooc3Ps18Tu6D
0dfC92+6w/F9sDNt7Mlw5n9aH5j1Vvadd5fj++DtspjXA+5xfF946Pw/12f+
KPZFI+1Z8/s0fLF8/t/CfQ84vi9Wii96yJl/yn3h/0Vvbv2I4/ui8dAFfToz
X9X6wvCPYZ83tM4Xv6Zi8CEdx1+G3C5DR0c84fjLcPag/dgJzH+xDL4rxpn+
+4zjL0PXM6sbltDyZSh+2/+0gvmzZhl2+/+ymfyC4y9Dk00t94uYb+uWwT5/
751jQv4tRcse3Yukr2ptKIV97MdFPSv4eaRoW5q35w5tKsV7h97bFcznIcXB
AcMnDHtTa2spMkuehupoiRStfOdOSXpba6kUQ03uagayPiCX4lHF/dgbdLoU
YVEfXgS+53ykcD199kxL1hfypHiWMaxNHq2V4lQd8ztTP9a6TIrtPT6LntA6
KW4szFQH6Wutl2LrmPUhDYT6hR/StgYdW0Mb+qH48B2r7p85fz84vFQP3Eub
+qHVX6X90C+cvx9Wdn54Lp+29sO0glP+o1gvkfihZMNyu2O01A8bKy4EDPvG
+fvhTKNm2n10uh9iT3Yb2fM75++Ha/9+uJdB5/lhbKeIzQ1Zn9H6YaT/L6VQ
rynzw7esE+qntM4PW2eN2DOtkvP3w5Cpoie5tMgfEZNvGLeo4vz9cf+tWu5H
i/2B46YvLtOm/jj289Gc3j85f3+MW/eoNJK29scgccaka7TEH/VWrznV9Rfn
748kR8XYZbTcH2n9Rx07Rqf7o+qmZmCd35y/P6YOvbppMp3nj5zmvxooaK0/
LCrDXYvpMn84tbp4TPSH8/eHpmmcaCSt94dI5zjSlxYFwOLgWGcNbRiA6rxO
kVdpcQAqyzsk/qJNA7D4piyyRzXnHwDP86ucptHWATjZVT/Uh5YEwNrH5GsK
LQ1Ak44NNDtpeQCG2zqbnaHTA+BbOO7EXVoTgCwUDnhP5wVA/ryl+g+tDYB5
zPbyRn85/wBsSf/QvDWtC0Dyp4SRHWl9AL7t7mEtpkWBsDikmdeVNgyEau97
qy60OBCHd3Uc0Z42DUTrjwtbtqARiHd7vz/7l7YORJ9S212VwvwDEZ320+2V
MP9AbAtVdr4hzD8QzV8VXC0U5h8I/V2PyM3C/AORc0DZJ16YfyCK3vS87SzM
PxC2Vz0TQJcFopd55sj2tC4QA61bf9ML6x+Il6Y2BWeF9Q/ChGM61Wph/YPg
NmKZt7Ow/kEw6XFq8QBh/YMw7/7Bpd/5e0MQns4ZE19IWwdBVO51IpKWBKHr
iaWtxtDSIOg7eKRUCb//IDgoLxofFH7/QdhUWvXOg9YEQbIi5EEnOi8IP8we
/7zC50sbhPJlT6YLz19ZENpXT7phTOuCMFX2ctU1Pr/6ICyqOroqhBYFo9ED
7e32wvMfjNGBnRwLuT+Ig1FdUj3InjYNhnrmrjlfub8gGHpNaEkKbR2Mk2Pv
repGS4LhP8nqxGHuX9JgVPR2mzKFlgcjIvDq0JvC/hcMPwXUjrQmGMdnKGwr
uH/mBcPld2yaL60Nhri8x8TP3H/LgpH2ellgAK0LxmWtzPgz9299MOKHLHXx
pUUhcOno3b9C2P9D0KfDLaUjLQ7BZ9vK8Js8P0xD0HvY2CYWNEJweUCXcUd5
3liHYFxU9/Y9aUkInN4+zU7neSUNwayUfx5X8XyTh8BOOfamhE4PQfL9ucpi
noeaEGS071zHmM4LQbcRoZOUPE+1IQidNN/uJc/bshBsH31kwgRaFwJ98eaG
WTyv9SE4UTn44Bee5yIZjvVMnzyVNpRhWda7c1mMB8QyDPBXjvnAeMFUhilT
83LH0JBBYXSiu4rxhrUMJl9aam4zHpHI8L6sp4mYlsoQPG/ZRTchfpGhxUaZ
Yi/jnXQZMkW3ln5iPKSRIfdRN58hdJ4MrT0bbw1g/KSVwXvZhOYHGF+VyfC9
S2LhB8ZjOhkO39+4sw+tlyHr1+KnTsL9QSj+ZGZ7r2d8ZxiKLm6zZpUJ8WAo
vjvaLv+HNg2Fwd6dI0cwfkQofJytZ7kzvrQOhd5m9t21jD8lobC7dOpRMeNT
aSi0wcdcPwvxayjqNV8k60Snh2L+hJvtLRjvakLx2sV27jLGx3mhiLdpM3AN
42dtKDxMFuYWMr4uC0WLfl4PHzP+1oVCvGy1ti6tD8W4ooGSHsL9RhjEDmvO
TGI8bxiGsFsmn50Z74vD0OSM3ZcY5gOmYTi6SXVlI/MFhCE2zUxVwHzCOgxF
/e6a3mL+IQlDe9t35z4wP5GGQav/ZtuAlochqCTqaWfmM+lhOGLRKmQY8x1N
GHRWlu2nMx/KC8O4qrwbjsyXtGEwD6jYFcB8qiwMXsdTdiQK+VYY8mXjrmUw
H9OHIaRw28BdzNdE4Qi94XahgPmcYTiM2w7aeYH5njgcG/Nyb9xlPmgajgMe
q2wqmC8iHI1kK/p+Zz5pHY6BUx1d69GScKyeeaCJIfNPaTh2lk7q2ZH5qTwc
r9deO9qb+Wt6OB5Wt7o0mPmtJhwjZJc8xjD/zQvH3cgjGRbMj7XhuD93hcSG
+XNZOPY96lK6gPm1rmY+C7vcc2b+rQ/HirE2md7C/U0EblcGtQpi/m4YgeWn
rawimd+LIzDZI8MqgfUA0wgEdWjdSc16ASKgHxp7ZhXrCdYR+NNog2UW6w2S
COzI73poC+sR0ggYvr3QdDfrFfIIXNpr43CA9Yz0CEwd4bPrGOsdmghYHr7+
W8t6SF4EFrQbtqiE9RJtBOJfTCq7ynpKWQTKK3Mld4R6SwT6L+ra+jHrMfoI
fP5v/LeXrNeIItHk5kGDj6znGEaisLr9/B+s94gjcXJcq4q/rAeZRsLdf+QZ
A6E+FIl7HmJ9c9aTrCPhVrQguAPrTZJIVK0PcujJepQ0EvuSq/YMFO6DIhEy
xdN7FOtZ6ZH4Fjtly2TWuzSRcC5qYG/DelheJLL+67bagfUzbSQcP9Zz9GR9
rSwSmwzbFIWw/qaLRN2ehccSWJ/TRyIlb5b9KtbvRFFwu9Nn6xbW+wyj8LTf
us0HhXpgFFbGvrQ7y3qhaRR2Hp1z7RbriYiCs7JDiwrWH62jcNnBr9svoV4Z
hfROMQ2b0dIoNPrpe6U765vyKKgnzJeNZP0zvWb8ITP/s2Z9VBOFFyWOa91Y
T82LQrAqrb2c9VZtFNYtLd+4jvXZsigU+/czOcR6ri4KgdcCz11lvVcfhd+B
y0PesT4sisbKH3aTG9GG0djgnTG8D+vL4mgMHdJy9lTWo02jUVkSu9FTuK+J
RusNa7qpWe+2jsbWZ1+e5wn18miM9Bj27hbr69JoFLm+HftbqM9HY9vczGfd
6fRozDh7UjeD9X9Nzb/vWzI6hPcNedHYcdKoOjuM84+G1qqRSVko5x+NOQ3f
lFbLOP+az+9apRtA66Px971PsCSE85djSxu/9JXBtTaQY2I78bCSIH4fcviW
qjyrA2ttJMdG7/zhw2mxHD1WbNi0LKDWxnIsettz9y5/fl9y9O0x0PGVX63N
5KgsTDrVk4Yc7x5V3lkqrbWlHLHjBufsWMbvUw6V/uGIt761tpNDPm5Niikt
kWN02qvdIT61dpejyRDrTK03v285+kyDpDEtkyM5s53Izovfvxxi/4Hy7Z61
VsoRGnruxXcProccx9e3Gj6VzpDD8B6CN7hzfeQIGuq8+4tbrXPk+BAZf286
nVfz/WCjwXbXWufLEb5u/ai6tLbm++1oGyRZWusSOeJzV5/QunA95VD4tDfq
TpfLMTNRnaRw5vrKUd4luc0Hp1pXyPF0ROaZebS+5vMkmK8+taTWlXIcc7iV
NoAWxaDTitNHN0i4/jHwt5vRvBltGIO5/XZrYh25/jF4cfBfz8rFXP8YRG8N
8pPSxjF4uuNPwRsHrn8Mbo1fOc2NNouB+ZF2PV4u4vrHYPNHp+lutGUMJrsO
PPtmIdc/BpoGA1ZIabsY2HT+nV+5gOsfgw2jeo6Oo91jsKhD9y6GtDQGS9Y6
LN1kz/WPgaeib4tBtLzm8+ddNi624/rH4PY+2Z6FdHoMBj+Zpvk6n+sfg6u2
Ng3SaU0MDuxPfN6fzolBSu8bo67M4/rHoOfCJk396PwYDLH95tCG1sagwGus
adFcrn8MqkclJLrTZTF4kGzr3Jouj0HRxB6lZ225/jH4Z7F9QTBdEYOq65NH
mtD6GExPNbZ8OofrH4M/jv1fZ9KiWHz54N3ZjjaIhX73u9dtaMNY9CreaFU+
m+sfi2ntnaZn0eJYdBtU94UTbRyLI31HdOxHm8biZf62zz9suP6xyG312OMc
jVgUf5XEraUtY/E+fjW8aOtYHHC4kT2etovF6QiH3e1pSSxOjnFe+N2a6x+L
HXNEh27S0lgcOz36yGFaFotv95o4r6PlsWg0xKYwmlbG4vuW2yfd6fRY1Jk8
z8+WzoiFj3tQ2QRaE4sVGcUPh9A5sUhbfXZdbzqvxnMe/NOZzo9FcpVTl7a0
NhbLdetft6BLYnFo5QHn5nRZLBaXnVUL7eWxmKood2tD62IheqT71JGuiEW5
6QmTXrQ+FsrWI1sPpitjYbm4yT7Qojh4dLr/zYY2iMPyncPeLaUN4+CZnZEe
QRvF4eM376eraXEcRrxs8GQ/bRyHU812q8po0zgslcY/+USbxeGI774nrYX1
j8OvJwNVo4X1j8Pm9r8fLBXWPw5T336+tVxY/zjYH9AFaoX1j4OBS1T+J9o9
DvVX+23qyd+fNA4bEmYYL6JlcXDsn2qzmpbHYYlFdrtrtDIOnxY/iWrG3396
HG4/SI+2pjPi0LX1s3araE0cgub+mH6PzonD0y93W3bn85cXh4GL45f50vlx
uNTn4aLjtDYOPXrk320iPP9xUDnffuYoPP9x2GT3UnZYeP7jMFYXt6Yp9w9d
HN7ONRvlTlfE4ez2sCXFtD4O71xyG/bk/lQZh+T7xqYKWhQPk+69r7+lDeJR
NLz83Wzuf4bxqN/QLvI4bRSPuPV5cmPun+J4vGl278sa2jgeotKCGw24/5rG
o4Wsd6dw2iweN0c+u6SnEY/8vZseu3N/t4zH9f/+2DwT9v94DLBKFkt4PtjF
I7V3scVjWhKP4sntz0p4vrjHw2XOi+XPaWk8qtr77fXk+SSLR8HmHy2+0PJ4
bJuYXRTJ800Zj7ZlSXsa8fxLj8ed7UfK19EZ8VhxSzzOhOenpqZ9WN79Ijon
Hu6q0btsef7mxaPTFvX2d3R+PLr4L7yUyPNbG49Nw2a2Fc73knh8XVEde0o4
/+MxJP9bIyfGB+XxMIrcu+sfxg+6eCTEpzvspCviMXrxz87WjD/0Nd/fzhFv
KunKeLQanliwhfGLKAGxfVurrBnfGCTAtkf9+X9pwwQkObi3y2N8ZJQAddmE
y06Mn8QJOLco2act4yvjBOx62+vbZdo0Ab3WfF6cyPjMLAELLxzbBsZvSMBV
P/Ozv2nLBHxq2+dwgRD/JaBO894BYYwP7RJgvflSpTnjR0kCyntsxV/aPQHm
I0wmn2X8KU1AiwfXRSrGp7IELN/x12cO41d5zXxeNVR0YryrTMDtS2OmvKbT
E3B/1f1tRxgfZ9TM72BbTQLjZ00Cxle3HziP8XVOjW/VtTJmPJ6XgOJZT778
ovMTcML1RKdrQvyeAH/xyrM7GN+XJMDz+Jyn0Yz/y2q+/8cvpML7PuUJiNP2
9BzKfEKXgB22L84bMt+oSMCViHdxH2h9Ag4Mrlp7mflJZQKCj5z8s1d4/yYR
Ucff7EtjfmOQiNjMDtv8mf8YJuJ52Ju785gfGSXCKubllNHMp8SJCK+35kU3
5lvGibA/GJzbiPmYaSJmXf2z4QttlojLNhm7Hgrv6yWiUdfdV0qY31kmoum4
lfUOM/+zTkRZ1bYJ2cwP7RKR32FQQjrzR0kiencMPxvN/NI9EfOtz1QtYz4q
TcScjhM6L2G+KkuESY8+JnOYz8oTsShyS7spzHeVNf9ed+vpSObD6YkYdO9R
9ADmyxmJ2FV9+3V34X2XRLRpf61de+bbOYnY43zPoDnz8bxE3Mj9mWvAfD0/
EfuzhxrUYT6vTUTx04RGP+mSRBROf5X7hfl/WSJmdrX69J71gfJETJ+w43wF
6we6RJxf+MTkOesLFf8732dtdKw/6BPh5JYe84D1icpEnFKWutwV3l9VoJu7
17HbrHcYKHDl+CzZTaEeooD1eKv111kvMVLA6dUIo2usp4gV2N/4yZurrLcY
K/BqZ9vGQj3GVIFd6Tl+V1ivMavx6sVtrwjvtyhwvrTut8us91gqMGLvonpX
WA+yVqDIebD5FdaL7BR4V2G5+grrSRIF7Ce5NLrKepO7An9OWKy8ynqUVAFp
iyPGZaxXyRQYv8PvTBnrWXIFpp0cvega611KBf7uu/v2Guth6QrkGzb2us56
WYYCDapWXr/OeppGgZ99zTrcYL0tRwHHGcfH3GA9Lk+B6nYvB99gvS5fgeLM
iC/XWc/TKlBpZym7znpfiQIWKS0LrrEeWKZA+fxd+8tYLyxXYHrVvflXhfdZ
FNjxJ2jbZdYbKxQYHDRz5UXWJ/UKTOw9qn0p65eVCuiLmw85x/qmSIm9Xfff
Ps36p4EStxf9+FPE+qihEh27nN9cwPqpkRIPSv4tPMz6qlgJq+2aCXmsvxor
satb3KBdrM+aKtHjl0a+hfVbMyW0fp+Ms1jfhRKt5NLuq1j/tVTiYcMuHirW
h62V8G9W70sM68l2Nf9e17sghPVmiRItZ2w86s16tLsSl29HPJewXi1VQlHx
eKQt69kyJQxEb/KmCO+vKGHy/MwEM9bDlUq0uJVVYcx6eboSS07syjRifT1D
ifbOfec2YP1do4RDhuN/3+gcJb56rdY+Eer1SmTbd156mfX8fCUQZvvtKOv9
WiV2H1znuZn3AyVKOFfML0ri/UGZEk1713kj5f1CuRLr7zZ7NY/3Dzol5nz9
N9ec9xMVSsT18DfvwvsMvRJ/q18k1OF9R6USkgEi5VPh/iMJvzRu5qd5P2KQ
hJVHLq3T8D7FMAl3fF5nRfK+xSgJUctjxtoL76skYeQLJ9kQ3t8YJ2Hq7KWT
mvB+xzQJV1t6ZT2jzZJw76kk7Bjvg5CEbt3Glqt5f2SZBN+G9fMkvF+yTsLx
stO/BvE+yi4Jze6nHa7D+ypJEvS6tDtXafckLG//eaFw3yVNQr7Hp9FuvA+T
JWFA3M1AU96fyZNQ3+jDnx+0Mgku1VnXTwjvo9S0L5jxPob3cxlJcD0bYDmJ
93maJKQHrn30D+/7cpKQ5mq56wydl4SE2B7b5bwvzE+C5MztS+a8X9QmYbBD
23bf6JIkDH+2O2EP7yfLkuDk49bUifeZ5UnYdKLv7ta8/9QlIdvluf15uiIJ
ti/TW4Xw/lSfhA8PR93uwfvWypr17fprXRktSsbyF5ULwnhfa5CMqY89WnXj
fa9hMmLcVpw6TxslIymr2MFLeD8kGWfilj5vwvtm42SU931mvYc2TUZYSdHG
qby/NkvG8QeK0uc0klFp/fCScF9umYzJa322tuJ9u3UyFKXfp++k7ZLx9fyU
k+bC+wXJmD3f/OdF2j0ZGWNPV9rzfQRpMga43D3ygpYl49SbVNNlokH/Z3ky
0q3qOH2nlTV/L8LRIrxOrdOTkfm94sEfOiMZ116+7xxVt9aaZGwYfbXhbzon
GX/OVa8LqVfrvGTkW/29qKfzkyHb5ZLl9k+ttTXjPbnR4AFdkowKs3qNZ9av
dVkyPtkUZJ+gy5PhMfb6xb7/1lqXjG4Zw+JW0xXJeLdGV/yH1iejf68n6c4N
al2ZjBY/5z05R4tU6Lk14FBvg1obqOCzI6xBIm2oglHKqTtPaCMVVn7O7Wbe
sNZiFbpvP/liOW2sQp3ciM4vaVMVvjsnXBjRqNZmKkjCk18l0lDhbIdZATdo
SxWevs3x6tS41tYq9O4mv+JC26lwYOXVdTtpiQrXTm+9+JZ2V+HNuy5OJk1q
LVXhbdvAhe60rObvdXl1OJuWq3Ds5LVl92ilCnO2blI0a8r1VyFZevXXeDpD
hXUXP1/wozUqbPTc92UjnaPCuPYFgaV0ngovzutmfKLzVbBKFoW3+Y/rr8La
nY2qzegSFR5tr3fLji5TwWRivb9BdLkKnxOGhqfTOhW+nb5lmUNXqLB3k5nb
CVqvQmuj07eu0pUq/Ih9s/IxLUpBzuoxm9/RBikY77bgz3faMAWjA77sqKaN
UrAu84qmXjOufwpc+xa/qk8bp+DK9TMRgk1TELP/gmNd2iwF+TPep//m30NN
+8rZhl9pyxRsejD0UQVtnYLy509+3qPtUrDzUoHrBVqSAmXrod2O0u4pkG28
1X8zLU3BBM2oZCUtS8GznOZmPrQ8BQfXdDSbRStTULbCVDWATk+BYePhgxvT
GSmQ7jYe8EJY/xQ8mddWflxY/5rP16VHn+XC+qeg17j4vs7C+qegflN5wmBa
m4I63/3N//L3V5ICA/+LVqV0WQqeVzUqSqfLUzD9d7F6Lq1LQcT1LUVt6Yqa
+R5aPPsOnwd9zfex+8y0VXRlCqoTD+ycSYvUGHu5k9+/tIEa9fY12lLI59FQ
Df2X9PG+tJEaC77dm9mZFquxK77n5YvC869GH93JomDh+VfDbXPjXl1oMzW+
7Y6oX8z9BGoc77DO0Z22VEM7uGp4Q9paDe8pFqk7uF/ZqTF7zzj3ibREDen2
vPMPuN+513zemWG5AbRUDa+41G4GtEyNfVf13ddzP5Wr8Xn+kSN9aKUaR07X
f3SE+3G6Gu+6tt0wns5Q4879IT9KuZ9r1LBaeeTjLDpHjdRmjZNv8DzIU2Nd
932ltnS+Gv+u7n/gBs8TrRqudY0trOkSNQaXzki5wPOoTI2RbxcmTKDL1Vj1
pefwfOH9PjX631dlm9AValx/F3Uli+ehXo2iHFFRY7qy5vvd0S1IJrz/loov
kf9WPuX5a5CKd1kPp02nDVOxcthrv/08r41S4d0uzK81LU5FSqbeKkQ4/1Nh
6He88R3hfdFUdF2+KHcobZaKzFaOY9IZTyAVI1svKXjN+MMyFfNS/jMZL7xP
lgqrQd1WrWG8YpcKz/lLf75mfCNJhfvFXCdz2j0VWXmvriUL79umYrtDHaty
xk+yVBSb/S3vTstrvPJTmA/jLWUqEhXfRxxmPJaeij5XR7b+xfgtIxWl2V/b
jqM1Nd/Xcp/JMUL8l4poh8rsU8L7yqkIu/ZtmIjOT8WAjTfqjWE8qU2FyaAm
LWSMN0tScVXdy3U/49GyVMh7Hqn/mvFreSpicxd87yy835WKOJF2zBzGuxWp
KHqy4UkC42F9Ku68OvrqCOPnylQ4Tn0496Xw/nca6hyuGNSKNkiDQ29tDBiP
G6ZhjdZ2uhfjdaM0qNdlr1rFeF6chrKMPOfjQvyfhoEW6UVPmR+YpqHtVofd
DWizNGyvGmtqwnwCaZiZ5zLHqibf+B9MpIbB
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 16.27546941601847}, 
       PlotRange -> {{0., 1000.}, {16.312765341852085`, 17.058683858524454`}},
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 16.27546941601847}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {16.312765341852085`, 17.058683858524454`}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"UAV thrust\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.709811771931218*^9, {3.709811857619562*^9, 3.70981186620709*^9}, 
   3.709812528359996*^9, 3.709812615012621*^9, 3.709812770214444*^9, 
   3.7098128818881683`*^9, 3.7098130648377*^9, 3.709813562710742*^9, 
   3.709814433777321*^9, 3.7098146359151697`*^9, 3.709815068643018*^9, 
   3.7098167237877607`*^9, 3.709816926820354*^9, 3.709868575361066*^9, 
   3.709871347109676*^9, 3.709871928229492*^9, 3.709872393667204*^9, 
   3.7098736048518667`*^9, 3.709874208016602*^9, 3.709874865477833*^9, 
   3.7098762952919903`*^9, 3.710161021995698*^9, 3.710416421666953*^9, 
   3.7104171371147337`*^9, 3.7104175207189703`*^9, 3.7143231511514482`*^9, 
   3.714377988241024*^9, 3.715627095935625*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_input_uav_thrust.pdf\>\""}], ",", "%"}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.709811931934916*^9, 3.7098119379495153`*^9}, 
   3.710160784409536*^9, {3.710161015283955*^9, 3.710161019088565*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["UAV torque", "Chapter",
 CellChangeTimes->{{3.710060903288764*^9, 3.710060905904479*^9}, {
  3.715615013924214*^9, 3.715615014281776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "4", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(3\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550656905706*^9, 3.6985508377666597`*^9}, {3.6985512963371563`*^9, 
   3.698551296631171*^9}, {3.709811874450719*^9, 3.709811914998761*^9}, 
   3.7102271725362387`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw923k8VN//B/BJhTZpkzaGNlq1a5FXi6VdJCQ12bKUxr4zGGZhpBQq9RlJ
KSkppVKmkqhoSFJatGulXfvP7+F9vp9/Po9nM2eO9z33nvs+97yvnvMWazcV
DofT3JnD+f//d/zXanquay8bO/WyUvoHDA16MbS/8xWyOlbrnf6VV3aZrIlf
hqYn/05k7o+8TYF93mVfImtj0nOfrzZc5qEo7qpiq5WjIHPR1W7yvH6TmfVh
ckjttm1yKXkEIufumxNecZE8CoEaGw7Y9WU2gGlvu2lHvS+Qx6DXmxm8WXUl
5HE4bjb4/pUlzBPw5PrQ3d1rz5ONkLhxer3SnXkSFr2w+9fQjXkyDBepXnhx
7hx5ChYUbG8+G8o8FdbxfcTa5szTcJJjVFmmyzwdF752/h2jyjwDMX8+yPr9
PEs2RtHwvC4m//NMyO13/Lj0v+/Pwr9BpgPc//d7s5Gh5tXj/QLmOSgKsE0f
HMBsgq/RkpDC48xz0b1Okx/yjdkU/T6MnWtkyeID9uZGyfceIAsAM+UZK2EP
drzmYfz5gs65EWTBPHyb2snz5nf2+XwM3qMytiiCjr9gPvYVz24Z2YONzwIY
KMfbPd1PFixAgXVYp2ML2PguxKZfdolL35MFC1FaPKpSsYKdD2Z4uq2fo3o+
WWCGye+Sq9ZpsPPJHNWH+nzL8ScLzBE5O+dY6QP2uQVyA7h3ZYvo/BRYwPrT
xtWfzrLz1RI/ivOH3BpP57fAEi178nRVc9j5vggeuXVuobp0PQgWYd78sD/d
97LrYzG8pj1V2TvsKn2+GPXZS+R9ssicJZjh+URjyehy+nwJNi3flT62gMxZ
CsFEzo6ds6/R50vh2OOLj3clmbMMJ24sy9nqUEGfL0MeP7L8+VsyZznSRg0N
XCaopM+XY/H+kI1Hta7T5ytwo1Xf4/kxsmAF1A5Frm6wvEGfW8FQ03G093My
rPBjW/6L6Jib9H0r3P9rffKHblWHFVZQvFG5fr6UzFmJsbYeEYd51dR+Jey7
b5lxUOUWtV+J512r4nbmkBUrEfT2VVz+CCW1t8bS8nML3weRYY0TKpvawivJ
AmuMXBGSs2RoDbW3xuSMte7Lt5A5NuiibucddJkMGxzMd/hdNKCW2tugacLE
8H8eZIUNpvWvcTMrIXNWwcr5g31Y79vUfhU8rOR9tzmTBauQqbY4MKKIrFiF
0uD/pBPV66i9LU4FVyfsXUOGLVbIy26cPUoW2KI2M/Fd8F+ywhbOmkUFN1bc
ofarMfdE9cDDcjJWw+x+/douH8mC1Vi98/CPGtRT+9XYrL7uiGoKmWOHPzOS
+OmPyLCDBP5poePuUns7/AxtO7E/lKxo/75HyCH1cjLHHr8/Oh/N6tNA7e2R
+jpzketassAeWx5nOVkcJCvsMb56g878FjLHAfON7w5eOuMetXfAXx2bOU5R
ZIEDXupHXttcRlY4ILKrmlNQt/vUfg209vb7uWUZGWugxrVus0khC9ZgoO+t
XkNryYo1+F4RvfRy30Zq74ib5+L05lmT4Yg/Q8atSk0hCxxxvlrR5VQVWeEI
UZVG3r5uD6j9WjRzL/dfsZCMtdiwJ8XlUiRZsBY91szq8amIrFiLe33dbj18
x9o7Yeh0u0sx+g+pvRP076SbNK4mC5ygPjTk9SsJWeGE4k6JBTnnyZx1aN3Z
+3Lfd6z9OgQMsk4eP+QRtV8H1TK1si+WZMU6pN/OXbYxkMxZj4IpN5cL5WSs
x7MSkd6S66z9emxR3LU5/4m1X49B5po5dYMeU3se7muv6ZxuSuby4BloIlFx
JYOHHe9mhw8UkXk81JaHmdXnkgU8mP2NCjWtJMt50D/864ZNM1nBw4OLDt26
d27qcBMP275Mz0IfMmcDLnUWTK/WIXM3QKXu1PqTY8nYgAeTOitaZ5B5G3DY
3lNVtIAs2IDVLk/fBS0nyzegUJA545I9WbEBy0qNT7k7s/7bf292/5ke3qx/
Z1wN3n2g3J/174z6NPmD2HDWvzP+mVZW7Y1l/Tvja0Orl7aE9e+Mobezjn5O
Zv07w/dCSorRDta/M2Ju6Q5SZrD+neEhf730dibr3wUpF6ynz5az/l0QeUfv
mXo2698FB8bquJrksP5dsL3nqZv3DrL+XTD8577Jjw+x/l1wevGu/OW5rH8X
GH/TtDNkbnLBypVPFvHZ9zmuqAjss38E+z2uK1oHpUdYHGD9u2LAf8O+38ti
/bsib0jNxIf7WP+uCB073sx6D+u//fesb9nOSmf9u+LMpaWCtO2sf1dkWfR4
tlHG+nfDjcXDMo+LWP9ueJ/OrfSJYf27YcNjXdHBMNa/G1afD/pkx8ZL4IYy
reJRQjaecjf8qU2bO86F9e+GRxKlzco1rH83HF46OPqLFevfvf2K7d2gZcH6
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
s+DEusdNpf8HnVssEQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
UT5TtDX+L1kuxOprZlf45693u1QIhVi1qdY+N7pdIcS+xfxXapNvdrtKiP2r
rZ+XvSLXCeHUV2ei4/aSbjcIke769UKN+a1ut3Tlua1vNnrd7nabEFbZVpUJ
l8icOHhrj9mY719K+cdh6YLxsy5r3aH843Dmb9yGI3VklTjsvvSkPDjjLuUf
B5vrnJSJq8oo/zjM3rIh82Sve5R/HA7OSvsw4hLZIA54dIpv53ef8o/D7UBV
k/Ap5ZR/HP72SlwZ9IpsEQdueK8E060PKP84TNb4+T1Uo4Lyj4On60+D+dFk
9zi4tf4Rf6gm8+Iww+Soa9Ssh5R/HDyWGJp0ysiCOHxVzjns8ZEsioNZ//U9
ryx5RPnH4dY58cO2LHJmHAwvdsjU2sjZcdD9NuTsFMvHlH8c7oaWX1A9Ts7v
+vx791S+9X5C+cdhxJdlZvmbyfI4aGUp37C6QC6Nw1hxxp8XQ55S/nEwPvTG
19SbXNWVl19aamYJuS4Oj21ePC0bW0n5x6FMNeXc6xBySxzGGA45WF1BbotD
/+1c1TNazyj/eNwq7J+4JZasFI+Fh+c5Kr0gK8eD63ZkrFC/ivKPx6tjeTNe
Scjq8biRMkZpxFuyZjyG2saM0l5QTfnH498lr6vGbyMbxGOCU83Z1iYy4rEo
7sS4nCXPKf94FI8bKZ6+m2wRD5MNIc7p38i28UgceHXsY7MXlH88er710fyc
TXaPxzj//S1vfpJ58TD07fE+f9VLyj8eVs3lwTYHyYKu/vbUKFf+JovikT51
1/jplq8o/3goZ3BGrM8jZ8bj9eFDG+z/krPjIeMW2s1eW0P5x+O26Htc/RFy
ftfnLSpc7NpJLopH+/aWjstrayn/eMwwnjr+wxFyaTxsbBNV3v4lV8RjlMDx
ULVWHeUfj6vHs4ZOXUuui8c0TV8lpyhyQzyeGI+bG5dHbomHm3bJeukjcls8
0lxNxkZ1kDkJ4NrYz7Oe/JryT8DtZ2KH4RZk5QTwSqaaXAolqySgZq/LXpMD
ZPWuv9f4d9TFe2TNBJzt4bNlyH9k3QS0hhxfbjHuDeWfgKThHs4BpmQkYK/P
F+9wP7JpAj694o5w30W2SID3inND5t4g2yZA7deloZ+byNwE1K9TK0sYVk/5
J6C40rqx50IyLwHHnpZMcHQh8xNQGbx3Uq6ULEjA061fD5SeI4sScPH48VUP
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
J7dPZucrSIZtSXT8JVaPqKve5kLP26ze1GQ47IdyPrsemcl4tHpTWBC7XtnJ
mG14/cTI/uS8ZJQ7iU/tYNc7Pxl3tRbHf2N5FCVj/sJXs6b1IcuTIV1VfBO9
yKXJGPD40nz9nuSKZMy63md/Tw7Lv+v6rDbpOMm+L3XJUNsnXWfwm43/rs8P
X3tuL/u+tSTDghOj8YZ9H9uSUW3meLxnKxv/UnBHFVhzWtj4l+JVdIr2C/Z9
V5biv0DR/K0f2fiXojoqRaL5no1/KaxMOFq737DxL4XmrL3jmth405XCvX1r
uMoLNv6lUJoRYDbxGRv/UpQ81t/R/zEb/1I01en7Pixn47/LZXPeBN5l418K
eT+XPz/Y7wVXijdbVzxYW8zGvxRBdi9c0y6z8S/F53vuj48VsvEvxTCjYxq5
p9n4lyI0+LJn2Ak2/qWY1zbyvE4eG/9SHN2+a2RxDhv/UvQujcnWy2LjX4oh
o70cBRls/Euhl27leyKNjX8pxvbLqC6SsPEvhUHmlzM58Wz8S/HkfeBgr2g2
/ruur2x37yGhbPxLIfOZlZvhz37/paj749Wjw4vl3/X3++7oGbqw/KU49FVn
ucMmlr8Uj0c82+xow/KXYpGCtcjIguUvg/P1jOoeZix/GVZervXIXszyl6H9
5+3VY+ex/GU4YIec8Jksfxm8G6X8oqksfxn6c5Y3PpnA8pfhW5LDoIejWP4y
SBYN45wYwvKXYfyj1ifu/Vj+MtzUqj/UqyfLXwaF5OEpgl/s/i/D6wcDDr9s
IXNlSEjKUlJtILvLYDz77f3ZtWSeDOncVYP1K8l8GdY/3PZJ+T5ZIIPlsUuR
D26QRTJUbx38yucim//J8PGxzpQv+Wz+J4OY/z3E4jCb/8lwwk/SlJ7F5n9d
53PKae/5rWz+J8OcRfonLiWx+Z8MXO6PWTnRbP4nw6i8j5aeQWz+J0PmwK0a
w7zY/E+GjH6Ft/dx2fxPhriD9hsGWLP5nww7Usra7Vew+Z8MQTMlt2Vg8z8Z
rG441ObMZvM/GZysrBx2TmXzvxRU12Z7+49j878UnOXeVtcZxuZ/KairjMq6
p8TmfylwOO3fe087zZfVUzDVyPi1cz1ZMwWLp88d9L2MrJsC09MJFWZnyQYp
SMsqd3Xdw+b/KRBYjhm2PO6L4f8BMUm93Q==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
pPmyECwv2GND82nGHf/uaj2Yb/8PWIovcQ==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1.1047978811281907`, 
        1.1295310987857947`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-1.1047978811281907`, 
        1.1295310987857947`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(2\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(3\\)]\\)\""}, "LineLegend",
         DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6985507001710777`*^9, 3.698550717526689*^9}, {
   3.698550765867029*^9, 3.6985507929795437`*^9}, 3.698550838937842*^9, 
   3.6985512922299433`*^9, {3.698552516714411*^9, 3.6985525368255033`*^9}, 
   3.698560747181594*^9, 3.6985607801022263`*^9, {3.7098119023147297`*^9, 
   3.709811915565405*^9}, 3.7098125351956244`*^9, 3.7098127705098047`*^9, 
   3.709812884325437*^9, 3.7098130684158382`*^9, 3.70981463630086*^9, 
   3.709815069582802*^9, 3.709816726612154*^9, 3.70981692726938*^9, 
   3.70986858373102*^9, 3.709871931388651*^9, 3.709872400479445*^9, 
   3.7098736078443213`*^9, 3.709874869932499*^9, 3.70987630298131*^9, 
   3.710416422514076*^9, 3.710417521753619*^9, 3.714323151459594*^9, 
   3.714377988570224*^9, 3.715627096316758*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulator torque", "Chapter",
 CellChangeTimes->{{3.710060903288764*^9, 3.710060905904479*^9}, {
   3.7143228120365887`*^9, 3.714322814872273*^9}, 3.715615019618972*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_input_uav_torque.pdf\>\""}], ",", "%"}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.709811943394271*^9, 3.709811948267392*^9}, 
   3.7101607844583673`*^9, {3.7101610430956984`*^9, 3.710161045180603*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "5", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "6", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(m\\\ 1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(m\\\ 2\)]\)\>\""}], "}"}], 
        ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550656905706*^9, 3.6985508377666597`*^9}, {3.6985512963371563`*^9, 
   3.698551296631171*^9}, {3.709811874450719*^9, 3.709811914998761*^9}, {
   3.70981195752712*^9, 3.7098119716505404`*^9}, 3.710227170396784*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92Hk8lN37B/DRqvSUNtGKFK20SRufpGhRtBIy9jXGvjODYYwxtFJappUW
RQtSaUSlIlqUSlKpVCqtqOjn9+o63+ef5/Xudua6r/tzL+ccDUff1S7dOBxO
U3cO5////++/FqNB/ZcXOxRcvUL/AOeeXL0h45gV4d25IPDD7hKyMjIwYkCl
KvMQ3Oor9t+3T05WxbwxSR0mk5lHQtc+7tfyuCtkdZzq3rbR/HIxWRN7j2X5
WfVi1sJzsaff7E2XyeNxmrfO81zZJbIOvo5VXLprDvNE/LeruOb0pYvkyTgY
PPNsiTnzVHzs42mX0VxE1kP8KGudjgzmaVgVkmV4YTXzdMT9dZLtUGOeAdnF
Jxo2Hy+QZ+K/l2LPe5XMs1BhsfR7aRGzPnrkZPRtO8s8G7vtjG7pX2A2QEaI
pobZLeY5MErzuvPtDfNcNBt3OioMYPXnoVx5obGBMfN8rBg5/5A9n3kBbDUG
bDW8yWyIFd+Kv2SOZP0bYfBF62jDcGZghR6vqvkFmQ+cGfJi4+Y17HouBHfj
t5CEO2T+QojSihw7V7M8jFESJjfKbCDzjTFU+dOYsSEsv0UYlJvTw1aF8uYv
Qut5o0alYpa/CWQYteGPPt0ffBPoLx+m830ru18W41bRDLvqr+z4Yiyv434N
WM/utyW4KbnxruQymb8E4t1YuVeH3a+m+DHg1qx3O8l8U7wd214qUiyl42aY
cd1lsn0UmW+GhJ7/nV/1gx1fijFPswoX8Mro+FJMW/Q9u98nMmcZHjR9Upb5
XKPjy3B66J+dT7+QOcuxp9vfzoMh1+n4cqio2U9+8pfMWQHfCb/Huohv0PEV
0FVW6q8zrJyOmyP2Qsvs3kfJfHN0NrYPfat/k46vREvYkMUnb5L5KzH+SIhk
3qZbdHwVzlmZPA/7TuavgvEo9U0rJLfpuAV2+1RaZYyr+GdYoEH12qpFcjLf
AsfmPfgx3bbyn+UWcDpzdZp5O5ljibacnuqh6XdovCUSjWOH7NavovGW2JXq
tGfXQ7LcEiF/ustPzaum8atRbhHv6CohYzU0OLpWbs/I/NXw6LB0PjL1Lo1f
DX6RkfcQPpmzBiOst4Vm3yVjDcyOJuSvG3uPxq/B/GbrMOUgsnwNOswr51Ve
J3PWQrn7iQN81fs0fi3svR3CxniS+Wsxc++Jy/sukuVrcTRjSfq3fg9o/Do8
nJS3afAmMtZh8p9ve7+dIvPXoaeK7yDxX7J8HSx6Hz9VsaqGxq/Hno1j9+Tt
J2M9bo0YuUD3M5m/HootNlPnGz6k8euhPfe9WZWEzNmA2OLCQ8+fkLEBVibz
dzjrPKLxG2BU/vncuiCyfAPmthbXHS8hc6yg82TtRNv/amm8FYrvLec4WpH5
Vui/en7v8wfJcisM/JM1dWUzmWONP7iSM37WYxpvDdWqv90Nosh8a8zZc7w9
oowstwYnS1nW3PcJjd+I45/OW8ZbkLERavxlZxbsIPM3wuRe2KnBj8nyjVDp
uSVCYeRTGm+Dt01/dnbbRIYNtiocuDZoP5lvg9ZOxcFTn5PlNvjhGFxtMbqO
xtvi16KKbSG2ZNii91Ib/f27yHxb+IxNu19WQ5bbou5Nwo3Xys9ovB0k+cKc
v8vIsMOnFQ6blOPJfDv8elv5aeglstwOLuP35/T/xsZvwmyrdo12nXoavwnt
F4P7PLAj8zdhTv9F6/dtIcs3weqS7pQNZWSOPSZ8vfqq4wcbb4/WPYs6t4x/
TuPtYcMtmzJ4PVluj6VWuisF8WQOF0cc1jrX5ZHVuV3X/3emVj0ZXcc9OzVz
ejT8M5eLl5d0PxSrkflcrJ6BL6ZTyTIuNAwPpJoZk+VczFt6WLdkHbmBizO6
e83OuJM5Djjv19d+ZARZ3QFlwaXdOSlkOEBddcp9u32svgPKDwYG6p9m9R0g
DbqbIb7C6jtg1drKXxurWH0HLOdvs8uuZ/Ud8ClziSTgI6vviDnWdtaXf7P6
jnj0rue+hD4vqL4j/tNMm1OtQuY6omZOvXLmWDLfEZmD6v5r0iXLHKH36s/o
wnlkuSMidK7o9zMlNzii7rz+8teWZI4Tmi7vWWdiS1Z3wrZjry0nurL6TrDa
amuY4cvqO2HSDJMRqaGsvhPKNKLeDxCw+k5YMXba6RFJrL4TDnvFbT6bxuo7
oSFz8cTadFbfGT9X5r0X72P1nbG41/hzFYdZfWeMXP4hed9xVt8Zqg9/Bivk
svrOmJyWH/bzHKvvDJjUp0dfYPWd4V1j8GD3ZVbfGRXVkXorSlh9F6TO1MrZ
Vsbqu2CJielS/xusvgv8TMK7vbvJ6nf5d86Dttusvgu07g0qOljJ6rugI6Dz
+Ns7rL4LzlXe31texeq74MzyjwlLqll9V0jmJFk5Mqu7YuX4wm6jmOGKhdPN
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
L7i7b9l7ln8SXpVGGv78wPJPwuzblppbP7L8kzB5xXTj0Z9Z/kk4Y6+5c3cL
yz8Jku1mKr2/svyT4LLoU5HTN5Z/Ep6+iInM/c7yT8LitSlrPv5g+XfVM7xl
MLyV5S/GN8v+42a3sfzF2LNv3UCTdpa/GA118p/4xfIX407RjjtTfrP8xRgz
3mhr3z8sfzGm7zCf94hZT4wnK0NKt3Ww/MUoyc3QQifLX4ydgees6pjNxLjw
7Zu1+1+WvxjHPbI0G5mtxPg7c0nOKs5Xyl+MccN8vx9ndhcj3b/p6w9mnhj7
EmWH9BTIoWLUnM5RsGHmi2GQsVIxiFkkRlrY+zPRzGliHFk1sCOEOUOMN/0j
X3KZZV1/X9vPfg5zthgeU6p8FJhzxfg0uu2/C+x8CsUYFfPGgMssF0Paf2zz
T9ZfuRhLjnG1opirxSjwi6z/yq5PrRiHfkUNs2JuEKPZJ73iJLu+TWKsKxz3
u4Vd/xYxPA/nyrSY28T43vtDkSnLj5OMRw1nTDeyfBWTsTZ44GLb/+WfjLKQ
eXnm7P5QTYZcbYt4Krt/1JORMm1fVSe7v3SSoblqeEwxu//0kuFT05S+md2f
Bl3HB6qp9WP3L5KRZ/5G4X/3t1ky6psKLIex+98iGXucNRTj2fNhlQzzkJda
Dez54Xad7/C3WZPY8+WeDI100y2u7PnjJUO61exFGns+Q7usYpNxnD2//K7f
2z2y4Cx7vkXJyFbcYHiygT3/yfhWxtHdzt4PGcmYdGq+2Iu9P2TJEKtvtJzO
3i/ZyVj344Gw6RF7/pMxQ7BugrSGPf9d1zMtd8FY9v6SJ2O709uyrGqWfzJi
j2iXjLjD8u/qz/X2zJjbLP9kfBlgrXmvnOWfjAMb4yRDrrP8k9ETE4KXlLL8
kzGqed1LNznLPxkfTuJB6GWWvwTGDStWhRWx/CWY1dBng0cBy1+CPR+nfzY7
x/KXYKna6RGqeSx/CWwnbWl4mMPyl2By0jBj4XGWvwQxaidNxmax/CVYpN3Y
nMu+Z5Ag0phvNFXG8pfg0RjvhZnse2ghwfbg4tZW9r20kqC4rtDNhH1PuRIM
OHhjJ599b90l6H1MID7Jvsc8CbINs83Kk1j+EsS3jH90X8jyl8DRYfD8KgHL
XwKdkTlRRVEsfwkSXewO7ghj+UvQpFSQyw1i+UvQMiv49Ag/lr8EW3T5R657
s/wliJ31apeDO8tfAmujh9uanVj+XfXKC3e72bP8JUjfMSj/3kaWf5ejtn2c
sp7lL8GZiYOXhlmy/CV4Xp9WfW4Fy1+CxpkzJA1sftYiQUSDafwfNn9rk6DG
e1GJoiHLPwXKv+TLe85h+afgc5tg8tcZLP8USF5v9q6ayvJPQQpn65C9E1j+
KfjbS2OqjRbLPwU93vlf7TOG5Z+C/2J6PM1WY/mnoHFBiMBgCMs/BWHv0q4U
9mf5p2Dxknn7J/Rh+afg8M24icndWf4pqDfL9HrWweb/KXhxtMZbvY3N/1PA
ERwzWPuVzf9TsOTJ6cehzWz+n4Kma4c2St+w+X8K5io7Xt/O1gOiFNS8adKW
sPVCWgq8YzaIA9l6IiMFuy5/bDO/w+b/XdfnkVKMajmb/6fgVvs0nQclbP2X
ghPv/v7lX2TrvxT8PDpz0JjzbP2XgoB+pzxPnWLrvxRE+7oP1c1m678UpBlG
jz5wgK3/UtC8T3trj0y2/kuBaZ+iSOvtbP2XgoOvs97vT2HrvxS0j+M3PWLr
u7YUuDR8jFXgs/WfFDObCq6PZOtDRSlUXeXyCf5s/SdFlm+PaB0vtv6T4ufe
TCU1Z7b+k4J3qCD4ty1b/0nxteFQRdU6tv6TQvFX2fCdK9n6T4pM9wyflaZs
/SfFzQHnatqM2PpPioF3rtntMGDrP2nX93bbEK1pbP0nBd+mrfeRCSx/KfQ/
NC1W1WT5S6Eww6cuiq3neV3nH5j1uGYQy1+KCeY3l6srsfylKDYetdCuO8tf
is2Hu6WptdJ+QpoUn1vvPLN7S86Qokh2XJT4iCyTIrb1es7OG+RsKbodDvdM
LiDnSmFyFnUuWeRCKYbkFKiPTyfLpbidLVtXwfZPyqWY51CfYRVMrpZirFmg
4m0Xcq0UzzOEV8euIzdIkeu59rWjCdv/kWLBVaSKZrD9HynqD96o367J9n+k
MBsT+zVxINv/ScVrD613Dhy2/5OK+42RLzQ/0/6Scip2Tgv4desZWTUVnui9
ZmMFWT0Vh+0t+t4tIuukIm5ZpJHuMbJeKqYb3BkYlE42SMXJ93tlB4VkpGLV
5fVKhQGfjP4Pm9pe6w==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw923lcjPv7P/CxJRzpCCUkIoUPyVKW9BIqWyVtiCaV0qZ9X6bZmqXFLntZ
i5AoJctkjSyFEkkjSbKUvY7t2+/R9f6df87j6faea173NR5zz/u+7lHrNtp7
dedwOM09OJz/9/+u/9rMVYL9jPfZFV2hP8AVp8jCxqfnyaqoTlPEpIYyq+Pr
4d3rRoxgHoTg7KYInepCshYOrn5forOfeThmbvyvd14Ysy6WLP38zHsl82hM
VamdUb+EeQweHEiPzv//1kdHzg6TJBdmA5wymaj1MZh5PKb8I8jfv5N5IpL3
zfWffZt5Ep61jFm5UYW9XyPc1ek1vNmGeQoMNtwvczzIbIxMp8pbvhx2Pqai
adjYC7U+zNOgccXQza2WeTqsC0fGnnIuJs/AMv97lwV1zCYw0pqQt8f/AtkU
2v79t53rWUKeieA7t1zSjjDPwtK3l5NabC6SZ8Na7bVGCucSeQ72OgwVmFxg
NoNDkUdmfuxl8lxcbektvb7gCtkcO/ZNK9/dV0EGlqivOeYdQeYBlzRnTjj1
mh2fB6MrFlMcXErp+DxMcsodjPtkjgVsw2bkuVhdpeMW+OeKm43oGpkzHx3z
3p88aXGNjs9Hw/SrP4qvkzkL0Ge4dsmWRdfp+AJED+W81a0kcxbiUdKYimWr
b9DxhRgu6NDq0UzmWOL4q2FXx0fepOOWsC7tOeK06i06boVzZt3LY/aSeVZI
+Bt2Icq4jI5bY/4GuzHb7pB51ji4rlZa5Hmbji/CafHp/ErOHTq+CDLR1+Pl
+8mcxaiIqyrdMrecji+GV89JEg0lmbMEDQf9H8wS3KXjS1DmmJ39bdw9Or4U
wyqaPKbcJ/OW4nqfzem14ffp+DJYnNFof6nzgI4vw1/VnGPGt8kcG9jWjPmy
ZlYFHbeB6K1yeOEmMscWokFfjXe9YcdtUTw8pvDP3Eo6bod+e9utXuwgww6F
gUeOTW4l8+ww+2ZRQYvVwy4r7DBfdjukdxaZsxxnThpzEv4jYznshvEyLR0e
0frlKK57eX7lKbJiOarGHr57WvUxrbfHycfHk+d5kGGPVZNbz/W+TObZo9j7
z/yfWlW03h4hOZHWg8PInBWwc5f8Z/OAjBVoi/M6nzW+mtavwE9fRbfeYrJi
BeadnsGPeknmOODeuwu92+Y8ofUOULP9nuydQeY5QNsna+TTL2SFA4aEPxpo
bltD6x0hX2F1b+txMhzxxW57Q2Wvp7TeEYuM3NW+cskKR3RUxk77VkLmOOFe
z3ZuxZBntN4Jf0cal/GCyTwnpOveudntLlnhhNCRm17a6NfSemfI1TxuePDI
cIbrjW5Wc56Rec44lnB/3eOpz2m9MwZxRHMMUskcF+SWvNKZ1kSGC7i21rFf
59bRehcsqjV/67WTrHCBzfl++qJWMmcl3EYNG2Rr9YLWr8Q4WcwFxX4ybyXm
TZm54Mk3smIlZpbf+Ju+tJ7Wr0LmJ4u1zQfJWIXvox9/rmsn81bhzT+fTU3G
KWn9KjRnGdeULydzVuNyurhyQhwZqxFw8MYkp6Nk3mpE+r9QXVzB1q/G7i2B
ySr/sfWuCOmxSinTe0nrXaEa5O5cvZTMc4XAqcisOZyscEXWu92fruwnc9ag
xrCxzvUWW78GeosOR19uZevXYMzz81aNmg20fg20y92q75mTOWuxxO3Z5Rhv
MtbiRcrvwy1pZN5aGB1+OGNEIVu/Fr/Spk4cWMfWu+Fb0QbL2z1e0Xo37L9y
39ZiPJnnhj2cjcPi7cgKNwi0TwmjI8gcLlYGfQg02UvW5WLHxWk3CkvZ63Gh
fvl59I8mMpeL0SpzxB39Gun1uSh779hy0YicycWlk/LceY5kBRczTts+TY4m
K7lw/vSMn76PzHHHk0ONCpdSsq47PtWtznvVSIY7HofqhRqpvqb67pj26sFk
8wlknjtM7bz/VbchZ7pjnlzP6lAQWeGOwZozenZsISvdcUo/LfHfAjJnHW5J
M7+8rybrrsP0hCn75e1krMN1V13Fh6FNVH8dRmhO36cxm8xbhzXxrbG/V5Mz
Ow2XIyfiyIp1cD72yFNnH1m5Dh8/fOvtdInM8UDfeStf2NeRdT0wwS585uDf
ZHig14Yo/33D31B9D1RojL77bjaZ54Hp+gdOcVaTMz3QYuHt9zyarOg8fmnY
6sQMstIDJ6q8n7wtJHM88cmqYdbwKrKuJw6MbFMO+UKGJy6VZ499pt5M9T2h
6V3itX4SmeeJHpMc/5QsIWd6Il+zz7JaH7LCEyPlRaevi8hKT5wdFy+MOkjm
eOFYxlbDH5fJul444mf1G7VkeOFOQ/0apx+svhd+FafmmGi8pfpemFezcu7r
SeRML6S/HhTjtpis8EL2JasLR73ISi9oFo9xLeGROevx+Xr0xX17yLrrccji
kIlNIRnrwclJNLxXQeauR129xwftd6z+ely1VX9h0quF6q/HrANHHceMJCvW
I0cz86TSlKxcD4cT1+cG2JM53ijdMdr9jh9Z1xtrdqr4twvJ8IZ2/teCH/vI
XG+cFWRtKysk87xxc/B7V78HrL43XhjXrFO+YfW9IZwm7RjHeUf1vaFqaRZq
oUXm+KBtyKJRRkZkXR8EtGs4fLIiwweJ3EGrxW5krg/6PrgrbI0g83xgOeC2
zv/SyJk+qK7cE25+hKzwwfPdzx/rX2T1fTCdo5/86iGrvwGaUwdVh79l9Tfg
UeX8vi/+svobkPDbzm/4kPdUfwNqT1ebT5lI5m3ApmWB94ZbkDM34E7waZd6
Z7JiA7RaJ4+NDiArN+Bqd2F4C5/M8cWXwrnyqRlkXV8MDP581OEkGb7Iz56i
anOV1ffFwevpH0Y+YfV9MXLYwW133rH6voga2G2WDecD1ffFQrdFQ08MIit9
MW/tiICXBmSOH4rF+hs/zSHr+oH/ZYhLrR0ZfrDgnHA74Enm+uFm+/GLZlFk
nh+cat4fLpSTM/0wUdNpWd8DrL4fhgnr3prms/p+iDZIPWlxg9X3x9lpwjvj
alh9fxh9bQ9ubmH1/fG/m7MeC3+z+v4wHnZO9/eAj1TfHxfD3ouWjyZn+kO4
XjaFP42s8MfNnY526ZZkpT8OXzNVi3YhcwKw/Pz8Hea+ZN0AOC87OfBVLBkB
uOVZleuRSuYG4Oojy9TS/ax+ABY4FNf+Os3qB+CRr8aVwaWsfgAmWPqv+ech
qx+Aqp39nysbWP1AOHqGu239wuoHQlTu3G9Mz1aqH4iXtzK7bx1E5gbC/HW4
t3IMmReIvh9NVv8znZwZCN904Z8hC8mKQNR/MQnmOJKVgYhxCHxY5knmbMQe
nghBYWTdjXB11Xn6XcDqb8Q1R51i162s/kZ8qsj7lXWQ1d+IWLn1lZtnWP2N
mPUjc1i5gtXfiJ8pVyacfsDqbwRX85tq6AtWPwhrv78oH/KBrB6E5tU+Kbt/
svcThA+K10Z/e7Z12SgIcwMWTRn1DxlBqBixzH6qBtkuCJ7dJfuna5O5Qbil
O1vXYBQ5KAgrG5e/7GtA5gVhYu66d3WTyJuCMMPltFXWdHJmEL5Wjf3rMIec
F4SSXK52hwVZEYTFsmNZqYvIFUHoUdG6d6AdWRkEpW6dhsSJ3BaEfp9K+390
JXOCoaaZuXmBB1k9GCvdDI/KN5B1gzFztGL5tY0sfzD+rYvc/S6c5Q9Gwf3B
4p5xLH8wHu/8V1uNz/IHI6J++2pVCcsfjNG/eLZfUln+YPzK8vrv/laWPxhW
O+TcPbtY/mDs9mkTuRxg+YOhY2wdqHKE5Q+Gxeo/w48cZ/k7X99nxvZpeSx/
MNrL7z49V8DyB+PJNecPY0tY/hCozzR4mKxg+UPgcmKx7NkNlj8EWnoSTZ1y
lj8Evyd4x9pXsPwhaH8y8XxkFcsfgj7ldeWpz1j+EByyNb+wrZ7lD8H0sBp+
SiPLH4LkKV/Ghr9l+UNgs3vfIZuPLH8IXmic+Kn1heUPwd+dBf97/IPlD0HH
X52ZvF8sfwguugwcMaLbJ8ofgpkQ1RzvRW4LQdKSmb6GfcmcUAyJuFSRoUZW
D0XLro19OwaSdTvdGj94sSbZKBQqu5pb5cPICIVssmDn5ZFku1AIud/7NOiR
uaG4mlK64Ps4clAowoLnLPw5gcwLhXpNhuqnyeRNoXi8tFH+ZCo5MxRWz/vc
PWVCzgtFePWjGxGzyYpQLMz4ED7ZnFwRirmrXtfUWLD8oZjYc9K7EEuWPxQx
vUbl/F7E8ochdwpnQPQylj8MuzJ/aL22Y/nD8GTzyGvzHFj+MDTZJ/RJd2b5
w/BqXN/mu6tY/jCkTT+x6ucalj8M8wLM1mi7s/xhUIve8s7Qk+UPw+ns0G7j
vVn+MLTXHdqt7cvyhyEj6mX+T3+WPwwX0Lzw3kaWPwy3bENt00NY/jB0+zG3
fF44yx8G10N9CxojWf4wfL+0WzUqhuUPR1/phdKfcSx/OALbzZ5vTGT5w8EX
9XB4nMTyh6Pt97cxhkKWPxy5S9WWBIpZ/nDomDlePSRh+cPhZ/JafFvG8odj
5vd32+pTWP5wVE7LbX6dxvKHI98xMeH5JpY/HA2cJ/bXtrD84Wgpnrtu9zaW
Pxzf/NfkuO9g+cNx6/P3MUMzWP5wLJF/qFTsYvnDscpm/kmXPSx/BNK3DDun
3MvyRyB/0cVXLvtZ/ggo7dNnlh5g+SNwulTv7NAslj8COdqTbdYdZPkjkCBM
U91ziOWPgO5HK+W1wyx/BCwM5Y+eH2H5I8DryFe+PsryR+CJpqVK/TGWPwIr
xrdblGWz/BHQyzu+PSuH5Y/A3pcBv32Ps/wR2CVMih5zguWPwLNzjn3uM7dF
QJQpz/XOZfkjcd/0+7pPzOqR+F69e6LfSZY/EvpVZ/pUMRtF4uOwY/9NOsXy
R2LQYW1ONLNdJHLfK7XPMnMj8dKrx9I65qBICCsU234w8yKxcEvq926nWf5I
NP3RCP3FjmdG4tqOaf+8Yc6LhMksleulzIpItNlX701hrojE+s8Gu6yYlZE4
2FRU8pm9/7ZIpF2P7J3GzIlCY3Nq4lBm9SjM37hq3HZ2PnSj0Ec3tHs3ZqMo
DHA8PGgNO5+IgktVm3sOO/92UVicvfnja9YfbhRmK79dHsgcFIXvrlefTGb9
5EVBX1xpZsb6vSkKOn+Mv89in4fMKPRbNkHFkH1e8qLQXzQ1tDf7PCmiMLq+
3aKaff4qouC73DV2O/t8KqPQohMyemEmyx+FP9ykua/Z55sTDYWsR3X4PpY/
GkVNh1q/s38futH4oGa+xWc3yx+Nc24N1++wf1+IhqtXedqInSx/NPos9P7B
3c7yR4Mzyl5l+1aWPxq+UU7Xijez/NEYLPCf8SCd5Y/GJGmxd1Uqyx8NE5N0
t7tylj8ako+++uekLH80EgZ+u56SzPJHI86es8BJxPJHw/CTJFddwPJH47bq
ud4XeSx/DAzv3V/rksDyx8CkfFnJ61iWPwZe+nf1PaNZ/hgMf9z3xKMIlj8G
7lWty6eFsfwxuBooGisOZvljoFzbMfl2IMsfg2Mae2N/+7H8MbB9UT9QbwPL
HwNLfRfOrPUsfwzEe4psLDxY/hgovB+rzuGy/DFwdts3cxz7vqmIQeYUvfc9
2PeRMgYvMrZMeOjE8sdgiGxajy0rWP5Y5HkGJMxn33fqsRg9+mJ201KWPxY3
RMWpsez70igWL5dqzuzOvk8R25nvQGEM+761i4XFH+OBr+ey/LEo6LjtPI99
XwfFQudF8NZ09n3Oi4W64bLKB+z7flMshsRtGdHdiOWPxd8KuVB/Issfiyen
tg80M2D5Y9GLq/N44RiWPxa+hkeqoMvyxyKfX6w3aTjLH4ts2//u9Ndi+ePQ
rj24pl6D5Y/DGPsbzocHsPxxaOQ/clrdj+WPQ/6uQQ09e7P8cfjf6A0qWd1Z
/jjkSi5WTP7Drv/isHZNT5szHez6r/Pv7zKXj/3Grv/iMKAxfHtKG7v+i4N6
XWF00zt2/ReH3p5DF059w67/4qDy+kLP0AZ2/RcH0ZHLN47Useu/OFhpLNte
XsOuf+MwZfBWXuMjdv0bh5w1pdva7rPr33iYXelX33qbXf/GYys/27/hOrv+
jUfj5QeLy66w6994PDp7QZx1gV3/xiNw7KH/BbLra7t4GFy4unQSu/7mxmPv
KvtPL9n1eVA8orZKDaTs+p0Xjykd+/7qZbL8na+felWQv5vlj0eNwbir07az
/PGoVv64dTyd5Y9HQKTrwUEylj8ebTcj14YIWf54uBt797mewPLHw1LTIq9P
NMufgO3zhnLnh7L8Cch3/z42OIDlT0CgsFZtqzfLnwCd1KvjctxZ/gRkndkb
f3Y1y5+AK+3LR+Q7svwJMLmg0Dhiy/InYMyoSwEp7PcaLwGWeeqmPvNZ/gQk
lEUnmpqx/AmYM+WE3e8ZLH8Cuh9aUlRoxPIn4B+Hb1c9x7P8CWgQT4/vPYbl
T4DGsJQv+0ew/An4O9LPeIImy5+IHRtmWOaqs/yJsBo3f/bovix/Iu7GPRmR
2oPlT4TzLIevTzvY7/NEhD64ViR4T7ZLxEy1CVma9ez3eufrj9lxY3slOSgR
nm6tZn+usd/vicgO+zNqeSF5UyLuVXpL07LZ7/lEfPpwQl64m5yXCLNMfdxO
Yb/vE+Edo3b5ZgK5IhG1+mHDTwex3/uJmF4+L4S/jtyWiEuBs6rhwH7/85Dp
2bG2he1XqPIw98Kn0YkmbD+Ah7KcANO/BmQtHvqppxX4arP9AR5+Ny3KK+1H
NuCh6VrA3J6/aT/FiIcxK/eEG38km/Ig/mXtt7Se7e/wUG9UOs2+gmzNwz/T
Rr+Zz/Zv7HhI37Rm56h8sgsPH/JNVr07yPaDeLATWC3I2kr24eFE9+8b5gvJ
QTwo38XXV4aRo3iIcXlXtNSL7R/xcGrDsL7nHMkSHg58LWnqzfarNvHwynjJ
OusZ5AweQiM0N4Xrs/2mzvP3cq4gfQg5m4edo0/b7FAh5/FQZTy2l+w77Z8V
8WCi/b9i3ya2P8fD4YJR8abV5DIeLiRN9PjC9ucqeCjwWRi/p4Bcw8O+bcZ1
RkfYfh4PvAWSbWe3kZt5uHok+5yekNzGw428azZJoeR2HoL7PAm9u47t/yVB
9dXJab3syapJePVGmTVhHlk9CbFjqsvNjchaSTD6rrg6byTbL0yC1++sHVPU
yAZJEGpYOQ/4TfuhRkkYsGDJoFq2P2qaBO/bQ+q2PWP7q0kY079eMec22ToJ
V04cvf/wPNkuCTmxZoOdj5JdktC8E4dub2P7sUlQC9ROHi8g+yRB/qD7g+hg
clASQlX+Ss67kaOSwP/w8uqrZWz/Ngl7+y2V/ZlNliSBl3/ife/x5E1JOKJr
9uOvJjkjCZVH+55v6sX2e5PgUfHe9OIX2q/OTsLYdJmU95Kcl4RA35UFUx+Q
i5JgeWZfWRXbD1ckYctp3wfrj5PLklDXdLCqaSe5Igl3F7U3OYrINUlojXmv
di6E7acnQaJW6dKNS25OQsaDWw/MlpHbkiDufS1hwyxyexKsb4uChOPY/jsf
VuaHT6cNIqvyMfmXwFLSjazOR72Nq3nwR7qfoMXHuF0zDi+qZfcr+Fib8zHh
3zKyAR8dQ6Y+LTtHNuKjNkt0cWMW2ZSPvdtmG6uksfsbfFgaJsxPiSFb8+Hw
aXFHN2+yHR8fzcNcvVeQXfiYuzMr/KI5ux/CxwAtu2XdJpJ9+Nj/9eG76Vrk
ID42vF6xclVPchQfg7Ie7QtsY/dv+NjtNL405DlZwsfE8arl68vIm/jwPfft
6uJz5Aw+Jgkd8nQy2f0mPt4fdNvdICdn8zFw2ETJjkhyHh+ypBzeLA9yER9h
vIOy+zbs/hQfpl6Xcu1nkcv4SMyL+3BzLLmCD262+YoJ/5Jr+Hj23qIx8Re7
n8bHArWso9ffkJs71+uvyOx4SG7jY2volCc67P5aOx8lX7/YTcth998EcO4z
VWPWNrKqAPMG+ugZJZLVBeAP+ige4kvWEmDf2u7zPziw+3UCeE++4XrOnGwg
QMLaWU/9xpONBHDsvfiSxmCyqQALp5f2z/3L7i8KoLPF/sG0FrK1APGDd6qc
eky2E6CxUK1I8wrZRYDXuqOag3PY/VABznrp7Lm4lewjQEuBedWPeHKQAC5a
2bv1fMhRAkj1vFrN7dn9UwFKijY+WTqHLBFgkiLXabE+eZMAtU0fgkzVyRkC
FKz5bKj5H7vfK8DTXd6iplfkbAHWDWkRH71HzhNATVPF2Pk8uUiAbH9TWXsm
uz8sQNPM1i0yGblMAGWxzLZ/GLlCgJDea6/x1pBrBNj0+vSnRkt2P1mAi5KS
uplG5GYBxrqfkSWy+9VtAmg0nf9Z0J3cLkC5+/upde/Y/W8hJJc9Znx7TFYV
4l+HCSp/LpHVhRhRuOjoj6NkLSGcBVeGNqSz++VCjJou8bgURTYQoqJ1t1jq
TjYS4vCKdyLLxWRTIX4v8/X8aszurwvh/U5l7NZhZGshcgxP3xndk2wnxMU7
di6H3tM8gIsQkeOeVQyqInOFmNRjtknkJbKPEGPcvNLuHCEHCWFiY/NULY0c
JYTR7Y/aCyLY/IIQSfwFTr5ryRIhsi7YpyVZkjd15h2kd1M6iZwhRInPTY5g
CJt3ECJvj+O8gD80H5EtxM2Nn2XWbF4iTwiPVWXKQffJRUIsd+5v+bCAzWN0
np+L3S/z9pHLhKjt/32JrohcIcT3+/O+5PmTa4QwcLY5b+xAVgphcWjLniOz
yc1CrBy3/VAfPXKbEGsy3z9c25fcLsSPRvzvyCc2PyLCi4Ilhc9ryKoiiFOf
BvdSkNVFMN94x2PkMbKWCOcLBm4az+ZTdEXYrSz5Tz+cbCBCjPvrY4NcyUYi
tHrf2PPFgmza6dycZ9cM2byLCP+YtfuI1MnWIgywMFpi+oPmZ+xEWFHeInpe
R3YRYen22hEh18lcEV49qNTsOE72EeHmq6Ko4M3kIBEOzti1sDaSHCWCyscM
wYy1bD5HBNszv0wEC8gSETR9DXxKx5M3iRDcI3PoJ3VyhgjKcar2A3/Q/FCm
CHd+62uOrSNni3C0oTHQ8Bo5r/P8jFnmNjKHXCRC8YW0jyrpbB5JhPSfv0Yr
w8hlIjjZq/c4sYpcIYLP5/XbvUGu6Txf0hvKwfpkpQilHzTfF/QjN4swPetV
XHoDzU+1iaB9X+fyjpPk9s7+/S/3eFIUm78SY+3c48vt5pNVxehITLnaXY2s
Lobj5eH9d9XQ/JaWGCkucfM0DpF1xfgqGBsUHEA2EKNO9j7nrAnZSAxN1W6c
Z93IpmI4jGgVNJbT/BjEWHE00+rRdrK1GPrea9ccdSPbdf79GZVP1hiSXcR4
NrrHnY7PNK/GFUOwnWsVc5HsI0ZLQLFHvYgcJMZBbYuphrbkKDFMT26746xF
5olh9fbMXL+XNC8nEeOVTfcjHsfJm8TooeusMS+UnNH5eu7vDvSYQ84UY+MT
T/cTPcnZYvT++TjQ9B7N6+WJEfChuP74dnKRGCc8/5Z3X8vm+cQYtPXvEuiT
y8Tw7yuM8vhI84EVYszcddPXv5BcI8bb0SFzVieQlWIMDj3U28iS3CyGYb+W
ppb+5DYx7Fqsv8mraD6xXYwKOxMbjX1sfjEZveKz+id5klWTUeLx1rZqAlk9
GT3WvZmizuYftZLBb2mpmHKBrJsM7Ykli2clkQ2Sce7szkuG1mSjZBirzrTm
DCCbJqPGvLLP5Sqav0QyIjf/M9pjL9k6GaYv/j3Tuo5sl4zCGYInHoZkl2Sk
rUwovNJK857cZCyfuG9jj0KyTzJOT/o+ZnIcOSgZeDO8w8KCHJUM1SWjB5ir
knnJeDtiu0zvPs2bSpKxyIaf3raVvCkZ1xaFWxxdSc5IxtClUWULRpIzkzE/
e5DV3Uaab81Oxs++KxrnHCfnJWPT+ZKbOzaSi5Lx3yWnwc+msXnYZLRNyP2h
wuZnyzrP14zr20dcIVckY8KacVo6QnJNMmxlL46pLiIrk/FqXGhgXX9yczJW
G7du3/uwkvqfjBXz66wtd5Lbk+G5wzr/2WoyR4Lpqpd+r9Qlq0rgo2blfL2R
5oXVJajOCX03NIesJUGlvd2bVQFkXQncXvhGJU8hG0jwoOTgLvN3NJ9sJIFJ
m56+dSjZVIIhUeFfDX7SfDMkcKjN92jgk60lyMr4/iisL9lOgm1HVh5Vbqb5
aJfO12/4PEd/KJkrwUhB9X8LM2m+2keC2+sHL8A4cpAE9Rsuxg8+RfPYURLU
HX3U/+Y0Nq8twfcTa1bbl9A8t0SCYUec7l+YR94kQZ/osw/+3qJ58AwJNj/j
3h5lQ86U4MVSC/1Rj2l+PFsC8fAp9n9WkvMkOLHkZ3FxPc2fF0ngHLKufIUX
WSGB/lbtb3dbaH69TIKbDWVHxwaRKySYJOq+fO03mnevkeCY2RKvyBiyUoJP
Awc5Bf+leflmCdKbi3csFZLbJOD3E+7p04fcLsHDswefZqey+XspPkX/79b4
gWRVKSJLR9Wm76D5fXUpBmm6p9Zok7WkWCU87dTrAM3/60oheXImb4ge2UCK
rcp3g/sfo+cHjKQ4mHW529vxZFMpeB/uKh3X0PMIkGIt9/Olo570vIK1FIct
y3bc8KPnGeykOMZ97HM2hJ5/cJEiOGr+1OBoej6CKwVnwevvfxPpeQofKdwm
GRRyxfS8RZAUxwcMDt+WQs9nREkx9e7imXu30PMdPCkONXT0ic6g50MkUiS/
qm+dsL+A+i/FyyqLbwWHzlH/pbgmfj9WK+cs9V+Kf2+MTV9xKp/6L0WF/Iz5
hrNnqP9SmA0ps1pVlEf9l+L6Nb0Q25jT1H8p7MwWLjsiOEn9l6JgSPOiopQT
1H8pbiWUbpVtz6H+S9HzltlKnf3HqP9SxJwKLw8/eoT6L8U/KXo6W08dov5L
0WafkRxVmEX9l8L4AzfJLu4A9V+GHis391kk30P9l6FBy0uvftdO6r8MvsPt
bTWzt1L/ZWjN1hj73i+d+i+Dtte1D3/FydR/GeK2fxjfZJFI/ZdBrX5979kf
Aqn/Mtzt/dW59cxg867+yyBQixhvMjaoy9YyOO3tv3D/18Qu28lwPGySeXhD
cpddZKiJr93Tszy9y1wZjI0vtnU83dplHxlCnpyp2Xt/Z5eDZGguqbRff21P
l6NkGJOTkr286ECXeTJoHfww4GR1VpclnfVn5MabVR7q8iYZdj7/36Un5Ue6
nCHDTC2Zf/TNY13OlOHz5uUGuqU5Xc6WQZa5R3675ESX82RY+VLDKLTwZJeL
ZNB42/uU9pnTXVbIYCqYdf9FVV6Xy2T48Y+8bOKjM12ukKH2iql6REV+l2tk
yBB8CSy+d7bLShncu9ef/HbnXJebZbhTsGu7YVlBl9tkePx7/scVNwq73C7D
G/PkxNCr57vMkUOj3z715CtFXVaVw9vSySf1YnGX1eXgrxu9TFR8octacmRv
GyIKKCzpsq4cDoO/VS04e7HLBnJc9prWq2/epS4bydF7j0pNSe7lLpvK4ZLL
1ViZc4X6L0fbK87cNnsF9V+OdkczP4NKsp0c+bzdoQ62pdT/zve31qw49B6Z
K8dexdz9oiVXqf9yzO5xWii9TQ6SY7pi1/0Eq2vUfzmkoj4vPG+QeXKsk/cb
PHv+deq/HAW+Z6s4peRNcvx6rMMvmHuD+t9Zf2l0nMtFcqYc22r/6r+deZP6
L8f4+z0b158n58lx1efL4Mppt6j/cuRkrhg5Lp+skKPh4b11PpPLqP9yGMZO
mr8tl1whx+q3G/SOG96m/suR8f3A+pyjZKUc4UUjgzbr3aH+y2E31e+Qeya5
TY6XfWd7Dh1RTv3vPD9T+EOKdpE5Kei9LVjHbMhd6n8KXG/FKo9tIaunwOaU
S+kPtXvU/xTsH9VHf6KcrJuClVufhS7ofZ/63/l6eb7qEJCNUuD867i7zl+y
aQquBDXeexHzgPqfghPqJSW872TrFGRc0brdbWYF9T8FuVZOrmcjyC4peOMT
W+5wjsxNQZrawTuvP5F9UhAh1VZbP7mS+p8CW7uAxVX+5KgUlFxynTb1OJmX
Au27TbzEN2RJCj7et3xdPOYh9T8FtYY/hjS4kzNS8Kfn2fIf+8mZKTj4J7L4
v1pydgpyniXvaNF6RP1Pgcck36G3HMlFKdDp+7E9fQtZkYLWAxPeL3hALkvB
tSbR8df9HlP/U9A8K/ddsDW5JgUTfu7xfiskK1Pwa/TB6iWl5OYUKJSunzJ+
k9tSMNPwUlDFzCrqf2c/rVTVPoeTOano7/OU//sMWTUVK/X0pJ8/kNVT8Yoz
pbbCsJr6nwq1juypGV5k3VS4fk5ZZp1FNkjFl1lzGpXPyUapyPwddtZd6wn1
PxXCs46Rd1aQkQrbzWvfa6eTrVMxsy3kgf0dsl0qruU/qwvuVUP9T4X0yPyq
SJC5qRhQezXUM5bsk4pHPaojTQrJQanoWeqZ2dZGjkpFxZfS3PQJT6n/qXiq
ctJ10HqyJBXVU1cEJWSSN6VixHW77HvPyBmpiF2af6Pb4GfU/1ToN36TatuS
s1PxzOmf85pScl5n/uWrBnRcJRelYrq82PHyL7IiFSVN0cu8Z9RS/zvfz+Z1
F75sJFek4t8RZ7keOeSaVHDTx/QqbCArU+EQ1uL/bthz6n8q3jWeXdPDkdyW
iiZZ7r7fqeT2VNzdH//l6U0yJw35Shv9jL9k1TQ8k936bWJaR/1Pg6P5AIvi
ILJWGia03S8ZlkPWTcP40inT3F6SDdJwvPF1mGDoC+p/GiaHjLCWLCebpqHM
JD0qQEpGGv4IIyuNS8nWafBry9CpaSfbpWGBptnENUb11P80jHKefqvUm8xN
Az+p9mKvA2SfzvrSgbUG1eSgNNjv0IvarqKk/qdh/qKi171Gk3lpWBiuut/L
jCxJgwVnmPScC3lT5/qmOemfQ8kZaZiU0G3XyHRyZhoGlFikzz5Ozk7DEL9R
qy1vkPPSUB3Sq8lcSS5KQ2Kv/UMNfpIVaVjx7GX9n8Evqf9pSF47QO+6Ebki
Dcsbc+9FLiHXpOHWfcmdoevJyjSkXCjueZxHbk7DlEP7vQ32kNvSUNqr/sW2
AnJ7Gmr/+jq1PiBz0lHjF3vBpIWsmo6kjs0/Ano2UP/T0TE/+r/NOmStdPRr
XJB3yJSsm47cxOUqh+zJBukYVL2gJd2fbJSOo2X9F/uKyabp6O7eqGGcSUY6
ZjxaNONNcYP5/wG0YzsA
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1.1052264815308643`, 
        1.1253649701025985`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-1.1052264815308643`, 
        1.1253649701025985`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(m\\\\ 1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(m\\\\ 2\\)]\\)\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6985507001710777`*^9, 3.698550717526689*^9}, {
   3.698550765867029*^9, 3.6985507929795437`*^9}, 3.698550838937842*^9, 
   3.6985512922299433`*^9, {3.698552516714411*^9, 3.6985525368255033`*^9}, 
   3.698560747181594*^9, 3.6985607801022263`*^9, {3.7098119023147297`*^9, 
   3.709811915565405*^9}, 3.709811973257586*^9, 3.709812541645361*^9, 
   3.709812770736249*^9, 3.7098128875311203`*^9, 3.7098130760944357`*^9, 
   3.7098146368557262`*^9, 3.7098150703104362`*^9, 3.709816729973591*^9, 
   3.70981692800069*^9, 3.7098719336923237`*^9, 3.709873610531529*^9, 
   3.709874872419693*^9, 3.709876306444251*^9, 3.71016105417092*^9, 
   3.710416424825851*^9, 3.710417522403865*^9, 3.714323151816444*^9, 
   3.714377988830619*^9, 3.7156270967013807`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_input_manipulator_torque.pdf\>\""}], 
    ",", "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.709811943394271*^9, 3.709811981474676*^9}, 
   3.7101607845219793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["UAV torque + manipulator torque", "Chapter",
 CellChangeTimes->{{3.710060903288764*^9, 3.710060905904479*^9}, {
  3.714322821754334*^9, 3.714322822394299*^9}, {3.7156150257254*^9, 
  3.715615026061102*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "4", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "5", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "6", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(3\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(m\\\ 1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(m\\\ 2\)]\)\>\""}], "}"}], 
        ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<torque(N m)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550656905706*^9, 3.6985508377666597`*^9}, {3.6985512963371563`*^9, 
   3.698551296631171*^9}, {3.709811874450719*^9, 3.709811914998761*^9}, 
   3.7102271725362387`*^9, {3.7143227492695227`*^9, 3.714322788765127*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw923k8VN//B/BJhTZpkzaGNlq1a5FXi6VdJCQ12bKUxr4zGGZhpBQq9RlJ
KSkppVKmkqhoSFJatGulXfvP7+F9vp9/Po9nM2eO9z33nvs+97yvnvMWazcV
DofT3JnD+f//d/zXanquay8bO/WyUvoHDA16MbS/8xWyOlbrnf6VV3aZrIlf
hqYn/05k7o+8TYF93mVfImtj0nOfrzZc5qEo7qpiq5WjIHPR1W7yvH6TmfVh
ckjttm1yKXkEIufumxNecZE8CoEaGw7Y9WU2gGlvu2lHvS+Qx6DXmxm8WXUl
5HE4bjb4/pUlzBPw5PrQ3d1rz5ONkLhxer3SnXkSFr2w+9fQjXkyDBepXnhx
7hx5ChYUbG8+G8o8FdbxfcTa5szTcJJjVFmmyzwdF752/h2jyjwDMX8+yPr9
PEs2RtHwvC4m//NMyO13/Lj0v+/Pwr9BpgPc//d7s5Gh5tXj/QLmOSgKsE0f
HMBsgq/RkpDC48xz0b1Okx/yjdkU/T6MnWtkyeID9uZGyfceIAsAM+UZK2EP
drzmYfz5gs65EWTBPHyb2snz5nf2+XwM3qMytiiCjr9gPvYVz24Z2YONzwIY
KMfbPd1PFixAgXVYp2ML2PguxKZfdolL35MFC1FaPKpSsYKdD2Z4uq2fo3o+
WWCGye+Sq9ZpsPPJHNWH+nzL8ScLzBE5O+dY6QP2uQVyA7h3ZYvo/BRYwPrT
xtWfzrLz1RI/ivOH3BpP57fAEi178nRVc9j5vggeuXVuobp0PQgWYd78sD/d
97LrYzG8pj1V2TvsKn2+GPXZS+R9ssicJZjh+URjyehy+nwJNi3flT62gMxZ
CsFEzo6ds6/R50vh2OOLj3clmbMMJ24sy9nqUEGfL0MeP7L8+VsyZznSRg0N
XCaopM+XY/H+kI1Hta7T5ytwo1Xf4/kxsmAF1A5Frm6wvEGfW8FQ03G093My
rPBjW/6L6Jib9H0r3P9rffKHblWHFVZQvFG5fr6UzFmJsbYeEYd51dR+Jey7
b5lxUOUWtV+J512r4nbmkBUrEfT2VVz+CCW1t8bS8nML3weRYY0TKpvawivJ
AmuMXBGSs2RoDbW3xuSMte7Lt5A5NuiibucddJkMGxzMd/hdNKCW2tugacLE
8H8eZIUNpvWvcTMrIXNWwcr5g31Y79vUfhU8rOR9tzmTBauQqbY4MKKIrFiF
0uD/pBPV66i9LU4FVyfsXUOGLVbIy26cPUoW2KI2M/Fd8F+ywhbOmkUFN1bc
ofarMfdE9cDDcjJWw+x+/douH8mC1Vi98/CPGtRT+9XYrL7uiGoKmWOHPzOS
+OmPyLCDBP5poePuUns7/AxtO7E/lKxo/75HyCH1cjLHHr8/Oh/N6tNA7e2R
+jpzketassAeWx5nOVkcJCvsMb56g878FjLHAfON7w5eOuMetXfAXx2bOU5R
ZIEDXupHXttcRlY4ILKrmlNQt/vUfg209vb7uWUZGWugxrVus0khC9ZgoO+t
XkNryYo1+F4RvfRy30Zq74ib5+L05lmT4Yg/Q8atSk0hCxxxvlrR5VQVWeEI
UZVG3r5uD6j9WjRzL/dfsZCMtdiwJ8XlUiRZsBY91szq8amIrFiLe33dbj18
x9o7Yeh0u0sx+g+pvRP076SbNK4mC5ygPjTk9SsJWeGE4k6JBTnnyZx1aN3Z
+3Lfd6z9OgQMsk4eP+QRtV8H1TK1si+WZMU6pN/OXbYxkMxZj4IpN5cL5WSs
x7MSkd6S66z9emxR3LU5/4m1X49B5po5dYMeU3se7muv6ZxuSuby4BloIlFx
JYOHHe9mhw8UkXk81JaHmdXnkgU8mP2NCjWtJMt50D/864ZNM1nBw4OLDt26
d27qcBMP275Mz0IfMmcDLnUWTK/WIXM3QKXu1PqTY8nYgAeTOitaZ5B5G3DY
3lNVtIAs2IDVLk/fBS0nyzegUJA545I9WbEBy0qNT7k7s/7bf292/5ke3qx/
Z1wN3n2g3J/174z6NPmD2HDWvzP+mVZW7Y1l/Tvja0Orl7aE9e+Mobezjn5O
Zv07w/dCSorRDta/M2Ju6Q5SZrD+neEhf730dibr3wUpF6ynz5az/l0QeUfv
mXo2698FB8bquJrksP5dsL3nqZv3DrL+XTD8577Jjw+x/l1wevGu/OW5rH8X
GH/TtDNkbnLBypVPFvHZ9zmuqAjss38E+z2uK1oHpUdYHGD9u2LAf8O+38ti
/bsib0jNxIf7WP+uCB073sx6D+u//fesb9nOSmf9u+LMpaWCtO2sf1dkWfR4
tlHG+nfDjcXDMo+LWP9ueJ/OrfSJYf27YcNjXdHBMNa/G1afD/pkx8ZL4IYy
reJRQjaecjf8qU2bO86F9e+GRxKlzco1rH83HF46OPqLFevfvf2K7d2gZcH6
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
s+DEusdNpf8HnVssEQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92nlcTN//B/AhFD7IXoQQCqWET9ZeEhUhRUVh2lc17dM+NS3TTDMtlrJE
ErKXrewTIiLZUpaKLKkQ8ZFEv36P3uf7+efzeLqdOfd9X3PmnnvOHe/oa+nS
k8PhNChwOP///+7/WgynH2rc4tJZeI3+AeeMoTAhjVkJ7SLloyUzmZXxPeGU
2Yv68+Rh6DnauujrAWYV/Kz9s223P7MaBkW0q/uuZlZHo3uuap95zBNgfGND
+h89Zg1oCoc/+DGHeTJC28+PSzdl1kSWr9FlvivzVJx+PzzHMpV5OirEi/zL
Sph1IIz8ZZHWh52/Lq4p+Nxaa8msh6CWI9mlecwzcffiu8r9fYvI+lhZMsQn
I5B5FgY1n9nk+JF5Nl66/A2/4naBPAduaw3tXb4w/4tBbQIjFcFFsgE0bTz6
7lC9RJ6LXIMVg7IvMc+DYqrDxF8ul8nzEVs7PdBF5Qp5Aax3f4w6+oh5IaIX
jeCkbLtKXoSj/M63zzdeIxtip63Gvmkj5WQgJfyM6odYsgC4oR8b3vsbO74Y
hxTH13g7F9Pxxeic4lap8JzMMUJjyxvfAsvrdNwIOhVHNTeWkzlL8Op80qfP
5jfo+BKomseOWF1O5hijcFquk6vlTTpujOgUnfYx1WTOUjhX/3bY7FhCx5di
qVRPOOwzmbMM4xx1c6dE3KLjyzBZW+4m/Oc2HTfBF2FA2ZB9ZIEJvg40nFys
X0rHTVGRjSlhd8kCU1QuOf1Ey+kOHTeDUNxbcvkPWWAGFenEjrG77tLx5Zio
Wq6zyKCMji+H/7mxUYpVZM4KTPxXfad76D06vgK/5dGxq9Xu03FzBI23TD0q
JwvMkb630cvdtZyOr8T59fLB/AEP6PhKvEnd/LD0HJmzCsYDT08+OKOCjq/C
BssrC/+LI3NWI2Gw/qMHz9nx1fiUrzBzqt5DOm4BnQmnn/xJJMMC4FrbLakl
CyzgfjsrtXXOo27LLeC8vtRdMYXMWYPJA3N68D+QsQYTHUJyFuExtV+DJXa9
Lq/dSZavQY7nxoYz38gcS7zweNi4zvwJtbfE5RU3T806RBZY4kFLjPlyzlNq
b4lBxUqdqRvIHCtYnCvTVjhHhhWU0rzcdg+qpPZWeDrOzXGtJ1luhfGbrndo
lpA5a9FHlDt/mPozar8WF9U+LR8cThashdnPaxGjK8nytRDnK5np6FVR+3UY
LvthvjSZjHW4Z+W53P4DWbAOXnZeU3yNqqn9OgidYj6FZpE51hi1bcQdfhsZ
1rDHfSV3q+fU3hqr/6tQMz5Jlltje+CEHX37vqD2NqgcXzvpnBMZNrh8KG7P
kqtkgQ06zPQ+Fqi8pPY2GJH/WuWPP5lji3F7jq+bcJ8MW7xd8efd2CmvqL0t
vHrdn9YiIMttUbTx5YGtz8mc9Rj9uPltn1k11H49Jqj83msiJQvW41Ju2C6r
92T5evR8l16oaVhL7Tdgn/emTzczyNiAXOF0s8ktZMEGHDz+JniSRh2134DP
MtskFQsyxw7iMcUxTeFk2KHSOy0l6zBZYAf35vQm7cesvR1+HJE+2/2XtbeH
l+v3rPdar6m9PbYJ09MGrCML7JFbPn+AsoAst0ehZlTAp6Nkzkac779O5+BT
1n4jqhtqTs7hvKH2G6FhN2zL/qlk+Uas1oz58HYtmbMJlxQ7czjRZGzCFk3/
qd/zWPtN6OmdOPDaI9Z+E4pXBb7jdrD2m3HDv2h59aR6ar8ZxiV1NVNWkwWb
sW62uYk5nyzfjH3fvmov20/mcCGerrV4+F2yOheDzPz1L3xjn8fFgOTFl/RG
v+02lwt1zbL0qCVkARczT1eE7PMiZ3Nx4avvtG1byXIu5iu1+tlfItdxsbdx
/5C2N2SOA6qmbH/m2u8d9e8Ay7YkaZ4eGQ7wTC9UuGJL5jpgkPxg/9xossAB
HQW9QjceImc74PyAhPEf75HlDuinX/hyWSu5rqv9+ZfCYNX31L8j1vR/8DXE
kKzuiHrHqp4rXMhwxMj8rdu+iMlcR1x9fi/eJZ8scMQgFcfzx5+Ssx0xzG2y
Ykk7We4Iuxkl60+O+0D9OyL7z6FUd2Myxwkr7Z/JWt3J6k5Yf7Pp39VSMpzw
NqfJN7yAzHXCcL+5o/lPyQInSKojxi79Rc52gmWDdNMbtQbq3wlXFzvIV4Nc
54S1dj80pU5kjjNEZxC5K4Gs7ozVCuNzQo6Q4Yx3LisiNO6Ruc74xVvYkv2Z
LHCG37wZb5qVP1L/zpi3tM8cJX2y3BmWa8wefFtLrnPG2b7D044HkzkuWCEZ
vGl2JlndBXnX3FWkF8hwgXrClf1nnpO5Lth3aOKLvN9kgQv4IpWD3mqN1L8L
vA9H1P5dQJa7IP261GPzRnKdCwyuvR4viyRzXHF8ruN7cRZZ3RVXr5luW3eF
DFecPjla6fNLMtcVLqeOjVnbQRa4wqJscH7i6Cbq3xUGw0/uFM0jy11RVzv5
rPV6cp0rUiLdq76GkDlu0BUerFm/g6zuhvtJNntlZ8lwg4oHPqc8InPdMPe9
V+7GFrLADYsf6u34OaCZ+nfDh2SDzI3TyHI3dLaHRKWYkuvcEHVngZrUhcxx
h/6o6cbWsWR1d4yNNSlt3EuGO/zWfw1dfonMdYfFhq9aQc/IAndsTwzN82xl
/btDz3ZaydRBn6h/d/SaOGb1uankOndwb9UO67eMzPGAfmLcW00HsroHHk48
IBkcQYYH4kdwn93YQeZ64I1CwDbDArLAA2sstFPiysjZHhA+F2xNf8f690D5
0z5bPDpZ/x7wLu7zQUn1M/XviUGhkfd4M8nqnuDbaTRkryDDE0uF/F47nclc
T3gOut5kG0kWeMIiZLR73XZytifmNvCXzDhJlnvCN++UydJb5DpPHIiMXDSh
hvXvhRlDU7+W/GD9e+H9xuSpugO+UP9e4LUPP8PVIHO9sEtYudZmPlngBfOa
uOqhluRsL8zlN/fb4U6We4Eb8v30qyhynReOPTu0u3EbmeONxMB/Uy4fJat7
Q9DRz9ZKzvr3xoZ7V+Qnn7L+vaGbP3VbeSPr3xtjRH5ZpztZ/94I/PDXSrtf
C/XvjRDBLUOnYeQ6b+TyRrWFjSVztuDL/VlOgZpk9S3Y/DrGbfVMMrZANuRA
U/8FZO4WCK75VR5ZShZswfnOHoO0VpOzu/7e8mBEki3rfwuy//3Up8yB9b8F
CwpObP/kyfr3wa9TncpfA1j/PoDbEoenEax/HxiKJ/juimf9+0DFL30iZKx/
H2ybVOl2awfr3wdhNoJJ2vtY/z5YaRC0LPAw698H5xc2n919ivXvi9llfnYH
Cln/vlh7vUFDco3174v/fkk6LG+z/n3xe/eX++3lrH9f1Hn0jI+tZP37YnrD
wIGNr1j/vijiXV6n94717wtMVzazbWb986DauuXpplayMg/7hu9sMG5n58PD
/H/O8fr1+NptXR4+DFpmf0qRDB5Mduvt0h9ItuDB/8lV1YxhZC4P7nU77laP
IvN4OKBesue3OlnAw7MNhYKOyeRUHn6VLXR7OZ2czQNnimTx7pnkfB4+Rc/q
MdeALOfhyUS9zHMLyRU8NG963qa8hFzHw3ndpuErTMktXe2/RL9xWknm+GFy
zXBLO0uysh9Kjott9WzI6n5Y1Tq68Z0dq98PHZmuv/lcVr8f7PVcYxqdWf1+
qFsZ6DfPg9XvhyM3TYrdt7D6/XDzU6trkB+r3w/Xn32w5Qax+rv6D/wk1Qpl
9fvhklzzT0UEq98Pd1+P2GstYPX7YbGx1P2ikNXvh7TTRWs7Elj9fhB6qtmp
iVn9XeejmxY4Ssrq98c9R+Nd/6Ww+v2R0q+wJD+d1e+P5pbLLabbWf3+yD4T
PvxaBqvfHzavPHSG7mL1+yO0x6o5S/ew+v2x5eVCzXV7Wf3+mBia1WmUzer3
xxH7sUUDc1j9/kgqurqy6ACr3x95uaWXDQ+y+v3h6vCwx8FDrH5/hOcUqTYc
ZvX7w7j+cI++R1j9/phSMrhQ8Sir3x/L+QX/vmXmBMBhhjhm7zFWfwCU971P
n3Oc1R+AcyJbz+PMugGQrSnqwznB6g/ApkMabnrMFgG4MK2nBMzcAHyf99tP
m5kXAOvjnaPb2OcJAiA6aZyUzZwagOyjxhcnM2cHwHjOtVNidn75AVAdcsHz
Hjt/eQAqZ0c0N7F6KwIw5GPGnI95rP4AtDbULb/Jrk9LAGx3+U2LZNePE4hI
06PPh7LrqxyIdF89OxG7/uqBGD70+6nn+1n9gXAcN/llP5YfArG70qheheVr
EYgQkwF3ev0v/0D8LE9NK9/J6g/E5Zzxi4PZ90cQiNkuG1/+3sbqD8Tf4mnu
m9n3LzsQI4Zc+5jNvp/5gbiuuN1VnszqD8Q3bsjbK0ms/kD0zI7w2Pm/738g
Pt5R6rBk46MlELpa5TmN0az+IIQOL3fmsvGlHIRZV9ebneWz+oMgaxti+z6Q
1R+EnYM+Zf7HY/UHoWK79rB33qz+ILT+u+VRgTurPwjHUjJf2rPfB14QNv7X
Mv/9ZlZ/EJKsB7SvZL8vqUG49vu5+jZrVn8Q5nP3Xixaw+oPwoGfrQ8vmbP6
g7Dpvwq/LBNWfxDKh8Ud3GjE6g/Ct5Xn+R0LWP1BeJrp9TP0X1Z/MMR7FHQq
9Vj9wZBsnKc1mP3+qgfj11vN/6ay32fdYCyvW5ozkf1+IxgFc13n/1Zl9QfD
Ke/Kg4KhrP5gnDGo3WIygNUfjLllVzQu92H1B2Oc5LiCMofVH4yvGzaPWvKL
3c+C8fLfJv66b+T8YHxMvzXDpInd34KhmX1ntcpbckUwuLt1GktfsvtdMOx6
piuvf0puCYbpzW9PSu+z+18I7F1Pm6ncYve/EOSM2R5jcpXd/0Jg+ao4xfo8
WTcEWzZcT1x6kt2fQzCklzBy2CGyRQhCWyzjb2Sx+3UInl+tP2O5ncwLgb6P
2djryez+HYInmu3Vg+PIqSG43au8Y3E4qz8EvAt/91j6s/pD0Gg25eESD1Z/
CH7mLskfzmX1h6B2bv6aUmtWfwimCrXu261k9YcgLaFsXsUSVj8fA1cMPjNp
HqufjwLjJ6vsdVn9fBw5v2JK4GRWPx+5/f+x3qLG6ufjgkafHyZDWP18mO9L
GNtLidXf5Ymez5f8pvkhjw+TqMltRu/Z/JEP48S2e70fklP5KNxikpp8ic0n
+dBJ0Qp7dpCc33V8r+ON9ylsfsuH0hWHgxdDyRV8fI8x3GDlxOa7fNS0XVIr
MCe3dP19ygLNJ7PZ/DcUqT/uFF0eS1YOxaSfA/p7KbL5cCiaF6+xr/1C83Pd
UCRPDm1UrWLPB6GwN+/9fZScbBGKOrsBRW8Os+eFUPjvWxTsl0LmhcJyd7XP
7WD2/BAK9axTb95uJKeGImmJ+tC7xux5IhSxf0cYhUwj54eiVaR0unkwe74I
xRW7loNT2+j5piIUWqNXOejVsOedUKh1TtDscZPcEgqNOV8W7TrCnr/CkGJ8
qrFDRlYOg/Xmap5WIHseC8OdGxtGqq8n64ZhwT/bNV4vZM9nYdgUa1frPYFs
EYZmnxbZjT7seS0Mnu49w9810vMhLwzLso80PSpnz49hGDzDRSv5NDk1DOZc
lcjBO9jzZBj8/irqOoWS88Nwee8zSYw9e74Nw/jPCc+9DckVYaj/6+M6aQJ7
3g3DtQzDsGO9yC1h2BrXwe18z56/wzHjY7vL+Dtk5XCs31HzZPAx9jweDheH
jF8VyWTdcLyJ2qS+2Yc9n4ejtfbM9suryRbhKNlqd+ijLnteD8eI6Xb73g8m
88JhPPnn/TPf2PpBON7b5EeveUxODccq7uKe8jNsPSMcGWP3HOjcSs4Ph/P0
DwXKgWx9Ixy5G8PDW63IFeEYuuz1qjx9tt4Rjsgb5WEzhpJbwjFNprEq6Rtb
f4nAg/KmkecfkpUjkHnRasr5fLYeEwHe7FNlSSlk3QgMDPNfq+fD1mciMOGO
7uAT5mSLCOSM3bXmz1S2XhOB6k98lwl9ybwIcN+e2qP2ga0fReDTmX9Nmm+S
UyOwsV7tXFoOOTsC0kORcwYIyPkRULiaOHrzRra+FYH1G4PPJs4jV0QgQTV1
TeJItt7VdT41Gks2faf1sZYIfGiWVP/zkK2/RUK7ZrzL1hNk5Uj0P71szrck
th4XCZV6uywtV7JuJGpjrzfONWLrc5HYvanaZ+JYskUkRNN+h77/xdYLI7Hm
UoS9kK0P8iLxyuCYa/v/1g8jUeJ9t2FFMjk1Euv6DdXnu7H1xEg861WwPdqI
nB+JtOZiruMYtr4Yiddrrd6qt9H6ZkUkTi124F16xNY7I6G098namSfILV3n
ezHmdXwimROFzCeTXc87kJWjMPOg58yb89l6bBSm/Hq+/dRwsm4U6i2aavlf
aP0WUegUtW5Wv0O2iMJ0iY7LoRy2XhwFP8ULi/pHkHlRuDs7df7qdWz9OArm
2alH/XXIqVFI/hH4PEiRrSdHIbT+ier6OlqPzo+CqH1iodoFtp4dBezM5xSn
kSuioFqXY7zMk1wXheMnflccNyK3RMHiwNbW76PY+nc0ruqNah/bSuvpytEw
PTls5rQysno0OnxfNageIOtGY9GPHK+mMLZeHw3BYDfFbEuyRTTUJv5VMmDr
/dxoLFgz8MqZHmReND49HMgbWs32F6IRYmDiY5NPTo2GWVm5giCRnB2N9W8k
EdJN5PxojF6pryGYzfYjonFKbrLM9h9yRZdXquqMqKf9jbpo/Hh1c/LFC+SW
aKy6qB9unMr2PwRIHTk6+JwrWUmAg8d+OwxYSFYWwHn5+CTzoWQVAUYMXer1
/hHtz6gLEFItd1SIJmsKcEvvn+SWqWRdAfzGDA47WUn7PwYCbH9ufm1hLNsv
EiAw+MGnvdpkUwGEvvMzHlXR/pKFAPEuJebVQrKtAOee6e87o0PmCtDxtWas
YzXtX7l3fZ5bvt07IZknwF67ie8W6pD5AhTbGi/3rmL7YwLcWVug6hdLFgkw
/sbO1+bTyald7c9encGppP23TAH0egWkSaLJ2QI4pu3e+kWTnCdAeOKp69Mf
0X5evgBNBUVHl4STiwRwe2X1bJYG2w8UwHdpwWPOfdovLBWg96DtU/OCyBUC
fC+3cZ02llwlwNAxH5Qlt2g/sq7L+rfO3PYhNwiQmTGw6vUIcosAb57w+jy/
SvudbV3nP3/27XxXtv8Zg4MnF+S4DiQrxWCdoMe4DrafqhyD25aZN/02klVi
oNy3QLW0F1k9Bp3yjNzOY7RfqxkD1arZTSpWZN0YyNuHBAxrp/1egxicWWhd
/C2bjBhMMrq94awJ2TQGdk4Pbqz/TPvJFjGY+jlMUL+NbBuDIMewYZbzydwY
pF+ZqHDoNe1Xu8dgT3nAg1q2n82LwbStgzo6tcn8GOzPWtpf8QnbD4/BY+Gg
6B+hZFEMAqyHVpeNI6fGQHPx8tnDJbTfntl1vWpTk5wraX8+OwZfbzvlJ4wn
58WgXpp2NMKb9vPzu47brOGbFNL+f1EM5mgvU23oQZbHoNkiNnmzOb0vUBoD
nRPiipM76P2Cihh4Lt9QX1lH7x9UxaDHU5frVVPJdTGYPGOf57lAen+hIQZ/
BoVWbblK7zu0dNV3olFRQYncFoOYoIDvQWvofQlOLIrLxu68vYvep1CKRerz
xJa2enr/QjkWHu6vvvfTJqvEYuTFd/v+BtH7G+qxeBXZs+nJVXrfQzMWq+Sz
HsgUybqxUGxUX6ptQe+LGMQiv2TI0oJMer8EsfBVU5D9e53eTzGNxaB+mvEv
LOn9FYtYVIwx22RRT++/2MZicIFYMTOA3o/hxsKlR5LPWQV6n8Y9FpvTuYLD
W+l9HF4sruw8rxUwkd7n4Xf9fXCxteqZc5R/LAz11rTuNjpL+cfidu+qxo6H
pyn/WPxo9ddc5FBA+cfCJP+t9o26U5R/LOYPLVn86O9xyj8WPn80HU6oHaX8
uz6/0ZxrO+8w5R+LmgWqQ5/Z5FL+Xee7V3+ldtB+yj8W/8rVb17RyKL8Y/Gw
WHF57aYMyj8WZu8PP7qVmUb5x8K0z6S+bbmJlH8sDkp6jxqly6f8u+p5wK2J
ttOj/GNxr8k0d2TvYMPu/IV4/mbBiNGpCd1WEkJ84PvC1wPTuq0shNEtJdsL
T3d0W0UIzReVOrI9e7qtLsR1a27/43r7u60pRM3ToALF4bnd1hWikpcy07rt
ULcNhBiVUnF+64sj3YYQOlkSl8tXj3fbVIjHZnou9/af6raFENua933abFTQ
bVsh1E1Vg++cOd1trhCG+4peqU862213Iaq+7JvtvONct3lC3J1hI0tTLOw2
X4gpC2/+PMQv6rZAiN51E2JyPl7otqjrerzsMIjdcKnbqUJMVZ2gbVx2uduZ
Qpx+nO35fv7VbmcLUfr5yh/X49e6nScEN++/NgeZvNv5XZ8//V1e5LLibhcJ
UT5TtDX+L1kuxOprZlf45693u1QIhVi1qdY+N7pdIcS+xfxXapNvdrtKiP2r
rZ+XvSLXCeHUV2ei4/aSbjcIke769UKN+a1ut3Tlua1vNnrd7nabEFbZVpUJ
l8icOHhrj9mY719K+cdh6YLxsy5r3aH843Dmb9yGI3VklTjsvvSkPDjjLuUf
B5vrnJSJq8oo/zjM3rIh82Sve5R/HA7OSvsw4hLZIA54dIpv53ef8o/D7UBV
k/Ap5ZR/HP72SlwZ9IpsEQdueK8E060PKP84TNb4+T1Uo4Lyj4On60+D+dFk
9zi4tf4Rf6gm8+Iww+Soa9Ssh5R/HDyWGJp0ysiCOHxVzjns8ZEsioNZ//U9
ryx5RPnH4dY58cO2LHJmHAwvdsjU2sjZcdD9NuTsFMvHlH8c7oaWX1A9Ts7v
+vx791S+9X5C+cdhxJdlZvmbyfI4aGUp37C6QC6Nw1hxxp8XQ55S/nEwPvTG
19SbXNWVl19aamYJuS4Oj21ePC0bW0n5x6FMNeXc6xBySxzGGA45WF1BbotD
/+1c1TNazyj/eNwq7J+4JZasFI+Fh+c5Kr0gK8eD63ZkrFC/ivKPx6tjeTNe
Scjq8biRMkZpxFuyZjyG2saM0l5QTfnH498lr6vGbyMbxGOCU83Z1iYy4rEo
7sS4nCXPKf94FI8bKZ6+m2wRD5MNIc7p38i28UgceHXsY7MXlH88er710fyc
TXaPxzj//S1vfpJ58TD07fE+f9VLyj8eVs3lwTYHyYKu/vbUKFf+JovikT51
1/jplq8o/3goZ3BGrM8jZ8bj9eFDG+z/krPjIeMW2s1eW0P5x+O26Htc/RFy
ftfnLSpc7NpJLopH+/aWjstrayn/eMwwnjr+wxFyaTxsbBNV3v4lV8RjlMDx
ULVWHeUfj6vHs4ZOXUuui8c0TV8lpyhyQzyeGI+bG5dHbomHm3bJeukjcls8
0lxNxkZ1kDkJ4NrYz7Oe/JryT8DtZ2KH4RZk5QTwSqaaXAolqySgZq/LXpMD
ZPWuv9f4d9TFe2TNBJzt4bNlyH9k3QS0hhxfbjHuDeWfgKThHs4BpmQkYK/P
F+9wP7JpAj694o5w30W2SID3inND5t4g2yZA7deloZ+byNwE1K9TK0sYVk/5
J6C40rqx50IyLwHHnpZMcHQh8xNQGbx3Uq6ULEjA061fD5SeI4sScPH48VUP
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
J7dPZucrSIZtSXT8JVaPqKve5kLP26ze1GQ47IdyPrsemcl4tHpTWBC7XtnJ
mG14/cTI/uS8ZJQ7iU/tYNc7Pxl3tRbHf2N5FCVj/sJXs6b1IcuTIV1VfBO9
yKXJGPD40nz9nuSKZMy63md/Tw7Lv+v6rDbpOMm+L3XJUNsnXWfwm43/rs8P
X3tuL/u+tSTDghOj8YZ9H9uSUW3meLxnKxv/UnBHFVhzWtj4l+JVdIr2C/Z9
V5biv0DR/K0f2fiXojoqRaL5no1/KaxMOFq737DxL4XmrL3jmth405XCvX1r
uMoLNv6lUJoRYDbxGRv/UpQ81t/R/zEb/1I01en7Pixn47/LZXPeBN5l418K
eT+XPz/Y7wVXijdbVzxYW8zGvxRBdi9c0y6z8S/F53vuj48VsvEvxTCjYxq5
p9n4lyI0+LJn2Ak2/qWY1zbyvE4eG/9SHN2+a2RxDhv/UvQujcnWy2LjX4oh
o70cBRls/Euhl27leyKNjX8pxvbLqC6SsPEvhUHmlzM58Wz8S/HkfeBgr2g2
/ruur2x37yGhbPxLIfOZlZvhz37/paj749Wjw4vl3/X3++7oGbqw/KU49FVn
ucMmlr8Uj0c82+xow/KXYpGCtcjIguUvg/P1jOoeZix/GVZervXIXszyl6H9
5+3VY+ex/GU4YIec8Jksfxm8G6X8oqksfxn6c5Y3PpnA8pfhW5LDoIejWP4y
SBYN45wYwvKXYfyj1ifu/Vj+MtzUqj/UqyfLXwaF5OEpgl/s/i/D6wcDDr9s
IXNlSEjKUlJtILvLYDz77f3ZtWSeDOncVYP1K8l8GdY/3PZJ+T5ZIIPlsUuR
D26QRTJUbx38yucim//J8PGxzpQv+Wz+J4OY/z3E4jCb/8lwwk/SlJ7F5n9d
53PKae/5rWz+J8OcRfonLiWx+Z8MXO6PWTnRbP4nw6i8j5aeQWz+J0PmwK0a
w7zY/E+GjH6Ft/dx2fxPhriD9hsGWLP5nww7Usra7Vew+Z8MQTMlt2Vg8z8Z
rG441ObMZvM/GZysrBx2TmXzvxRU12Z7+49j878UnOXeVtcZxuZ/KairjMq6
p8TmfylwOO3fe087zZfVUzDVyPi1cz1ZMwWLp88d9L2MrJsC09MJFWZnyQYp
SMsqd3Xdw+b/KRBYjhm2PO6L4f8BMUm93Q==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
pPmyECwv2GND82nGHf/uaj2Yb/8PWIovcQ==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92Hk8lN37B/DRqvSUNtGKFK20SRufpGhRtBIy9jXGvjODYYwxtFJappUW
RQtSaUSlIlqUSlKpVCqtqOjn9+o63+ef5/Xudua6r/tzL+ccDUff1S7dOBxO
U3cO5////++/FqNB/ZcXOxRcvUL/AOeeXL0h45gV4d25IPDD7hKyMjIwYkCl
KvMQ3Oor9t+3T05WxbwxSR0mk5lHQtc+7tfyuCtkdZzq3rbR/HIxWRN7j2X5
WfVi1sJzsaff7E2XyeNxmrfO81zZJbIOvo5VXLprDvNE/LeruOb0pYvkyTgY
PPNsiTnzVHzs42mX0VxE1kP8KGudjgzmaVgVkmV4YTXzdMT9dZLtUGOeAdnF
Jxo2Hy+QZ+K/l2LPe5XMs1BhsfR7aRGzPnrkZPRtO8s8G7vtjG7pX2A2QEaI
pobZLeY5MErzuvPtDfNcNBt3OioMYPXnoVx5obGBMfN8rBg5/5A9n3kBbDUG
bDW8yWyIFd+Kv2SOZP0bYfBF62jDcGZghR6vqvkFmQ+cGfJi4+Y17HouBHfj
t5CEO2T+QojSihw7V7M8jFESJjfKbCDzjTFU+dOYsSEsv0UYlJvTw1aF8uYv
Qut5o0alYpa/CWQYteGPPt0ffBPoLx+m830ru18W41bRDLvqr+z4Yiyv434N
WM/utyW4KbnxruQymb8E4t1YuVeH3a+m+DHg1qx3O8l8U7wd214qUiyl42aY
cd1lsn0UmW+GhJ7/nV/1gx1fijFPswoX8Mro+FJMW/Q9u98nMmcZHjR9Upb5
XKPjy3B66J+dT7+QOcuxp9vfzoMh1+n4cqio2U9+8pfMWQHfCb/Huohv0PEV
0FVW6q8zrJyOmyP2Qsvs3kfJfHN0NrYPfat/k46vREvYkMUnb5L5KzH+SIhk
3qZbdHwVzlmZPA/7TuavgvEo9U0rJLfpuAV2+1RaZYyr+GdYoEH12qpFcjLf
AsfmPfgx3bbyn+UWcDpzdZp5O5ljibacnuqh6XdovCUSjWOH7NavovGW2JXq
tGfXQ7LcEiF/ustPzaum8atRbhHv6CohYzU0OLpWbs/I/NXw6LB0PjL1Lo1f
DX6RkfcQPpmzBiOst4Vm3yVjDcyOJuSvG3uPxq/B/GbrMOUgsnwNOswr51Ve
J3PWQrn7iQN81fs0fi3svR3CxniS+Wsxc++Jy/sukuVrcTRjSfq3fg9o/Do8
nJS3afAmMtZh8p9ve7+dIvPXoaeK7yDxX7J8HSx6Hz9VsaqGxq/Hno1j9+Tt
J2M9bo0YuUD3M5m/HootNlPnGz6k8euhPfe9WZWEzNmA2OLCQ8+fkLEBVibz
dzjrPKLxG2BU/vncuiCyfAPmthbXHS8hc6yg82TtRNv/amm8FYrvLec4WpH5
Vui/en7v8wfJcisM/JM1dWUzmWONP7iSM37WYxpvDdWqv90Nosh8a8zZc7w9
oowstwYnS1nW3PcJjd+I45/OW8ZbkLERavxlZxbsIPM3wuRe2KnBj8nyjVDp
uSVCYeRTGm+Dt01/dnbbRIYNtiocuDZoP5lvg9ZOxcFTn5PlNvjhGFxtMbqO
xtvi16KKbSG2ZNii91Ib/f27yHxb+IxNu19WQ5bbou5Nwo3Xys9ovB0k+cKc
v8vIsMOnFQ6blOPJfDv8elv5aeglstwOLuP35/T/xsZvwmyrdo12nXoavwnt
F4P7PLAj8zdhTv9F6/dtIcs3weqS7pQNZWSOPSZ8vfqq4wcbb4/WPYs6t4x/
TuPtYcMtmzJ4PVluj6VWuisF8WQOF0cc1jrX5ZHVuV3X/3emVj0ZXcc9OzVz
ejT8M5eLl5d0PxSrkflcrJ6BL6ZTyTIuNAwPpJoZk+VczFt6WLdkHbmBizO6
e83OuJM5Djjv19d+ZARZ3QFlwaXdOSlkOEBddcp9u32svgPKDwYG6p9m9R0g
DbqbIb7C6jtg1drKXxurWH0HLOdvs8uuZ/Ud8ClziSTgI6vviDnWdtaXf7P6
jnj0rue+hD4vqL4j/tNMm1OtQuY6omZOvXLmWDLfEZmD6v5r0iXLHKH36s/o
wnlkuSMidK7o9zMlNzii7rz+8teWZI4Tmi7vWWdiS1Z3wrZjry0nurL6TrDa
amuY4cvqO2HSDJMRqaGsvhPKNKLeDxCw+k5YMXba6RFJrL4TDnvFbT6bxuo7
oSFz8cTadFbfGT9X5r0X72P1nbG41/hzFYdZfWeMXP4hed9xVt8Zqg9/Bivk
svrOmJyWH/bzHKvvDJjUp0dfYPWd4V1j8GD3ZVbfGRXVkXorSlh9F6TO1MrZ
Vsbqu2CJielS/xusvgv8TMK7vbvJ6nf5d86Dttusvgu07g0qOljJ6rugI6Dz
+Ns7rL4LzlXe31texeq74MzyjwlLqll9V0jmJFk5Mqu7YuX4wm6jmOGKhdPN
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
L7i7b9l7ln8SXpVGGv78wPJPwuzblppbP7L8kzB5xXTj0Z9Z/kk4Y6+5c3cL
yz8Jku1mKr2/svyT4LLoU5HTN5Z/Ep6+iInM/c7yT8LitSlrPv5g+XfVM7xl
MLyV5S/GN8v+42a3sfzF2LNv3UCTdpa/GA118p/4xfIX407RjjtTfrP8xRgz
3mhr3z8sfzGm7zCf94hZT4wnK0NKt3Ww/MUoyc3QQifLX4ydgees6pjNxLjw
7Zu1+1+WvxjHPbI0G5mtxPg7c0nOKs5Xyl+MccN8vx9ndhcj3b/p6w9mnhj7
EmWH9BTIoWLUnM5RsGHmi2GQsVIxiFkkRlrY+zPRzGliHFk1sCOEOUOMN/0j
X3KZZV1/X9vPfg5zthgeU6p8FJhzxfg0uu2/C+x8CsUYFfPGgMssF0Paf2zz
T9ZfuRhLjnG1opirxSjwi6z/yq5PrRiHfkUNs2JuEKPZJ73iJLu+TWKsKxz3
u4Vd/xYxPA/nyrSY28T43vtDkSnLj5OMRw1nTDeyfBWTsTZ44GLb/+WfjLKQ
eXnm7P5QTYZcbYt4Krt/1JORMm1fVSe7v3SSoblqeEwxu//0kuFT05S+md2f
Bl3HB6qp9WP3L5KRZ/5G4X/3t1ky6psKLIex+98iGXucNRTj2fNhlQzzkJda
Dez54Xad7/C3WZPY8+WeDI100y2u7PnjJUO61exFGns+Q7usYpNxnD2//K7f
2z2y4Cx7vkXJyFbcYHiygT3/yfhWxtHdzt4PGcmYdGq+2Iu9P2TJEKtvtJzO
3i/ZyVj344Gw6RF7/pMxQ7BugrSGPf9d1zMtd8FY9v6SJ2O709uyrGqWfzJi
j2iXjLjD8u/qz/X2zJjbLP9kfBlgrXmvnOWfjAMb4yRDrrP8k9ETE4KXlLL8
kzGqed1LNznLPxkfTuJB6GWWvwTGDStWhRWx/CWY1dBng0cBy1+CPR+nfzY7
x/KXYKna6RGqeSx/CWwnbWl4mMPyl2By0jBj4XGWvwQxaidNxmax/CVYpN3Y
nMu+Z5Ag0phvNFXG8pfg0RjvhZnse2ghwfbg4tZW9r20kqC4rtDNhH1PuRIM
OHhjJ599b90l6H1MID7Jvsc8CbINs83Kk1j+EsS3jH90X8jyl8DRYfD8KgHL
XwKdkTlRRVEsfwkSXewO7ghj+UvQpFSQyw1i+UvQMiv49Ag/lr8EW3T5R657
s/wliJ31apeDO8tfAmujh9uanVj+XfXKC3e72bP8JUjfMSj/3kaWf5ejtn2c
sp7lL8GZiYOXhlmy/CV4Xp9WfW4Fy1+CxpkzJA1sftYiQUSDafwfNn9rk6DG
e1GJoiHLPwXKv+TLe85h+afgc5tg8tcZLP8USF5v9q6ayvJPQQpn65C9E1j+
KfjbS2OqjRbLPwU93vlf7TOG5Z+C/2J6PM1WY/mnoHFBiMBgCMs/BWHv0q4U
9mf5p2Dxknn7J/Rh+afg8M24icndWf4pqDfL9HrWweb/KXhxtMZbvY3N/1PA
ERwzWPuVzf9TsOTJ6cehzWz+n4Kma4c2St+w+X8K5io7Xt/O1gOiFNS8adKW
sPVCWgq8YzaIA9l6IiMFuy5/bDO/w+b/XdfnkVKMajmb/6fgVvs0nQclbP2X
ghPv/v7lX2TrvxT8PDpz0JjzbP2XgoB+pzxPnWLrvxRE+7oP1c1m678UpBlG
jz5wgK3/UtC8T3trj0y2/kuBaZ+iSOvtbP2XgoOvs97vT2HrvxS0j+M3PWLr
u7YUuDR8jFXgs/WfFDObCq6PZOtDRSlUXeXyCf5s/SdFlm+PaB0vtv6T4ufe
TCU1Z7b+k4J3qCD4ty1b/0nxteFQRdU6tv6TQvFX2fCdK9n6T4pM9wyflaZs
/SfFzQHnatqM2PpPioF3rtntMGDrP2nX93bbEK1pbP0nBd+mrfeRCSx/KfQ/
NC1W1WT5S6Eww6cuiq3neV3nH5j1uGYQy1+KCeY3l6srsfylKDYetdCuO8tf
is2Hu6WptdJ+QpoUn1vvPLN7S86Qokh2XJT4iCyTIrb1es7OG+RsKbodDvdM
LiDnSmFyFnUuWeRCKYbkFKiPTyfLpbidLVtXwfZPyqWY51CfYRVMrpZirFmg
4m0Xcq0UzzOEV8euIzdIkeu59rWjCdv/kWLBVaSKZrD9HynqD96o367J9n+k
MBsT+zVxINv/ScVrD613Dhy2/5OK+42RLzQ/0/6Scip2Tgv4desZWTUVnui9
ZmMFWT0Vh+0t+t4tIuukIm5ZpJHuMbJeKqYb3BkYlE42SMXJ93tlB4VkpGLV
5fVKhQGfjP4Pm9pe6w==
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GT3WvZmizuYftZLBb2mpmHKBrJsM7Ykli2clkQ2Sce7szkuG1mSjZBirzrTm
DCCbJqPGvLLP5Sqav0QyIjf/M9pjL9k6GaYv/j3Tuo5sl4zCGYInHoZkl2Sk
rUwovNJK857cZCyfuG9jj0KyTzJOT/o+ZnIcOSgZeDO8w8KCHJUM1SWjB5ir
knnJeDtiu0zvPs2bSpKxyIaf3raVvCkZ1xaFWxxdSc5IxtClUWULRpIzkzE/
e5DV3Uaab81Oxs++KxrnHCfnJWPT+ZKbOzaSi5Lx3yWnwc+msXnYZLRNyP2h
wuZnyzrP14zr20dcIVckY8KacVo6QnJNMmxlL46pLiIrk/FqXGhgXX9yczJW
G7du3/uwkvqfjBXz66wtd5Lbk+G5wzr/2WoyR4Lpqpd+r9Qlq0rgo2blfL2R
5oXVJajOCX03NIesJUGlvd2bVQFkXQncXvhGJU8hG0jwoOTgLvN3NJ9sJIFJ
m56+dSjZVIIhUeFfDX7SfDMkcKjN92jgk60lyMr4/iisL9lOgm1HVh5Vbqb5
aJfO12/4PEd/KJkrwUhB9X8LM2m+2keC2+sHL8A4cpAE9Rsuxg8+RfPYURLU
HX3U/+Y0Nq8twfcTa1bbl9A8t0SCYUec7l+YR94kQZ/osw/+3qJ58AwJNj/j
3h5lQ86U4MVSC/1Rj2l+PFsC8fAp9n9WkvMkOLHkZ3FxPc2fF0ngHLKufIUX
WSGB/lbtb3dbaH69TIKbDWVHxwaRKySYJOq+fO03mnevkeCY2RKvyBiyUoJP
Awc5Bf+leflmCdKbi3csFZLbJOD3E+7p04fcLsHDswefZqey+XspPkX/79b4
gWRVKSJLR9Wm76D5fXUpBmm6p9Zok7WkWCU87dTrAM3/60oheXImb4ge2UCK
rcp3g/sfo+cHjKQ4mHW529vxZFMpeB/uKh3X0PMIkGIt9/Olo570vIK1FIct
y3bc8KPnGeykOMZ97HM2hJ5/cJEiOGr+1OBoej6CKwVnwevvfxPpeQofKdwm
GRRyxfS8RZAUxwcMDt+WQs9nREkx9e7imXu30PMdPCkONXT0ic6g50MkUiS/
qm+dsL+A+i/FyyqLbwWHzlH/pbgmfj9WK+cs9V+Kf2+MTV9xKp/6L0WF/Iz5
hrNnqP9SmA0ps1pVlEf9l+L6Nb0Q25jT1H8p7MwWLjsiOEn9l6JgSPOiopQT
1H8pbiWUbpVtz6H+S9HzltlKnf3HqP9SxJwKLw8/eoT6L8U/KXo6W08dov5L
0WafkRxVmEX9l8L4AzfJLu4A9V+GHis391kk30P9l6FBy0uvftdO6r8MvsPt
bTWzt1L/ZWjN1hj73i+d+i+Dtte1D3/FydR/GeK2fxjfZJFI/ZdBrX5979kf
Aqn/Mtzt/dW59cxg867+yyBQixhvMjaoy9YyOO3tv3D/18Qu28lwPGySeXhD
cpddZKiJr93Tszy9y1wZjI0vtnU83dplHxlCnpyp2Xt/Z5eDZGguqbRff21P
l6NkGJOTkr286ECXeTJoHfww4GR1VpclnfVn5MabVR7q8iYZdj7/36Un5Ue6
nCHDTC2Zf/TNY13OlOHz5uUGuqU5Xc6WQZa5R3675ESX82RY+VLDKLTwZJeL
ZNB42/uU9pnTXVbIYCqYdf9FVV6Xy2T48Y+8bOKjM12ukKH2iql6REV+l2tk
yBB8CSy+d7bLShncu9ef/HbnXJebZbhTsGu7YVlBl9tkePx7/scVNwq73C7D
G/PkxNCr57vMkUOj3z715CtFXVaVw9vSySf1YnGX1eXgrxu9TFR8octacmRv
GyIKKCzpsq4cDoO/VS04e7HLBnJc9prWq2/epS4bydF7j0pNSe7lLpvK4ZLL
1ViZc4X6L0fbK87cNnsF9V+OdkczP4NKsp0c+bzdoQ62pdT/zve31qw49B6Z
K8dexdz9oiVXqf9yzO5xWii9TQ6SY7pi1/0Eq2vUfzmkoj4vPG+QeXKsk/cb
PHv+deq/HAW+Z6s4peRNcvx6rMMvmHuD+t9Zf2l0nMtFcqYc22r/6r+deZP6
L8f4+z0b158n58lx1efL4Mppt6j/cuRkrhg5Lp+skKPh4b11PpPLqP9yGMZO
mr8tl1whx+q3G/SOG96m/suR8f3A+pyjZKUc4UUjgzbr3aH+y2E31e+Qeya5
TY6XfWd7Dh1RTv3vPD9T+EOKdpE5Kei9LVjHbMhd6n8KXG/FKo9tIaunwOaU
S+kPtXvU/xTsH9VHf6KcrJuClVufhS7ofZ/63/l6eb7qEJCNUuD867i7zl+y
aQquBDXeexHzgPqfghPqJSW872TrFGRc0brdbWYF9T8FuVZOrmcjyC4peOMT
W+5wjsxNQZrawTuvP5F9UhAh1VZbP7mS+p8CW7uAxVX+5KgUlFxynTb1OJmX
Au27TbzEN2RJCj7et3xdPOYh9T8FtYY/hjS4kzNS8Kfn2fIf+8mZKTj4J7L4
v1pydgpyniXvaNF6RP1Pgcck36G3HMlFKdDp+7E9fQtZkYLWAxPeL3hALkvB
tSbR8df9HlP/U9A8K/ddsDW5JgUTfu7xfiskK1Pwa/TB6iWl5OYUKJSunzJ+
k9tSMNPwUlDFzCrqf2c/rVTVPoeTOano7/OU//sMWTUVK/X0pJ8/kNVT8Yoz
pbbCsJr6nwq1juypGV5k3VS4fk5ZZp1FNkjFl1lzGpXPyUapyPwddtZd6wn1
PxXCs46Rd1aQkQrbzWvfa6eTrVMxsy3kgf0dsl0qruU/qwvuVUP9T4X0yPyq
SJC5qRhQezXUM5bsk4pHPaojTQrJQanoWeqZ2dZGjkpFxZfS3PQJT6n/qXiq
ctJ10HqyJBXVU1cEJWSSN6VixHW77HvPyBmpiF2af6Pb4GfU/1ToN36TatuS
s1PxzOmf85pScl5n/uWrBnRcJRelYrq82PHyL7IiFSVN0cu8Z9RS/zvfz+Z1
F75sJFek4t8RZ7keOeSaVHDTx/QqbCArU+EQ1uL/bthz6n8q3jWeXdPDkdyW
iiZZ7r7fqeT2VNzdH//l6U0yJw35Shv9jL9k1TQ8k936bWJaR/1Pg6P5AIvi
ILJWGia03S8ZlkPWTcP40inT3F6SDdJwvPF1mGDoC+p/GiaHjLCWLCebpqHM
JD0qQEpGGv4IIyuNS8nWafBry9CpaSfbpWGBptnENUb11P80jHKefqvUm8xN
Az+p9mKvA2SfzvrSgbUG1eSgNNjv0IvarqKk/qdh/qKi171Gk3lpWBiuut/L
jCxJgwVnmPScC3lT5/qmOemfQ8kZaZiU0G3XyHRyZhoGlFikzz5Ozk7DEL9R
qy1vkPPSUB3Sq8lcSS5KQ2Kv/UMNfpIVaVjx7GX9n8Evqf9pSF47QO+6Ebki
Dcsbc+9FLiHXpOHWfcmdoevJyjSkXCjueZxHbk7DlEP7vQ32kNvSUNqr/sW2
AnJ7Gmr/+jq1PiBz0lHjF3vBpIWsmo6kjs0/Ano2UP/T0TE/+r/NOmStdPRr
XJB3yJSsm47cxOUqh+zJBukYVL2gJd2fbJSOo2X9F/uKyabp6O7eqGGcSUY6
ZjxaNONNcYP5/wG0YzsA
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1.1052264815308643`, 
        1.1295310987857947`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-1.1052264815308643`, 
        1.1295310987857947`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(2\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(3\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(m\\\\ 1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(m\\\\ 2\\)]\\)\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"torque(N m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6985507001710777`*^9, 3.698550717526689*^9}, {
   3.698550765867029*^9, 3.6985507929795437`*^9}, 3.698550838937842*^9, 
   3.6985512922299433`*^9, {3.698552516714411*^9, 3.6985525368255033`*^9}, 
   3.698560747181594*^9, 3.6985607801022263`*^9, {3.7098119023147297`*^9, 
   3.709811915565405*^9}, 3.7098125351956244`*^9, 3.7098127705098047`*^9, 
   3.709812884325437*^9, 3.7098130684158382`*^9, 3.70981463630086*^9, 
   3.709815069582802*^9, 3.709816726612154*^9, 3.70981692726938*^9, 
   3.70986858373102*^9, 3.709871931388651*^9, 3.709872400479445*^9, 
   3.7098736078443213`*^9, 3.709874869932499*^9, 3.70987630298131*^9, 
   3.710416422514076*^9, 3.710417521753619*^9, 3.714323152190078*^9, 
   3.7143779891231623`*^9, 3.7156270971557093`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_input_torques.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.709811943394271*^9, 3.709811948267392*^9}, 
   3.7101607844583673`*^9, {3.7101610430956984`*^9, 3.710161045180603*^9}, {
   3.71432282963524*^9, 3.714322831566874*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensions", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}, {
  3.698506725913652*^9, 3.69850672844914*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"tensionsList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "3", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(T\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(3\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.69850669195057*^9, 3.698506717899823*^9}, {3.6985508208686934`*^9, 
   3.698550885416868*^9}, {3.698551309719589*^9, 3.698551310008038*^9}, {
   3.7098119851768627`*^9, 3.7098120064221*^9}, 3.709874876888335*^9, 
   3.710227167729561*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
0M93lykho9sXb67kPWPr74CXdN3Dqz/Y+jtQtKLQ667iT1p/B06nXhTlTCMX
70CgcIK93TJy4w64Hpjk9HormeOIUzHyX3R8ySqOuFBmvs4ijgxH/Lt54t2a
DLKNIzrbT/UfUULmO6JjmKbC2Xq2viOU5McajWpj6zviyaqtIzYO/EXrO2Kj
3+ti+0lkjhO6SjNTViwgq3Tb8WzfP+vJcMK8K01LxTvJNk5o4i9MfxNK5jtB
4fJpgVIyOcUJNXsVJ6jkkIudIPNpZfXvW2x9J1z7MO5Z1nO2vjMmc7bE6rSz
9Z3xdfKJOQkDftP6zjhgfmZImQrZxhmC7f3ca3TIfGfMrFicdN6YnOKMs7+r
7rjYkYud8evaxA2/fMmNzriYe3i3XTSZsxOuE+JtU4+RVXbi51Mj17zLbP2d
2LS2b03aHbb+Tlhe7rjr1sTW34l8T5Njij/Y+jsxMWBmROSAP7T+Tqh+KCh6
Po7cuBPJmaNCB8whc1xwSteq35CVZBUXcB3TpV8tyHDBGMsxK87sJtu4oD/3
mesSAZnvAt3lw+ad20dOcUFrZduzX+lsfRe8sLsaPaGAre+CS13ngyfeY+vv
QtYCnZd/m9j6u1BSlPn+UjtbfxemLtxzc3W/v7T+LpQX8E7mK5P5u2BXPzCv
7wxyyi6c+So/XXMxuXgXfphZT9c2JTfuglf8z9cj7MgcV5TxOcKHnmQVV6yT
5GhyRWS44mOh2/D3iWx9V+T2rTDXT2fruyJ/qtdUzytsfVesbzI5EVbB1nfF
oDb7H55P2fquMBv7zWDJJ7b+bmQoOWR9+s3W340dQisrH/l/tP5u1N8849Yw
lmyzG/qfbAaoziTzd2OzT4HJ6sXklN0oGbPIYs0acvFuvJAeWjvLmty4GyOG
1xi3uZI5bqhbO5ybEERWcYNhUf3j4dFsfTckmL847HWIre+G1OEqTecz2fpu
yLdrvFqTz9Z3w8i004b3y9n6bpiZui41u5at74b4e18bXN+x9bmIrfimPOgH
WZGLSCPZuct7c9DzfriY7jfa06s/WYsLgdH2mnhFMrhYvzh36/FRZFMuwiRB
44+PI9twUXGpeUK8KpnLxfhlxbs9Z5D5XORoBQxeNoccx4Xj/gXyfeaTU7i4
ZHCPewnkHC6ykWNgtpJczIWabx/pBxNyNRdT9I6vc91IbuTiyeOBRxotyK1c
vFnE9V1mS+a4Y5g453WSI1nRHbL7rD49d2X53TE9+0LCMC+W3x0lKqdfzfNn
+d2RW/+iwZTP8rtjmXKm1Cyc5XfHNfnhX0yjWH53OEc9lp+/l+V3h0OR3adh
SSy/OzIansc0HGb53SFqmdiVfJzld8fA4NKZKzJYfnec85eb8yqL5XeH8Mc3
OfcLLL875skuOv/lCsvvjh0JFtrbilh+D0y39I8pusHye0ByLbxUsYLl98DF
W1Merb/H8nsgWrXohughy++BtbM94zPqWH4P9P+jalDYwPJ7wHN7wP3SVyy/
B+rn1i3Jb2b5PXB1k1N8agvL7wHvryNu+X1j+btfLz+hzqCD5ffAvanWVb9/
sfwesLp9PiWN04vye2BLbMr6pX3IjR7w0f/ZdK8/udUDk8rsTEwUyBxPzLu6
Kv7qULKiJ8xvtpwbPYqs4olSTeu0nf+RtTwRujPQPXM8GZ54eeSP/PNJZFNP
vFu1y//fVLKNJ+Y0qF8YOoPM9USsKzdvpBaZ74nT5hvDBmqT4zxhOvDW8K+6
5BRPnMqJ33F7ATnHE317ufjE6JOLPfGi71OsWMrye2Lwl00ln1ew/J5ofza7
Q7ya5ffE3NLsp0PWsPxeSEabS9Q6lt8LcXyFEx0bWX4vNI/7F7LBjOX3gqbC
uV9HLVl+Lxzic4Y9t2b5vTCr5ur1AXYsvxeeeJ2UUXdg+b0geub9UNeJ5fcC
dj3X1HVh+b0gtgsfMnU3y++FYTdHevdzZ/m9sNVo9uZaT5bfC2tXBuYk+7D8
XrguTQ4x8mP5vTDVdHZRSwDL3/1+FNt38oNZfm/UusQHy4Sy/N4Y1lX13UfI
8nd73K479SKW3xvcZwZ/Z0pYfm8kHJgr9oxk+b0heatrnx7F8nvj66y1MVUx
LL83eOIE2VdxLL83pHo6Jc17WX5vJAv9ShsSWH5vtM4qkL2ZyPJ7w1zDR3Aw
ieX3RvmgBfPsDrD83ni3/6qq8iGW3xuqS24vKz7M8ntjVKJJ/JajLL8Pbp3c
pvAiheX3QabVrPObj7H8PjB6PDqk8DjL74P3x5PdRp5k+X3gI7deYH2K5ffB
MnXFi4lpLL8PkuaU9ylKZ/l9cNLnkMeTDJbfB9M8Hna9OM3y+8C27l1ybSbL
74Mxkf7rrp9h+X2wgWc9/sBZlt8H+6ITettnsfw+qAs0+flfNsvvA9PID31u
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
/s1aJxQTr1D9I7Cl6Zqx7pHLVP8I6D56mzrh1EWqfwQitPOf3D97nuofgaSB
zyevvniO6t/9eVT+C1P2y6b6R2L62LRaXXEm1T8SVx1+FbclpFH9IzEqf3TR
umPHqf6RcDa7du6M9VGqfySK4iNmDeLtp/pH4q6dpW7ihFiqfyRUbiVaVRwP
pvpHonzZXI2R+ZpFPfXv/vnRmi1FpvweG0ZC4S1HfHtIXI9NIxFS0pSQ+mt/
j80iEX0n/t7rN0d7bBOJPU/NvixtPt5jp0hcUVc9V/w8rcfcSPwnH9ll/yCz
x7xI+EhMh6iXZ/eYH4mAktdHRC/O9VgSieNKXo2C+vM9jouEm37Wp4hHF3uc
FImSls22SdWXe5wSiQl9M+szK6/0OD0S18bvbrt+62qPcyIxeXznstrr13qc
FwnjdwaOnwqKelwcCX2FwM4/T4t7XBaJGcFFCwR113tcHYnWSaLbvZ6U9Lg2
EgVjNzgEPCztcWMkNplOami5f6PHzZGY5bXz55Z7N3vc2v15zRgvyLtzq8ed
kYiacn2hQsXtHnOkSFlk83XL7bIey0nRlnF8R8KN8h4rSqEy+75dyfWKHitJ
Yb/jYWZjYWWPVaQwfrG83+erd3qsJsU2ocf893lVPdaSwrXGbsD9i3d7rCdF
yZyXC07k3qP6S5GmWlqes6Wa6i+Fk/rTDzKPyaZSLJxv/mr1xvtUfykGJJqM
ENWQbaTou6ng5TnTGqq/FE1jUs9W3yVzpeA9/Pak0fgB1V+KH+ZppU0VZL4U
nXqXa2oMH1L9pVhsO8Hx/C1ynBSeDZ9fCpY9ovpL4R6nk44ScooUfV6pKH/S
f0z1l+Jo+Mf9YdfIOVIsUWsJ77/gCdVfCiv1ZEP/PHKxFLWbhfqP59ZS/aWY
lmJ/d8x5crUU9+8om5lo1VH9pQiYdU7f8Sy5UYoN9tubnafVU/2lMPuQcnFj
GrlVikHfBgycOvkp1V+KwE6+cWMKmRMFQcD4hpCxz6j+UbhxfNnkPgfIilHQ
aYkXuo18TvWPwveqLpvCvWSVKDwxz57wVaGB6h+FileLpveTkrWiwDsoePWv
7wuqfxT+qeXm1AvIiIL6MquuxL9kwygcOaE7dPSiRqp/FE6+Pnyn1p9sFoWO
gQXbxHlkmyhUvk8NUf1BdorC7ov7GnPnNFH9o7Dv7ghdTXcyLwq+AfW6B7LI
/O7XP/Fkf9tHsiQKXjGLBy1Qf0n1j4JsXMhq7g5yUhSO3zaSiz9OTokC/07i
r2ON5PQoqFkn1R8d+4rqHwULxbuWERbkvO712n/P3bafXBwF7SVzVCY8JJdF
4UNb+f27iq+p/lFo89jR28mEXBuFd+q/nT9FkBuj8GPS3WLLW+TmKBgc4xZd
7P2G6h+FtdkV434uJndG4X7WqCS1ADInGnnvm1/jMlkuGm9HTi0yaCMrRmN6
47AmDc23VP9oaNob9entQlaJxvesm28LT5HVorF+US22vyRrRWOAk+69r2Pf
Uf2jEVjfYeJoTkY0mv7G+t1IIBt2z3esU+hfTTaNRsLsoZXaA5up/tH4sKvB
ZeUKsk00ml1WZSOU7BSNfVNub1ApIHOjMUUyV+ntDzIvGmuKnl/dM+s91T8a
18XefyfuIkui8cRNJSX5FDmue76yu+33RnJSNDZ57ZTR+e8D1T8akzr5Ky03
kdOjEfTg4JftseScaFiOHlm4vpycF919/VnkPVnmI9U/GmYpL+rqFpLLotFS
PTvLw4dcHQ2n8C+XPmeTa6NxccnNPJP35MZoqA9q4MVO/ET1j4Y//0XBeUty
azQG3f24Oj+B3BkNmcvH3h+rInNiMCJioo1r3xaqfwwmK/b3UdYnK8bgi9Cr
7ZQvWSkGK7iyqSNyyCoxeJxYv9KhmawWg3+VB8/tU/lM9Y+BWxU3/ZQZWS8G
8cP6deyPIyMGsYf2ODmXkQ1jUHOuvGw05wvVPwY5aV9eZeqSzWIwbX9l+Bg3
sk0MQoZkBe86RXaKwZC73OSDz8ncGMzNuFqzcUAr1T8GxeVP9CpVyfwYdBmW
v9VaQpbEIMt37w2RFTkuBuOLAvLLfclJMfB4M+zc773klBjErdXaMy6LnB6D
ffotSzXLyTkxsFTMyp35mpzX/fquY2+P+UcujkFBhIZLl/JXqn/357dGKeKG
Nrk6Bkax2wYGryXXxuCKZtUz1Z3kxhisXufZfDWM3ByDzT5nlHGU3BoD5ZP/
WeVeIXfGoDL8zMGhD8mcWFQL42/YfCbLxcL9mUnpIblvVP9Y3CpMDbs1kawU
i77mR74/X0hWicWI9wdlXm0mq8UioWzBoUdcslYsar2dzl6MJOvFoit5k6rw
BBmxkBvI/7ao8FvR/wHk3j/+
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
IrH4s2gh+zy+I8RbH8+SZ/UEjthnb53m8orVd8TddX0f+jaw+o6Y7VksGfeC
1XfE9KpvN3yfs/pOUB/K57lWs/pOGKOyQL0vu15wwsD/xsvxKlh9J0w6M6BG
n11vgRPMHDYHPmJ5JDnBQVCSPfAOq++EG7N9HX+zPBucYHi+eX3CVVbfGc/z
lXkVWay+M6Qig7E3z7P6zqiNNN1lcZrVd8aDVE/nk0msvjNMCizsjxxg9Z1x
dN8yQ4NEVt8Z0bs/PjjGfr8Nzhj08siVtAhWfytkXbrZTkGs/lacL5sfU+XJ
6m+FYvvdZ7+cWf2tyLl02e6RNau/FQp/xBVWG1n9rWiti69IWsnqb4W+UV3/
A0tY/a2Y2WU100iX1d+GZw/rXl2Yxupvw2hFpcL7Y1n9bQjvtzs4ZSirvw2a
k4adntOP1d+G7aKVTUIOq78NtrPbKmO+sefPNnQEfFVe0cyeP9swt4elVtFz
9vxzQZeFz72/D9jzzwWzHUv8vxew558Lsmqn3027xJ5/LihsrF6rfpo9/1xg
f3bzidXs+ZnkApeeBSsWSVl9Fzj/J6lsCWH1XcC7dLOC78bqb8fZ+J53E61Z
/e2wnZa4LJrH6m/HgbvryuYvZvW3Q3StqSlLm9XfjrstacNaxrD62+Ggf7/5
00BWfztuXjGtSu/B6m9HWYnhA49X7P3jijOXZszsU8DeP67oFHbVTD/G3meu
UAqwul0fQua7ItxJ7b26BXu/uaLsj6bR+znkJFf0elBZuVyFve9c8WP0LYl2
C70/G1zhat1z04VS9v51w1Tj2XOvp5C5bvC4IxtiLWDvYzfMMmt9u9uCzHeD
yvoeh6xnsfezG8oP6o7KVyInuUHW2WaV3cTe926ohGSFwU1ygxv6Zpnddd3H
1g/ueLippmS6O5nrDtWMLO1YA7aecEfIz+KPAnUy3x1bVJa+UvnG1ifuuPHq
3M+lpeQkd5jN/zFsUBJb77hjAC9uUrgvucEdgSmb+8cZs/WPB8IiP57XG01W
9kBKI/+TuI3WT1wPfGyQZgQVk7U8YJfY8WLAIbbe8oCy5/dNK9zIPA9MnXDy
P83FZL4H9t//WXJOhezR/flXH4mq37D1nQdu7v6ufi6bnOCB2XJjAzQl5CQP
3DjT33+1BTndA98zgrpGTWHrSQ/0TJvx9eBvWm+We2DZS8U5t++RGzyQN+Xn
+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
ujvw81TMmBFxZOzA6utV+VODuhb9H4E1pFA=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
KzzH/BOwc1ubSNF55p+A710bBk7j+7zGBGwTjdVuICskInPi9o1Zhcw/EQO3
jLVf3PI+MBEWq7vH/yGrJiJ6f1i7XZeYfyI0Bzy4g8vMPxGtVXd/eEzWbf77
M7HmPnzfqJcILZX5X9tcYf6JOKP/5FEK2TgRKvaGv1X5vtIiEQntc5dsJ1sl
4tBPn5p+Jcw/EZVRTZkbyK6JmODzXtaxlPknwtqgbncwOSgRRkNfP3tJFiVi
5aCbMOX7UmkiTPuXXjpMTklE3399HDpeY/6JwOkhg+zImYl4ZBf09Rg5OxEb
JxdWt+L72NxEDL5Q9nweuSARi8rWf5OTC5v11g/rd5Ncmoivh66YKZYx/0T0
GHdDPp1ckYhXZ88/XkeuTsRk35njt5BrE6HQU3XDBXJ9Ig78nPC3mtyYiJgR
+9b9JSvIMGFFxsteN5h/M78LtNMiK8sw68fBFxPIqjLUWT50m05Wl6FT5oXv
IGvLMFFzXtxMsq4M9vUiNX2yngw+j9fnjyJDhsPeN5cOIBvLYPXn0K8OZAsZ
HMMuZ33k97WS4XXWbcubZFsZSirzux8ku8qwYEjgPRHZS4ZHI6bsWkQOksFz
nGnwILJIhtgOfW3e8PpLZfD9N3HhQXKKDK4vLJe4ktNlePPJco0GOVOG/QXj
Uu+35C/D5OGKt6PJuTJcdeuvPYZcIMPnijtb7vH+KpRBWndS259cKoOzXuBD
ZXK5DNCrzt7P+7VChqwVrzL0ydUyXHyy7UIx7/9aGVaenNppAblehodxg2Lv
8PlplEEtqGj8QrJCEm4NvdbnOp8/xSRMln6ZCLJyEvzva6Tm8vlVTUKhs42u
Glk9CR7byntJWp7/JLicuWT4ivODbhLWVWReNCDrNf/90cbUbZxPkIQOkuCz
dZx/jJu57VeDmWSLJLwcsmJEAucrqyRs+H0+pJzzm20S+m5fNqkH2TUJdg3+
Dgs4H3olQXVXagcp58ugJFwtN9A+y/lVlITc7tOvv+f8K01C59FW33uTU5Kw
uFViznTO1+lJiDP78Gc15/PMJBxJznsZ3jL/N/u/O37dZq4PuUnYHfNq+2Gu
HwVJWD7XOuQc15fCJGw8Zdr5Gtef0iSssYxdfofrU3kSzKb+dX3A9asiCTO+
XJj1gOtbdRIcjP+8u831r7Y5H5V/7le5PtYn4XrHMWVnuX42JmF7QO+eh7m+
Ksjxsd9y481cfxXlcH9f4Nvy+wtlOeY/7rXD7gDzl6Nyj2sZuJ6rN/99YllH
Na732nI4jfBf1cD9ga4coROP3Srm/kFPDhO9BtdN3F9Ajnf258ba8/cbxnI8
NDoxTof7EQs5ZmRs8fvE/YuVHFMUZyvkcH9jK0fq1ewqd/6+w1UO8foHqkO5
H/KS48+E7ycruX8KkuP7unlXZFuYvxwTtoyZN5X7LakcvX37W7zm/ixFjm73
tlcn8fcg6XK8d1/Zbhz3c5lyPA/rU3qnZf8nx96NB8Z5rWf+8ubzc+sFStwv
Fsixq2641i7uLwvl8DHHlQn8/UipHHmrw8Zf4f60XI52rUaGLeLvSSrkmHvo
2IEn3N9Wy2GgLS92iGP+ciw1mv/0DffH9XJ8WL+h0TWa+cuh1KQ5+A331wrJ
CNhX6mIfxfyToeHrfruS+3PlZCjcb+duEcH8k7HKZ9/My9zfqyfjaIXnivGh
zD8ZySPTizODmX8y/B65JnfieUEvGV8wo9A3gPkno8I1zvFR8/nj/wANALv5

           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1.1714457962668252`, 
        2.9941175885429283`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-1.1714457962668252`, 
        2.9941175885429283`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(3\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6985508860612507`*^9, 3.698550937005148*^9, 
  3.698551310865361*^9, 3.69855252877886*^9, 3.6985607992224083`*^9, 
  3.7098120102199163`*^9, 3.709812545526105*^9, 3.7098127709698057`*^9, 
  3.7098128899612722`*^9, 3.7098130833818398`*^9, 3.709814637333356*^9, 
  3.709815070848659*^9, 3.709816732377987*^9, 3.709816928592106*^9, 
  3.709868588124206*^9, 3.7098736135156593`*^9, 3.7098748776027718`*^9, 
  3.709876309578061*^9, 3.710161064855397*^9, 3.710416427378765*^9, 
  3.7104175232696533`*^9, 3.714323152624773*^9, 3.7143779894417067`*^9, 
  3.715627097595191*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_tensions.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7101607845755167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Thrust and Tensions", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}, {
  3.698506725913652*^9, 3.69850672844914*^9}, {3.714322845556993*^9, 
  3.714322848587514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux1", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aux2", "[", "comp_", "]"}], ":=", 
  RowBox[{"tensionsList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"aux1", "[", "1", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"M", " ", "g"}], "/.", "PhysicalConstants"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"aux2", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux2", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux2", "[", "3", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(UAV thrust - UAV weight)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(3\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.69850669195057*^9, 3.698506717899823*^9}, {3.6985508208686934`*^9, 
   3.698550885416868*^9}, {3.698551309719589*^9, 3.698551310008038*^9}, {
   3.7098119851768627`*^9, 3.7098120064221*^9}, 3.709874876888335*^9, 
   3.710227167729561*^9, {3.714322902386936*^9, 3.7143229586535683`*^9}, {
   3.7143230222970743`*^9, 3.7143230243912992`*^9}, {3.714323178386656*^9, 
   3.7143232274685593`*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxFm3tcTNv//0OUdAi5RAghCWFQTnhjSlKKQnQxpfv9Mt1vU03XmS6UI05I
JSGEECblCEWHkIQQhRBCCJ381ufx3S+/8895PK39Xu/1Wq89e6+91ruJjr7r
nPvKycm195OT+9///++/zqVthi3aouaBxP0D9RQ1/yF3BaxIDaYfCiceA6uQ
8vii6JadYFVqeLGtZ2EceDTlJly1m+wNVif1DzNu7LEGa7D+9R3z+eBJlDuS
v0RnDliTpG9jRAvGg6dS3fPmDbJBYC0qLGrsc+67IsfaJN+08cG0drAOtX2v
sZC/D55FbWccf6y6Ctal7FdNKV2nwXOo+qZ/468D4LnE1/u72fUv8Dyqi/qj
UisJzGN6Uq8tCQXPJ9sTxq5F7uAFZNCivNDWBryQ1FOUv9magfWoSz4r/cBS
sD6V8SIGzZsLXkROi+P2950C/pNk0vBDQ0eDDahNxznPbhB4MXVcCp7a1qvA
8RJqeKXcm/8JvJTU1XOUcl6CiXSaoswvPeRYRFQ46Ot79VtoX0a2FS+1Dl1G
+zLiza/a5FSO9uVkKrP5bnoU7cup58STXQ75aF9BBl4FL/N2on0FSdWmFwxM
Qzuf5PMHHd4dh3Y+ZZvLd6wLRbshSRs/+8zxQbsh8WZ+NZ3vhHYj4oWLTtlt
RrsRdSxOeX7IAu0r2fjPz1BbifaV5LXj+MfDi9FuTHWG+gfteWg3JlvP0pvz
ZqB9FamvWvN9+iS0ryL5uRlXSQ3tJuS1Zk9riAraTahr5mWlWwpoX01WiS/6
Gv0awLWvJmFwv33NXzmWMyXZblnF9vdoN6UevWZjt5doN6Oey+08uydoNyPl
L2dE/o1oX0PqZ3/xDtxE+xqq1uje2n0V7eakevGNlmcl2s2pzuf2wf/Oot2C
eqZ9UC4t5ZgsSPmDmzTuEK63IF7gY4egfI6rLCj3zI9byX8jfi0ZmAzVqMhG
/FrinSzcPywd8Wup5O/uQylJiF9LdYW7sybFIn4dCdPaKx6HI34dqVZtl14Q
In4d8QzGusp8EL+OZP3Wlre4Id6SeCtr3mltRbwliQ+Yh+ywQ7wlqb5xvDrV
GvGWZHrzb7PH6xBvRXyriaJzZoi3ombnkbcvGCPeiqr9FU+1rUC8FfX8a7+T
txTx66m69Ma7I4sQv554Oysnr16A+PXU0fW0YNhcxK+nEvm4e31nIX4D1W3T
VlfXRvwGdr8Mv28/FfEbyFauXHBjEuI3EL/QdbDjBMRvJM1/n82erI74jWSg
833wEDXEb6RcC/owZSTiWXt45R9uwxFvTfL9yvLuqSDemrLTN933GYx4a2pQ
q3gwTxnx1lT9eleNphLiN1H2UqpYpoj4TaRZmFCbOgDxm0gaf/HbL3nEbyLe
pSqT/f0Qv5nK7r+v8OmL+M1UN2i1oVsfxG8mnenb/02TQzy7foGdwdNf/bl4
G3JKXuVnCyYbEkqnLusPFtkwf7RED3o5rrIh8TmN7iawnC1Fvjjj3e93vC01
GxzaZ/073payvZRXNoGrbElnZ/qoOIxHzo66ki9Ursd4yY7ENcter4MekR2Z
9tXTD4PeKjtSt3G0qMF8yNmT8uKQG0sxX2RP4sVbVzxVQLw9aV6VmBUNRLw9
dcxTicwehPgtJNYeaH/oD8RvodzWKzFtQxC/hdRXK3gaDkP8FhJe1jt4QxXx
AnIKLDoXPIpjDQE1K56YYjQG/QlI+Xmvl/44jgUC9vw8PMRCA/0L2PPZR5oy
meM8AanLbgle4P6tElCb97KBW3F/twiIt8q0z/+//x0oN+XY5UtzkN+BylIi
ru+fj/wO1HBCL2O/PvI7kFS7O7VqMfI7kMzLf0HvMuR3IIPaUUqbjZDfgZT7
zo6+a4L8DsQb+kTJwxz5HclJj7TGWSG/I0mFwjUdeF6QI2X7HfnSiOeJwJEa
hvL+anZEfkdqK08s7nFFfkeqXmN+YIE38juSqV5w/9QA5HckZSOt5V9DkH8r
5Z593BAehfxbycpNsHBUPPJvJS+9263Xk5F/K5leK7Ha8fv5upVkGbfkg/H8
zdtKJSFhvl67kX8rqbZZqITmIf9WqrZz3ppThPxO1Hx/zou6EuR3Ip39e4eN
OIX8TqSp0s/d7xzyM+6c6vLk9/vEiaorViTb432T50SR5f3XdNYhvxOp35Uu
yLqL/E4kS/W+ZPQQ+Z1JduiEj9Iz5Hcmr96mi49fIb8zux8fzq3C+1HgTPIH
J5me+IL8zqR5KUda2oP8zmT7c3dwRT/u/VvlTDq+fdLuK3HcwvL5jbfsHYr3
swsZCCpN5+B9ruFC1akze301OCbG6rM7zk3jWOBC0imKuYNn433vQpHHIrK8
F3Cc50KFL+qsG7G+qHIhvl1VgLEh8ruQ6ZY9bpdNkd+VmtfP/sfICvldSdn4
msIdG+R3pULPxf84bUV+V2qr/RTe64H8ruTUfefC3gDkZ+1t64cYhiM/az8Z
K/cxFvldqay4Y0x+CvK7kWxe5ZuN25DfjXo+ne4Zugv53Uj1/uQnt/KQ343a
zLrUtxUjvxs1hx9dub4U+d1IPSLg3VisD6vcSFzWf29bJfK7Ue6sG6+PXUN+
d/L6fN0hHOtNDXfSCTu10+g+8ruTeGjzuOFPkd+dcresTHqK9avInbJvH3A9
8h753Ul9grVl8FfkZ3zd/+lSrIdbWPz+C/sVBmC97EFSwzO6//7BsYYH8Y/k
Ts4cwTF5UFeeyzCLcRwLWLvFjR3KWI+LPKjw4oqVV3Q4zvMg5dV/XArjcVzl
QW3TdPZON+C4xYNKbnuHN6xAfk/iiTw/ha1Gfk/iZ0kL1CyR35O6uhV1Tm1G
ftae/lbbyBH5PaksVJXu4Hsjz5OqQ/9U3uiP/J5kMP+TbgO+T1pYf1FFFqtE
yO9FssTCwWfwPaPhRV1qakPGZCC/F/EvDf8mxPePwItKXiZ7Xd2D/F7U/MZy
5GB8L+Wx/ubq564uQX4vUp7RXhR9Cvm9qG7Zf0+LziO/N/Xc6/fp8iXk9yaZ
emjyvRrk9ybTnhrzR7eQ35tymzd9aWhEfm/ieYun/fMY+Vm7YPeO/Dbk9ybV
ca8+BL1Ffm8qcTzx6s9PyO9DuS8NZrM55vL7UGHrjbC9v5Dfh5r35UUsGsB9
bwp8qONV7+tryhyLfKgtemaE0XCO83yoJD7k5Wk1jqt8qOHGzLYRGhy3+JDO
vOKZLlPx/epLdS1GUUU6HGv4kjA2ML1xLsfkS9XB+eO+6iG/L9n2WLbLL0V+
X4pcNuJoX0Pk96WS0NgZH0yQ35fKHi3XvG6B/L6kXjR8U9YG5Pejjn6VUhNb
jlX8SP3rxPgPDhiPHynr6PSJc+VY149kd1rq+uB7nli89cajPgEcW/iRjpbM
oyYE4/WjLsu1NwdHcezH2MA3fxn2B0R+xNdOOClI4jjTjzTvq93wlEKPH4m/
3jjnuI3jUj/yOrzOzPAv6PMj249R64f/zXE9u15xYUHdPuhl47skUvQv5LjT
j4T1IdZyh6Dfn+oULF3Dj0K/P0Vu26r09AT0+5PByBGjZ52Bfn/qevTO1fU8
9PtTx/30O6kXod+fCk+fmpPzD/T7s+fTXEHGVej3J77Wf/p+16Hfn7z0x+cu
ugn9/uT09ILT+9vQ70/NaiMDJfegn8X/m3hw6APo9yf1oNjW3/s19f7Uc337
wAdPod+fhALBf2qt0M/Gq1NcsOIl9AcQbwg9X/8a+gNIZ/mIPIsO6A8gqysz
rsz7AP0BpH5uz6JfH6E/gEyP7n5zsgv6A6i5zaVqzTfoDyAvyebiO9+hP4By
n7ZkLOmB/gCqMw9x3t4L/ax/Scnom3JKnH52fcKE3R/7clwawNZj0Y965Dmu
CiDpgYRbHwZwXB9ATom97tcVOW5h47e4uE+qxHEn49ZClwXKHMsFkjTq79PX
/uBYJZD4nlliGsKxRiCpHhHX5alwrMvaE72S2odyTIFUON60dNRwji0CyfTj
1BWzVDkWBFKDWZ/FOiM49guksstP/h46kmNRIMknVNk/AWcGUvXFgoTto6A/
kHjtMUNnjYb+QLJSMJQ/Aa4KJJ13DwRj1aA/kLzcxszwBrew8fnecy0CdwZS
z/Ib6tfAckKSJhyxuAVWEVKJ+fBBlWANIfXoSaz+AusytklYsB5MQipbZ3Ph
J8ZjIaRcHdP3KWCBkK13wh/9gh4/IUWWvs6wA4uE1Dw2Sq3gt34hNZzsSqzH
fOUJKTv07asXmM9SIfH175m2Yr6rhNRl13O1Zhj0C0ksi3H7C/60CKnOyYJv
Cv86WbvHbJ83g6E/iJyOHvnh99v/IJLunfDr6SDoD2Lf68e3LcT9oxtE8hf5
tSG4v4jFx2VW5OH+swgiqwL5pJO4PwVBZFt3d8lR3L9+QdTwz/veTNzfoiAy
mNr3ud3v+z+ITHWF/VTx+8hj/QU7xpzC76c0iJSP7AswwO+rKohUHU/8OIbf
X30QaTb8O3/QJ/z+gyj3wIPla/H77Qwi3jHnZbH4fcsFU+HlkrV///79BxMv
YVv2PjwfNIKJPyN3RjqeH7rBJNvYrefagt9/MDW8CXiq/Ri//2AyfRCy/AGe
T4JgahugkhjQiN9/MGVPenrz6x38/lm+pInLXW5BfzA1jz/c/9IN6Gftq1qW
KtRAfzAJr1aM0q+G/mCyKqwr21AF/cFUN3vKUoEM+tl4X3s+XV8O/Sw+5tbF
hWXQH8L6G6AwoBT6QyhXtuZ51RHoD6G2VLcIt4PQH0JS6c7/evKhP4Rkm/Zl
R++F/hAyvXfJ690u6A8hpyUVJ1ftgP4QqjO8npWVCf0hpDp19+IbEugPocJK
qyedidDP2sv/KpTH+7KU9ZfrWzkA79OqEFJXENh/w/u2PoTENRtPNOJ93BJC
DcPK2gvxvu4MIYNDi+c7ukF/KKkPnVYzeCv0h1LdVaW7h+2gP5Sqha+TFmC/
XjeUxDO11E6ug/5Qkh5MPzfODPpDqSTSMDdsJfSHksyjoevKMugPJfmdGt/6
GkB/KLXd9bivuwD6Q0mn3ey6uS70s/E0yeQF2tAfSj3z+sgcNKE/lMrsz01Z
j/OBetZ/a2PIotHQz66vym0fOgz6Q4lXtefYo9/nB2FkcPm8XE5/6A8jU/WJ
I1di/acRxvoznvoa60PdMMpe/dktGutHCiNZr9ZIhQ6OLcKoIUDPJf4F1qth
pGpUtu3zE479wshql//tjU1Yv4aRl2eifeltjjPDSPnryoD/rmM9G0a5SquM
llZzXBpGQl9r1eAKrG9Z+5KYkflnOK4Po7YVvxIvH8d6l+WzXZv3sJjjTqbv
3uQ9r/Zj/RtOVnXW5W92c6wSTpoZ8jPbsqA/nMp+ei5okEJ/OCk/66tyIQH6
w8lpi8eXnGjoDyf+Kt9JPiHQz/oTK95d5Af9LJ/7+hW/3KA/nHqm5h6/4AD9
4SQ/0djKD987eez6de3e4/A9VBrO1hsz9S/je6kqnHSiXn9y4EN/OJVcHdT0
/ff3VjipHto/RTIf+tn4K++OHjkL+iNIPabt/e6p0B9B2bmzXqhNgP4I4rtN
1s8aBf0R1Ka7SktBBfojqLBAvzNIEfojqE4n7+ZTOeiPoJ6Nen0Mv3Pfn34R
lKtbd+XAR3y/Ms6fu7nvG44zI8jgoVnP5uf4no0g5QMD3xzH+UwpG++dTQ59
7uL7NoJ0tuvlmd/guD6CqpsK23bjvKaF6ZHlebVe4LiTjf/+7ODpZfj+jiT5
w+uXepdwrBJJzd+GDzheiO/xSIqc6a74IZdj3UjqubhGPHMHvs8jqSH17FkP
nOdYRJLBn+ktRQn4Xo8kafEpg+dR0M+u//O/geOCoT+SytbOS9yI853MSMrd
M+TDNhfoj6TstD/j6uyhP5I0j62JUtgI/ZEkHPLvuBXm0B9Jqoen7I/BeU9L
JMmqS/kVS6E/kto2HzPsWQj9UVQWz39moAv9UaTzIMoqRgv6o8j02crmy9gP
0o2i7GD/00rYL6Io0px7SN0K+0kWUSRtjFiTNxD6o0j9wrqkD32gP4qq9QL6
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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
0M93lykho9sXb67kPWPr74CXdN3Dqz/Y+jtQtKLQ667iT1p/B06nXhTlTCMX
70CgcIK93TJy4w64Hpjk9HormeOIUzHyX3R8ySqOuFBmvs4ijgxH/Lt54t2a
DLKNIzrbT/UfUULmO6JjmKbC2Xq2viOU5McajWpj6zviyaqtIzYO/EXrO2Kj
3+ti+0lkjhO6SjNTViwgq3Tb8WzfP+vJcMK8K01LxTvJNk5o4i9MfxNK5jtB
4fJpgVIyOcUJNXsVJ6jkkIudIPNpZfXvW2x9J1z7MO5Z1nO2vjMmc7bE6rSz
9Z3xdfKJOQkDftP6zjhgfmZImQrZxhmC7f3ca3TIfGfMrFicdN6YnOKMs7+r
7rjYkYud8evaxA2/fMmNzriYe3i3XTSZsxOuE+JtU4+RVXbi51Mj17zLbP2d
2LS2b03aHbb+Tlhe7rjr1sTW34l8T5Njij/Y+jsxMWBmROSAP7T+Tqh+KCh6
Po7cuBPJmaNCB8whc1xwSteq35CVZBUXcB3TpV8tyHDBGMsxK87sJtu4oD/3
mesSAZnvAt3lw+ad20dOcUFrZduzX+lsfRe8sLsaPaGAre+CS13ngyfeY+vv
QtYCnZd/m9j6u1BSlPn+UjtbfxemLtxzc3W/v7T+LpQX8E7mK5P5u2BXPzCv
7wxyyi6c+So/XXMxuXgXfphZT9c2JTfuglf8z9cj7MgcV5TxOcKHnmQVV6yT
5GhyRWS44mOh2/D3iWx9V+T2rTDXT2fruyJ/qtdUzytsfVesbzI5EVbB1nfF
oDb7H55P2fquMBv7zWDJJ7b+bmQoOWR9+s3W340dQisrH/l/tP5u1N8849Yw
lmyzG/qfbAaoziTzd2OzT4HJ6sXklN0oGbPIYs0acvFuvJAeWjvLmty4GyOG
1xi3uZI5bqhbO5ybEERWcYNhUf3j4dFsfTckmL847HWIre+G1OEqTecz2fpu
yLdrvFqTz9Z3w8i004b3y9n6bpiZui41u5at74b4e18bXN+x9bmIrfimPOgH
WZGLSCPZuct7c9DzfriY7jfa06s/WYsLgdH2mnhFMrhYvzh36/FRZFMuwiRB
44+PI9twUXGpeUK8KpnLxfhlxbs9Z5D5XORoBQxeNoccx4Xj/gXyfeaTU7i4
ZHCPewnkHC6ykWNgtpJczIWabx/pBxNyNRdT9I6vc91IbuTiyeOBRxotyK1c
vFnE9V1mS+a4Y5g453WSI1nRHbL7rD49d2X53TE9+0LCMC+W3x0lKqdfzfNn
+d2RW/+iwZTP8rtjmXKm1Cyc5XfHNfnhX0yjWH53OEc9lp+/l+V3h0OR3adh
SSy/OzIansc0HGb53SFqmdiVfJzld8fA4NKZKzJYfnec85eb8yqL5XeH8Mc3
OfcLLL875skuOv/lCsvvjh0JFtrbilh+D0y39I8pusHye0ByLbxUsYLl98DF
W1Merb/H8nsgWrXohughy++BtbM94zPqWH4P9P+jalDYwPJ7wHN7wP3SVyy/
B+rn1i3Jb2b5PXB1k1N8agvL7wHvryNu+X1j+btfLz+hzqCD5ffAvanWVb9/
sfwesLp9PiWN04vye2BLbMr6pX3IjR7w0f/ZdK8/udUDk8rsTEwUyBxPzLu6
Kv7qULKiJ8xvtpwbPYqs4olSTeu0nf+RtTwRujPQPXM8GZ54eeSP/PNJZFNP
vFu1y//fVLKNJ+Y0qF8YOoPM9USsKzdvpBaZ74nT5hvDBmqT4zxhOvDW8K+6
5BRPnMqJ33F7ATnHE317ufjE6JOLPfGi71OsWMrye2Lwl00ln1ew/J5ofza7
Q7ya5ffE3NLsp0PWsPxeSEabS9Q6lt8LcXyFEx0bWX4vNI/7F7LBjOX3gqbC
uV9HLVl+Lxzic4Y9t2b5vTCr5ur1AXYsvxeeeJ2UUXdg+b0geub9UNeJ5fcC
dj3X1HVh+b0gtgsfMnU3y++FYTdHevdzZ/m9sNVo9uZaT5bfC2tXBuYk+7D8
XrguTQ4x8mP5vTDVdHZRSwDL3/1+FNt38oNZfm/UusQHy4Sy/N4Y1lX13UfI
8nd73K479SKW3xvcZwZ/Z0pYfm8kHJgr9oxk+b0heatrnx7F8nvj66y1MVUx
LL83eOIE2VdxLL83pHo6Jc17WX5vJAv9ShsSWH5vtM4qkL2ZyPJ7w1zDR3Aw
ieX3RvmgBfPsDrD83ni3/6qq8iGW3xuqS24vKz7M8ntjVKJJ/JajLL8Pbp3c
pvAiheX3QabVrPObj7H8PjB6PDqk8DjL74P3x5PdRp5k+X3gI7deYH2K5ffB
MnXFi4lpLL8PkuaU9ylKZ/l9cNLnkMeTDJbfB9M8Hna9OM3y+8C27l1ybSbL
74Mxkf7rrp9h+X2wgWc9/sBZlt8H+6ITettnsfw+qAs0+flfNsvvA9PID31u
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
/s1aJxQTr1D9I7Cl6Zqx7pHLVP8I6D56mzrh1EWqfwQitPOf3D97nuofgaSB
zyevvniO6t/9eVT+C1P2y6b6R2L62LRaXXEm1T8SVx1+FbclpFH9IzEqf3TR
umPHqf6RcDa7du6M9VGqfySK4iNmDeLtp/pH4q6dpW7ihFiqfyRUbiVaVRwP
pvpHonzZXI2R+ZpFPfXv/vnRmi1FpvweG0ZC4S1HfHtIXI9NIxFS0pSQ+mt/
j80iEX0n/t7rN0d7bBOJPU/NvixtPt5jp0hcUVc9V/w8rcfcSPwnH9ll/yCz
x7xI+EhMh6iXZ/eYH4mAktdHRC/O9VgSieNKXo2C+vM9jouEm37Wp4hHF3uc
FImSls22SdWXe5wSiQl9M+szK6/0OD0S18bvbrt+62qPcyIxeXznstrr13qc
FwnjdwaOnwqKelwcCX2FwM4/T4t7XBaJGcFFCwR113tcHYnWSaLbvZ6U9Lg2
EgVjNzgEPCztcWMkNplOami5f6PHzZGY5bXz55Z7N3vc2v15zRgvyLtzq8ed
kYiacn2hQsXtHnOkSFlk83XL7bIey0nRlnF8R8KN8h4rSqEy+75dyfWKHitJ
Yb/jYWZjYWWPVaQwfrG83+erd3qsJsU2ocf893lVPdaSwrXGbsD9i3d7rCdF
yZyXC07k3qP6S5GmWlqes6Wa6i+Fk/rTDzKPyaZSLJxv/mr1xvtUfykGJJqM
ENWQbaTou6ng5TnTGqq/FE1jUs9W3yVzpeA9/Pak0fgB1V+KH+ZppU0VZL4U
nXqXa2oMH1L9pVhsO8Hx/C1ynBSeDZ9fCpY9ovpL4R6nk44ScooUfV6pKH/S
f0z1l+Jo+Mf9YdfIOVIsUWsJ77/gCdVfCiv1ZEP/PHKxFLWbhfqP59ZS/aWY
lmJ/d8x5crUU9+8om5lo1VH9pQiYdU7f8Sy5UYoN9tubnafVU/2lMPuQcnFj
GrlVikHfBgycOvkp1V+KwE6+cWMKmRMFQcD4hpCxz6j+UbhxfNnkPgfIilHQ
aYkXuo18TvWPwveqLpvCvWSVKDwxz57wVaGB6h+FileLpveTkrWiwDsoePWv
7wuqfxT+qeXm1AvIiIL6MquuxL9kwygcOaE7dPSiRqp/FE6+Pnyn1p9sFoWO
gQXbxHlkmyhUvk8NUf1BdorC7ov7GnPnNFH9o7Dv7ghdTXcyLwq+AfW6B7LI
/O7XP/Fkf9tHsiQKXjGLBy1Qf0n1j4JsXMhq7g5yUhSO3zaSiz9OTokC/07i
r2ON5PQoqFkn1R8d+4rqHwULxbuWERbkvO712n/P3bafXBwF7SVzVCY8JJdF
4UNb+f27iq+p/lFo89jR28mEXBuFd+q/nT9FkBuj8GPS3WLLW+TmKBgc4xZd
7P2G6h+FtdkV434uJndG4X7WqCS1ADInGnnvm1/jMlkuGm9HTi0yaCMrRmN6
47AmDc23VP9oaNob9entQlaJxvesm28LT5HVorF+US22vyRrRWOAk+69r2Pf
Uf2jEVjfYeJoTkY0mv7G+t1IIBt2z3esU+hfTTaNRsLsoZXaA5up/tH4sKvB
ZeUKsk00ml1WZSOU7BSNfVNub1ApIHOjMUUyV+ntDzIvGmuKnl/dM+s91T8a
18XefyfuIkui8cRNJSX5FDmue76yu+33RnJSNDZ57ZTR+e8D1T8akzr5Ky03
kdOjEfTg4JftseScaFiOHlm4vpycF919/VnkPVnmI9U/GmYpL+rqFpLLotFS
PTvLw4dcHQ2n8C+XPmeTa6NxccnNPJP35MZoqA9q4MVO/ET1j4Y//0XBeUty
azQG3f24Oj+B3BkNmcvH3h+rInNiMCJioo1r3xaqfwwmK/b3UdYnK8bgi9Cr
7ZQvWSkGK7iyqSNyyCoxeJxYv9KhmawWg3+VB8/tU/lM9Y+BWxU3/ZQZWS8G
8cP6deyPIyMGsYf2ODmXkQ1jUHOuvGw05wvVPwY5aV9eZeqSzWIwbX9l+Bg3
sk0MQoZkBe86RXaKwZC73OSDz8ncGMzNuFqzcUAr1T8GxeVP9CpVyfwYdBmW
v9VaQpbEIMt37w2RFTkuBuOLAvLLfclJMfB4M+zc773klBjErdXaMy6LnB6D
ffotSzXLyTkxsFTMyp35mpzX/fquY2+P+UcujkFBhIZLl/JXqn/357dGKeKG
Nrk6Bkax2wYGryXXxuCKZtUz1Z3kxhisXufZfDWM3ByDzT5nlHGU3BoD5ZP/
WeVeIXfGoDL8zMGhD8mcWFQL42/YfCbLxcL9mUnpIblvVP9Y3CpMDbs1kawU
i77mR74/X0hWicWI9wdlXm0mq8UioWzBoUdcslYsar2dzl6MJOvFoit5k6rw
BBmxkBvI/7ao8FvR/wHk3j/+
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92HlcTO/bB/CR+soSkcgSY0v2kqUIH1ulLCNLKWraI+37PlNTzTRNkn2P
RLK1oJSl0CKhkIpSSLIWiSzl6Xm57p9/vN6OM9dc5zPnnPu6x9i6mzrIcTic
5p4czv///e9P6yJXowXNJx6W36R/gIaHX6feSmZFONhVX7Y8/pCsjHUWC+vv
XX1AHozRFUp/El/eJ6vhj05//XA15pFYbqUZamVVRubiw+tRq7sy75HHwqS1
sHXKEObxGHaj1PJSTClZA8H84fr2vZg14WLyo73XnrvkyRh7pSzFRYt5KgSJ
D7iWNSXk6VCx9Wk/voNZC7VptS591zFrY8lMjWjbccwz0cv7HseLw6yDuX/6
rpN/X0yehdcyt4uv65lno+SZg/yzl8xzwKnldqa3MM9F14F4uZm92efp4tL8
w/oa05n18G1g1q6NVszz8HlOcKb0APN8fNFt6hVfz6yPGZNFdyf8r98FyF0/
/vtwKfNCvM4vMJ/dyrwIC7JypfrW7PoBSqvX/vlRRRYAynu8Pk+3YNd/MVT0
8gWpb8iCxdAvrU6fEsTyW4LRC2qsw4dSvoIleKE6yGzbdZb3Uvz47/3KLBf6
fQiWInPr23fcsez3swxKJ2vuBzaQBcvw/pzMeMk69ntbjsmqbZ975pIFy3Hb
qlrDYXwFHTeAw29DkxWJZIEB9KYZ39jV8xEdN4R3WPyniQFkgWF3Pv02vGth
x43AdTgkzNv2mI4bYf52P5WIZjJnBdq0c/K5W5/Q8RX4s/uGWfBHMscY8v1D
C3y9Kum4MQxqr/b89ovMMYHB2dlLn0U9peMmmON+vbCfShUdX4mVaRrf3E+Q
BSux4c6czc061XR8Fa4n+mVaFJMFq5B7ou3x2c01dHw1vJd/Kc5vIwtWY3uR
tCAs7hkdX4O3u3hj7mk8p+NrwPd/4Ce9RebwMMBgTESKde0/g4ep50Jm/+0k
C3g43Xj1StiRun/O52G90Ud+n4Uv6Py1aErjFInryViLe54u6Q3Cejp/LY4c
8EkMGdRA56/FwOuTMzfbkzmmeBtx3090hQxTfF/UcPOt4ks63xQ6I/vEB1mS
800xOUhfXvsCmbMOcqffO//lvKLz1+HeknUTn60jC9YhIuh5+eVT5Px1GPMk
eFTMTzJnPQa0LPi6ZOVrOn89xi8oNX9xlCxYj5RN8tLVX8j569FqeKlFvLSR
zt+AwdJ56pF7yNgA68srn898SxZsQMDt7PHxum/o/A34un7CJKmEzNmIfYcb
VnOfkbERoVf2zVo2uYnO34jPX1SzPgWS8zfilbTthcpdMscM+ry5fS4MfUvn
m0HvRFNhlgNZYIZ9QsHrkVnkfDNYL+f7vfxL5pij/Zt85U+TZjrfHP1t5h20
2kcWmCPefswpxVfkfHO4cFRHf5nyjs7fBIHFNq+BvmRswuAefTbYXScLNiFJ
6+XtBvn3dP4mBM+bLC8yIXMs0FciTTbcSYYFxo1SCtB4ShZYYOntxmMjhn+g
8y0wP2SYcOwWMscSx0f/LZlzjAxLLF8udVnfQBZYIrJH1Al/7kc63xK8sTs/
HrYmczZj7rOR/QqOkLEZWV81/3v5jCzYjAnFP7i/hnyi8zdD7JD0qrcpmbMF
eUaSAf3jyNiCzmn3U+ULyYItUJXFvf/wh52/Bdnzpxvf0vlM51shMW+nT/RW
Mqww68zslXOPkgVWWHRh/dvHFeR8K1Qv+y2zlG+h863xV6CWc382GdZY/0Pa
d7IjWWCNN7kzLTz2kPOtkW3cfizpNjufjzMTqjl5rWQuH5Yrxa+t+7fS53Uf
P7wjvWocmc/vfj53zCjUJQv4mGcalau5ipzER2ybZY6cDTmfD9XOCUnrfMgN
fNQW6XwfEUPm2MB72SmTzQfIXBt8LTq6QPUsq2+Drr6+PobXWH0bSEvaTrSV
sfo2+PPoUNTwOlbfBh/kP7+89pHVt0HL67yo579ZfRu8HxJu4N/nC9W3RfSp
bM5ONTLXFnP+8vZN0iDDFhEpSm2Ldch8W8yN+dnj+SKywBaHH7660m5CTrJF
yegaxV1m5HxbKPfO+pplS26wxdqTB7w2ubL6dpg36qBE5M/q28G+/4L5c4Ss
vh3EruNk7rGsvh20u1KjtXex+nbY+lOqFXqI1bfDgEcHdq9LZvXt8KyOf/1y
Gqtvhz05TZdPZrD69pilZScZk8Pq2yNI+nfJtBusvj0GcA5+KrnN6tvjqaZs
V3sJq2+P+bzghZfus/r2MHVQ/6HwiNW3R4a7auGHSlbfHsM33bngWMPqO2Bj
09ir/rWsvgNCso+8HV3P6jvAa9K3+fyXrL4Dmr4Pu6L3mtV3AMd7xPrzjay+
A04tkB907Q2r7wBXXsk7xyZW3wEuy2c8vsDMccSKqwW3dzNzHWFzLufCMGY4
IrH4s2gh+zy+I8RbH8+SZ/UEjthnb53m8orVd8TddX0f+jaw+o6Y7VksGfeC
1XfE9KpvN3yfs/pOUB/K57lWs/pOGKOyQL0vu15wwsD/xsvxKlh9J0w6M6BG
n11vgRPMHDYHPmJ5JDnBQVCSPfAOq++EG7N9HX+zPBucYHi+eX3CVVbfGc/z
lXkVWay+M6Qig7E3z7P6zqiNNN1lcZrVd8aDVE/nk0msvjNMCizsjxxg9Z1x
dN8yQ4NEVt8Z0bs/PjjGfr8Nzhj08siVtAhWfytkXbrZTkGs/lacL5sfU+XJ
6m+FYvvdZ7+cWf2tyLl02e6RNau/FQp/xBVWG1n9rWiti69IWsnqb4W+UV3/
A0tY/a2Y2WU100iX1d+GZw/rXl2Yxupvw2hFpcL7Y1n9bQjvtzs4ZSirvw2a
k4adntOP1d+G7aKVTUIOq78NtrPbKmO+sefPNnQEfFVe0cyeP9swt4elVtFz
9vxzQZeFz72/D9jzzwWzHUv8vxew558Lsmqn3027xJ5/LihsrF6rfpo9/1xg
f3bzidXs+ZnkApeeBSsWSVl9Fzj/J6lsCWH1XcC7dLOC78bqb8fZ+J53E61Z
/e2wnZa4LJrH6m/HgbvryuYvZvW3Q3StqSlLm9XfjrstacNaxrD62+Ggf7/5
00BWfztuXjGtSu/B6m9HWYnhA49X7P3jijOXZszsU8DeP67oFHbVTD/G3meu
UAqwul0fQua7ItxJ7b26BXu/uaLsj6bR+znkJFf0elBZuVyFve9c8WP0LYl2
C70/G1zhat1z04VS9v51w1Tj2XOvp5C5bvC4IxtiLWDvYzfMMmt9u9uCzHeD
yvoeh6xnsfezG8oP6o7KVyInuUHW2WaV3cTe926ohGSFwU1ygxv6Zpnddd3H
1g/ueLippmS6O5nrDtWMLO1YA7aecEfIz+KPAnUy3x1bVJa+UvnG1ifuuPHq
3M+lpeQkd5jN/zFsUBJb77hjAC9uUrgvucEdgSmb+8cZs/WPB8IiP57XG01W
9kBKI/+TuI3WT1wPfGyQZgQVk7U8YJfY8WLAIbbe8oCy5/dNK9zIPA9MnXDy
P83FZL4H9t//WXJOhezR/flXH4mq37D1nQdu7v6ufi6bnOCB2XJjAzQl5CQP
3DjT33+1BTndA98zgrpGTWHrSQ/0TJvx9eBvWm+We2DZS8U5t++RGzyQN+Xn
+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
ujvw81TMmBFxZOzA6utV+VODuhb9H4E1pFA=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
KzzH/BOwc1ubSNF55p+A710bBk7j+7zGBGwTjdVuICskInPi9o1Zhcw/EQO3
jLVf3PI+MBEWq7vH/yGrJiJ6f1i7XZeYfyI0Bzy4g8vMPxGtVXd/eEzWbf77
M7HmPnzfqJcILZX5X9tcYf6JOKP/5FEK2TgRKvaGv1X5vtIiEQntc5dsJ1sl
4tBPn5p+Jcw/EZVRTZkbyK6JmODzXtaxlPknwtqgbncwOSgRRkNfP3tJFiVi
5aCbMOX7UmkiTPuXXjpMTklE3399HDpeY/6JwOkhg+zImYl4ZBf09Rg5OxEb
JxdWt+L72NxEDL5Q9nweuSARi8rWf5OTC5v11g/rd5Ncmoivh66YKZYx/0T0
GHdDPp1ckYhXZ88/XkeuTsRk35njt5BrE6HQU3XDBXJ9Ig78nPC3mtyYiJgR
+9b9JSvIMGFFxsteN5h/M78LtNMiK8sw68fBFxPIqjLUWT50m05Wl6FT5oXv
IGvLMFFzXtxMsq4M9vUiNX2yngw+j9fnjyJDhsPeN5cOIBvLYPXn0K8OZAsZ
HMMuZ33k97WS4XXWbcubZFsZSirzux8ku8qwYEjgPRHZS4ZHI6bsWkQOksFz
nGnwILJIhtgOfW3e8PpLZfD9N3HhQXKKDK4vLJe4ktNlePPJco0GOVOG/QXj
Uu+35C/D5OGKt6PJuTJcdeuvPYZcIMPnijtb7vH+KpRBWndS259cKoOzXuBD
ZXK5DNCrzt7P+7VChqwVrzL0ydUyXHyy7UIx7/9aGVaenNppAblehodxg2Lv
8PlplEEtqGj8QrJCEm4NvdbnOp8/xSRMln6ZCLJyEvzva6Tm8vlVTUKhs42u
Glk9CR7byntJWp7/JLicuWT4ivODbhLWVWReNCDrNf/90cbUbZxPkIQOkuCz
dZx/jJu57VeDmWSLJLwcsmJEAucrqyRs+H0+pJzzm20S+m5fNqkH2TUJdg3+
Dgs4H3olQXVXagcp58ugJFwtN9A+y/lVlITc7tOvv+f8K01C59FW33uTU5Kw
uFViznTO1+lJiDP78Gc15/PMJBxJznsZ3jL/N/u/O37dZq4PuUnYHfNq+2Gu
HwVJWD7XOuQc15fCJGw8Zdr5Gtef0iSssYxdfofrU3kSzKb+dX3A9asiCTO+
XJj1gOtbdRIcjP+8u831r7Y5H5V/7le5PtYn4XrHMWVnuX42JmF7QO+eh7m+
Ksjxsd9y481cfxXlcH9f4Nvy+wtlOeY/7rXD7gDzl6Nyj2sZuJ6rN/99YllH
Na732nI4jfBf1cD9ga4coROP3Srm/kFPDhO9BtdN3F9Ajnf258ba8/cbxnI8
NDoxTof7EQs5ZmRs8fvE/YuVHFMUZyvkcH9jK0fq1ewqd/6+w1UO8foHqkO5
H/KS48+E7ycruX8KkuP7unlXZFuYvxwTtoyZN5X7LakcvX37W7zm/ixFjm73
tlcn8fcg6XK8d1/Zbhz3c5lyPA/rU3qnZf8nx96NB8Z5rWf+8ubzc+sFStwv
Fsixq2641i7uLwvl8DHHlQn8/UipHHmrw8Zf4f60XI52rUaGLeLvSSrkmHvo
2IEn3N9Wy2GgLS92iGP+ciw1mv/0DffH9XJ8WL+h0TWa+cuh1KQ5+A331wrJ
CNhX6mIfxfyToeHrfruS+3PlZCjcb+duEcH8k7HKZ9/My9zfqyfjaIXnivGh
zD8ZySPTizODmX8y/B65JnfieUEvGV8wo9A3gPkno8I1zvFR8/nj/wANALv5

           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1.1714457962668252`, 
        3.3246838585244536`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-1.1714457962668252`, 
        3.3246838585244536`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"(UAV thrust - UAV weight)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(3\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6985508860612507`*^9, 3.698550937005148*^9, 3.698551310865361*^9, 
   3.69855252877886*^9, 3.6985607992224083`*^9, 3.7098120102199163`*^9, 
   3.709812545526105*^9, 3.7098127709698057`*^9, 3.7098128899612722`*^9, 
   3.7098130833818398`*^9, 3.709814637333356*^9, 3.709815070848659*^9, 
   3.709816732377987*^9, 3.709816928592106*^9, 3.709868588124206*^9, 
   3.7098736135156593`*^9, 3.7098748776027718`*^9, 3.709876309578061*^9, 
   3.710161064855397*^9, 3.710416427378765*^9, 3.7104175232696533`*^9, 
   3.714323152965292*^9, {3.714323203700494*^9, 3.714323229798435*^9}, 
   3.7143779897227*^9, 3.715627097987226*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_manipulator/sim_input_forces.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7101607845755167`*^9, {3.714322971905999*^9, 3.714322973841704*^9}, {
   3.714377851000292*^9, 3.714377854637126*^9}}]
}, Open  ]]
},
WindowSize->{1313, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 213, 3, 45, "Subsection"],
Cell[CellGroupData[{
Cell[796, 27, 135, 1, 55, "Chapter"],
Cell[934, 30, 682, 14, 34, "Input"],
Cell[CellGroupData[{
Cell[1641, 48, 136, 1, 45, "Subsection"],
Cell[1780, 51, 1809, 52, 147, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3638, 109, 216, 4, 66, "Chapter"],
Cell[CellGroupData[{
Cell[3879, 117, 150, 2, 45, "Subsection"],
Cell[4032, 121, 1482, 41, 171, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5563, 168, 174, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[5762, 174, 126, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[5913, 179, 4541, 122, 532, "Input"],
Cell[10457, 303, 744, 16, 34, "Output"],
Cell[11204, 321, 514, 9, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11779, 337, 233, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[12037, 344, 162, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[12224, 350, 3738, 100, 534, "Input"],
Cell[15965, 452, 589, 12, 34, "Output"],
Cell[16557, 466, 410, 7, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17028, 480, 100, 1, 66, "Chapter"],
Cell[17131, 483, 810, 16, 57, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17978, 504, 183, 2, 66, "Chapter"],
Cell[18164, 508, 604, 18, 124, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18805, 531, 180, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[19010, 537, 1659, 36, 192, "Input"],
Cell[20672, 575, 1333, 21, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22054, 602, 109, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[22188, 607, 4424, 134, 194, "Input"],
Cell[26615, 743, 172, 4, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26836, 753, 145, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[27006, 758, 4727, 117, 422, "Input"],
Cell[31736, 877, 1484, 22, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33269, 905, 96, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[33390, 910, 7249, 156, 694, "Input"],
Cell[CellGroupData[{
Cell[40664, 1070, 161, 2, 24, "Print"],
Cell[40828, 1074, 162, 2, 24, "Print"],
Cell[40993, 1078, 162, 2, 24, "Print"],
Cell[41158, 1082, 162, 2, 24, "Print"],
Cell[41323, 1086, 163, 2, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41547, 1095, 94, 1, 66, "Chapter"],
Cell[41644, 1098, 935, 20, 57, "Input"],
Cell[CellGroupData[{
Cell[42604, 1122, 121, 2, 45, "Subsection"],
Cell[42728, 1126, 1526, 36, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44291, 1167, 94, 1, 45, "Subsection"],
Cell[44388, 1170, 1500, 38, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45925, 1213, 123, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[46073, 1218, 1149, 34, 102, "Input"],
Cell[47225, 1254, 257, 4, 32, "Output"]
}, Open  ]],
Cell[47497, 1261, 797, 20, 57, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48343, 1287, 146, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[48514, 1293, 2661, 70, 341, "Input"],
Cell[51178, 1365, 40643, 729, 326, "Output"]
}, Open  ]],
Cell[91836, 2097, 423, 10, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92296, 2112, 99, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[92420, 2117, 3688, 83, 349, "Input"],
Cell[96111, 2202, 54108, 955, 278, "Output"]
}, Open  ]],
Cell[150234, 3160, 274, 8, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150545, 3173, 148, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[150718, 3179, 3756, 85, 349, "Input"],
Cell[154477, 3266, 54490, 967, 278, "Output"]
}, Open  ]],
Cell[208982, 4236, 350, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209369, 4250, 253, 5, 66, "Chapter"],
Cell[CellGroupData[{
Cell[209647, 4259, 1696, 41, 282, "Input"],
Cell[211346, 4302, 17910, 351, 278, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229305, 4659, 101, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[229431, 4664, 3426, 81, 536, "Input"],
Cell[232860, 4747, 38200, 685, 301, "Output"]
}, Open  ]],
Cell[271075, 5435, 352, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271464, 5449, 95, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[271584, 5454, 1311, 34, 259, "Input"],
Cell[272898, 5490, 22787, 414, 296, "Output"]
}, Open  ]],
Cell[295700, 5907, 374, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296111, 5921, 144, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[296280, 5927, 2535, 52, 305, "Input"],
Cell[298818, 5981, 56780, 1004, 278, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355647, 6991, 177, 2, 66, "Chapter"],
Cell[355827, 6995, 376, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[356228, 7008, 2455, 50, 282, "Input"],
Cell[358686, 7060, 40898, 729, 278, "Output"]
}, Open  ]],
Cell[399599, 7792, 337, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399973, 7806, 212, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[400210, 7813, 2866, 56, 351, "Input"],
Cell[403079, 7871, 91181, 1600, 278, "Output"]
}, Open  ]],
Cell[494275, 9474, 422, 10, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494734, 9489, 143, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[494902, 9495, 2590, 53, 305, "Input"],
Cell[497495, 9550, 57229, 1013, 285, "Output"]
}, Open  ]],
Cell[554739, 10566, 269, 8, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555045, 10579, 203, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[555273, 10586, 3220, 69, 351, "Input"],
Cell[558496, 10657, 74021, 1305, 285, "Output"]
}, Open  ]],
Cell[632532, 11965, 373, 10, 91, "Input"]
}, Open  ]]
}
]
*)

