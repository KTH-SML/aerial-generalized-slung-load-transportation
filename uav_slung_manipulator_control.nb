(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    535878,      10451]
NotebookOptionsPosition[    530325,      10258]
NotebookOutlinePosition[    530665,      10273]
CellTagsIndexPosition[    530622,      10270]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["check section \[OpenCurlyDoubleQuote]UAV-Slung-Manipulator\
\[CloseCurlyDoubleQuote] in companion pdf", "Subsection",
 CellChangeTimes->{{3.7156051387723627`*^9, 3.715605160488038*^9}, 
   3.7156144928722754`*^9, {3.715614689808118*^9, 3.715614693652258*^9}}],

Cell[CellGroupData[{

Cell["Import vector field and transformed vector field", "Chapter",
 CellChangeTimes->{{3.715614698437812*^9, 3.7156147098862963`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookEvaluate", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<uav_slung_manipulator_transformation.nb\>\""}], "}"}], "]"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.71005535745792*^9, 3.710055358482471*^9}, {
   3.710055419189004*^9, 3.710055459554541*^9}, {3.7100555370149403`*^9, 
   3.710055548671946*^9}, 3.710055638835634*^9, 3.710057803745392*^9, {
   3.7100599861952877`*^9, 3.710059990024391*^9}, 3.7101574160581427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Get control for thrust propelled system cascaded after unit vector double \
integrator (two subsystems, but they are not decoupled! \[OpenCurlyQuote]one \
is after the other\[CloseCurlyQuote] in a cascade structure)\
\>", "Chapter",
 CellChangeTimes->{{3.708311346874426*^9, 3.708311364693557*^9}, {
  3.70988500359629*^9, 3.709885014413822*^9}, {3.709885287657872*^9, 
  3.709885315964107*^9}, {3.7100557128391867`*^9, 3.710055733066626*^9}, {
  3.71561527488142*^9, 3.715615294199911*^9}, {3.715615990396607*^9, 
  3.715615995289324*^9}}],

Cell[CellGroupData[{

Cell["defined some useful variables (these are just dummy names)", \
"Subsection",
 CellChangeTimes->{{3.7156147669263067`*^9, 3.715614781797352*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"{", 
    RowBox[{
    "p1", ",", "p2", ",", "p3", ",", "v1", ",", "v2", ",", "v3", ",", "r1", 
     ",", "r2", ",", "r3", ",", "\[Omega]1", ",", "\[Omega]2", ",", 
     "\[Omega]3", ",", "n1", ",", "n2", ",", "n3", ",", "\[CapitalOmega]1", 
     ",", "\[CapitalOmega]2", ",", "\[CapitalOmega]3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ytp", "=", 
   RowBox[{"y", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"ytpbar", "=", 
    RowBox[{"y", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "15"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yRandom", "=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"xRandom", "[", "]"}], "]"}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ytpRandom", "=", 
   RowBox[{"yRandom", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ytpbarRandom", "=", 
   RowBox[{"yRandom", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "15"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.710056110964754*^9, 3.710056282460198*^9}, {
  3.710057700594672*^9, 3.710057827288042*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Thrust propelled system", "Chapter",
 CellChangeTimes->{{3.708312587634118*^9, 3.708312589827909*^9}, {
   3.708325044271536*^9, 3.708325058814329*^9}, 3.708338734787917*^9, 
   3.7100578037556562`*^9, {3.7100587170208197`*^9, 3.71005872087737*^9}, 
   3.7100640676530743`*^9, {3.715615326141136*^9, 3.7156153362644997`*^9}}],

Cell[CellGroupData[{

Cell["Controller for thrust propelled system", "Subsection",
 CellChangeTimes->{{3.715614825933526*^9, 3.715614838003574*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<controllers_for_transformed_systems/controller_thrust_propelled_\
system.m\>\""}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "gains", " ", "of", " ", "torque", " ", "cascaded", " ", "controller"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BoundedDoubleIntegratorGains", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kp", "\[Rule]", " ", "1.5"}], ",", 
     RowBox[{"kv", "\[Rule]", " ", 
      RowBox[{
       SqrtBox["2"], 
       SqrtBox["1.5"]}]}], ",", 
     RowBox[{"\[Sigma]p", "\[Rule]", " ", "0.4"}], ",", 
     RowBox[{"\[Sigma]v", "\[Rule]", " ", "0.4"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttitudeControllerGains", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kp", "\[Rule]", " ", "4"}], ",", 
      RowBox[{"kd", "\[Rule]", " ", 
       RowBox[{
        SqrtBox["2"], 
        SqrtBox["4"]}]}], ",", 
      RowBox[{"kVp", "\[Rule]", " ", "500"}], ",", 
      RowBox[{"kVd", "\[Rule]", " ", "1000"}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gravity", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"pd", "''"}], "[", "t", "]"}], "+", 
     RowBox[{"g", " ", "e3"}]}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ControllerSubsystem1", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",",
         "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
        ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"ThrustPropelledController", "[", "\[IndentingNewLine]", 
     RowBox[{
     "t", ",", "ytp", ",", "gravity", ",", "\[IndentingNewLine]", 
      "BoundedDoubleIntegratorGains", ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<PD\>\"", " ", ",", "AttitudeControllerGains", ",", 
        RowBox[{"{", "\"\<Precise\>\"", "}"}], ",", "Null"}], "}"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"{", 
       RowBox[{"\"\<BackStepping\>\"", ",", "AttitudeControllerGains", ",", 
        RowBox[{"{", "\"\<Precise\>\"", "}"}], ",", "\"\<on\>\""}], "}"}], 
      "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"uclTPC", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"ControllerSubsystem1", "[", 
     RowBox[{"t", ",", "ytp"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V1", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"ControllerSubsystem1", "[", 
     RowBox[{"t", ",", "ytp"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"W1", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"ControllerSubsystem1", "[", 
     RowBox[{"t", ",", "ytp"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"X1", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",",
         "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
        ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{"ControllerSubsystem1", "[", 
      RowBox[{"t", ",", "ytp"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"uclTPC", "[", 
   RowBox[{"0.1", ",", "ytpRandom"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.706960535823914*^9, 3.70771933371178*^9, {3.7077196538166447`*^9, 
   3.707719654139464*^9}, {3.708312614777473*^9, 3.708312621987768*^9}, {
   3.7083128127573338`*^9, 3.708312845064836*^9}, {3.708312952303088*^9, 
   3.708313135282344*^9}, {3.708313780867309*^9, 3.708313789055163*^9}, {
   3.7083194627228603`*^9, 3.708319547261915*^9}, {3.708324708830957*^9, 
   3.7083247319565783`*^9}, {3.7083316442797813`*^9, 3.708331648869483*^9}, 
   3.708331933354314*^9, {3.7083350797602797`*^9, 3.70833508026873*^9}, {
   3.708335119543836*^9, 3.708335145667295*^9}, 3.7083396715769787`*^9, {
   3.708345621681987*^9, 3.708345708912874*^9}, {3.708347057187284*^9, 
   3.70834707046948*^9}, {3.7098852533424*^9, 3.70988528215731*^9}, {
   3.709885333400824*^9, 3.7098853683996983`*^9}, 3.709885407535574*^9, {
   3.709886658112561*^9, 3.7098866592111177`*^9}, {3.709893021647485*^9, 
   3.7098930245946217`*^9}, {3.709897159242462*^9, 3.709897164092486*^9}, {
   3.709899170787722*^9, 3.709899183978608*^9}, {3.709903129599794*^9, 
   3.709903151648492*^9}, {3.709903625062389*^9, 3.709903645644733*^9}, {
   3.709904233696054*^9, 3.709904240051404*^9}, {3.709905437493671*^9, 
   3.709905439912066*^9}, {3.709906341551845*^9, 3.709906348626623*^9}, {
   3.7099316999269648`*^9, 3.709931702360476*^9}, {3.710055976623721*^9, 
   3.710055982697406*^9}, {3.7100560895699*^9, 3.7100560942693443`*^9}, {
   3.7100562966016083`*^9, 3.710056371204446*^9}, {3.710056432951701*^9, 
   3.710056432968585*^9}, {3.710057700604195*^9, 3.710057722516843*^9}, {
   3.7100577635871153`*^9, 3.710057869870861*^9}, 3.710063890014265*^9, {
   3.710064015362637*^9, 3.710064081665078*^9}, {3.7100641249803753`*^9, 
   3.7100641386166162`*^9}, {3.710064422279312*^9, 3.710064612685107*^9}, {
   3.7100647065662317`*^9, 3.710064844791748*^9}, {3.710064946594078*^9, 
   3.710064957442176*^9}, {3.710065928401539*^9, 3.71006592998921*^9}, {
   3.710065962749687*^9, 3.7100659664914618`*^9}, {3.71014232416595*^9, 
   3.710142324463497*^9}, {3.7101636132410173`*^9, 3.710163635011403*^9}, {
   3.7101636715940733`*^9, 3.710163680164415*^9}, {3.714323504520761*^9, 
   3.714323517186714*^9}, {3.71432442613273*^9, 3.714324430709474*^9}, {
   3.715605395109861*^9, 3.715605396140023*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.008`", ",", 
   RowBox[{"{", 
    RowBox[{"9.277696402854577`", ",", 
     RowBox[{"{", 
      RowBox[{"0.3535887974861151`", ",", 
       RowBox[{"-", "3.0984993381559334`"}], ",", 
       RowBox[{"-", "0.09235411222192887`"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.710142332070299*^9, 3.7101426806548033`*^9, 3.710142792117113*^9, {
   3.7101636667316017`*^9, 3.710163681031241*^9}, 3.710163775723773*^9, 
   3.710164331578643*^9, 3.7101644441662197`*^9, 3.710164768704249*^9, 
   3.714323610738845*^9, 3.714324190934454*^9, 3.7143245284934998`*^9, 
   3.714374163403863*^9, 3.715331303150487*^9, 3.71562726017103*^9, 
   3.7156274734728727`*^9, 3.7156617427257347`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controller if UAV were fully actuated", "Chapter",
 CellChangeTimes->{{3.7156153653683043`*^9, 3.715615374973854*^9}, {
  3.715615673175714*^9, 3.715615674300829*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"U3Dcl", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"U3Dcly", "[", "\[IndentingNewLine]", 
     RowBox[{"ytp", ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"uclTPC", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], "]"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Steps necessary for preforming (two) backstepping steps (for unit vector \
double integrator, we follow a backstepping procedure)\
\>", "Chapter",
 CellChangeTimes->{{3.715663088183405*^9, 3.715663144702217*^9}}],

Cell[CellGroupData[{

Cell["Derivatives of U3Dcl (necessary for feedforward term)", "Section",
 CellChangeTimes->{{3.715615436523675*^9, 3.715615474730898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"D1U3Dcl", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", "t"}], "]"}], "&"}], "]"}], 
    "[", "U3Dcl", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D2U3Dcl", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",",
         "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
        ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"t", ",", "ytp"}], "]"}], ",", 
         RowBox[{"{", "ytp", "}"}]}], "]"}], "&"}], "]"}], "[", "U3Dcl", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D1D1U3Dcl", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", "t"}], "]"}], "&"}], "]"}], 
    "[", "D1U3Dcl", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D2D1U3Dcl", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",",
         "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
        ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"t", ",", "ytp"}], "]"}], ",", 
         RowBox[{"{", "ytp", "}"}]}], "]"}], "&"}], "]"}], "[", "D1U3Dcl", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D1D2U3Dcl", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", "t"}], "]"}], "&"}], "]"}], 
    "[", "D2U3Dcl", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D2D2U3Dcl", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",",
         "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
        ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"t", ",", "ytp"}], "]"}], ",", 
         RowBox[{"{", "ytp", "}"}]}], "]"}], "&"}], "]"}], "[", "D2U3Dcl", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"U3Dcl", "[", 
   RowBox[{"0.1", ",", "ytpRandom"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.708330884229403*^9, 3.7083309258062572`*^9}, {
   3.708332188832412*^9, 3.708332191441719*^9}, {3.708333227582852*^9, 
   3.708333234126295*^9}, {3.708347129969941*^9, 3.708347130172748*^9}, {
   3.709885447162468*^9, 3.709885480274324*^9}, {3.709886578109284*^9, 
   3.709886597199664*^9}, 3.70989308517581*^9, {3.70996368985506*^9, 
   3.709963693725318*^9}, {3.710056474669797*^9, 3.71005649038284*^9}, {
   3.7100577006228123`*^9, 3.7100577225245113`*^9}, {3.710057763606395*^9, 
   3.710057808109684*^9}, 3.710057869880158*^9, {3.710058223641481*^9, 
   3.710058224844471*^9}, {3.710058682202898*^9, 3.71005868241971*^9}, {
   3.710058942310224*^9, 3.710058948227538*^9}, {3.710060079281756*^9, 
   3.710060079287161*^9}, {3.710142344590797*^9, 3.7101423545056562`*^9}, 
   3.7156153791761827`*^9, {3.715615422441074*^9, 3.71561542264233*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.016`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.128190727310244`"}], ",", 
     RowBox[{"-", "0.5861876324001054`"}], ",", "15.347301320122014`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.710060717507163*^9, 3.7100649756296473`*^9, 
  3.710065830873537*^9, 3.710066172891369*^9, 3.7100679849433947`*^9, 
  3.7100876559298573`*^9, 3.710087746060625*^9, 3.710087835750161*^9, 
  3.7101377386502323`*^9, 3.7101423465920877`*^9, 3.710142806261654*^9, 
  3.7101637015928392`*^9, 3.710163789335163*^9, 3.710164346235424*^9, 
  3.710164456815724*^9, 3.71016478270443*^9, 3.7143236225209217`*^9, 
  3.714324203311967*^9, 3.714324541341024*^9, 3.714374175611084*^9, 
  3.715331315815439*^9, 3.7156272729208937`*^9, 3.715627485114278*^9, 
  3.715661754596033*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivatives of V1 (necessary for backstepping term)", "Section",
 CellChangeTimes->{{3.715615436523675*^9, 3.7156154936970043`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"D1V1", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", "t"}], "]"}], "&"}], "]"}], 
    "[", "V1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D2V1", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",",
         "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
        ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"t", ",", "ytp"}], "]"}], ",", 
         RowBox[{"{", "ytp", "}"}]}], "]"}], "&"}], "]"}], "[", "V1", "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D1D1V1", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", "t"}], "]"}], "&"}], "]"}], 
    "[", "D1V1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D2D1V1", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", 
        RowBox[{"{", "ytp", "}"}]}], "]"}], "&"}], "]"}], "[", "D1V1", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D1D2V1", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", "t"}], "]"}], "&"}], "]"}], 
    "[", "D2V1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D2D2V1", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", "ytp"}], "]"}], ",", 
        RowBox[{"{", "ytp", "}"}]}], "]"}], "&"}], "]"}], "[", "D2V1", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.70695792939859*^9, 3.706958092441814*^9}, {
   3.706958124449336*^9, 3.706958196494062*^9}, {3.706958242642218*^9, 
   3.706958252767621*^9}, {3.708337666821884*^9, 3.708337667832576*^9}, {
   3.7083377012956944`*^9, 3.708337703731061*^9}, {3.709885495410287*^9, 
   3.7098855378822937`*^9}, {3.709885583597137*^9, 3.709885583648106*^9}, {
   3.709886678137713*^9, 3.709886685802804*^9}, {3.710056433006752*^9, 
   3.7100564330105877`*^9}, {3.7100564989329777`*^9, 
   3.7100565168499317`*^9}, {3.7100577006345367`*^9, 
   3.7100577225355673`*^9}, {3.710057763613675*^9, 3.7100578080389357`*^9}, {
   3.710057869890114*^9, 3.710057869894766*^9}, {3.710142362968005*^9, 
   3.710142368615431*^9}, 3.715615497100628*^9, 3.715615569200371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Vector field if UAV are not fully actuated (which is the case), plus its \
derivatives (necessary to compute feedforward terms)\
\>", "Section",
 CellChangeTimes->{{3.7156155039167337`*^9, 3.71561555067937*^9}, 
   3.7156156673101587`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XTPComplete", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_", ",", "n1_", ",", "n2_", ",", "n3_"}], "}"}]}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"uclTPC", "[", 
          RowBox[{"t", ",", "ytp"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], 
        RowBox[{"{", 
         RowBox[{"r1", ",", "r2", ",", "r3"}], "}"}]}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"g", " ", "e3"}], "+", 
         RowBox[{
          RowBox[{"pd", "''"}], "[", "t", "]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"{", 
         RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
        "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"r1", ",", "r2", ",", "r3"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"m", " ", "+", " ", "M"}], ")"}], 
          RowBox[{
           RowBox[{"uclTPC", "[", 
            RowBox[{"t", ",", "ytp"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          FractionBox["1", 
           RowBox[{"1", "+", 
            RowBox[{
             FractionBox["jxy", 
              SuperscriptBox["l", "2"]], 
             FractionBox[
              RowBox[{"m", "+", "M"}], 
              RowBox[{"m", " ", "M"}]]}]}]], 
          FractionBox["1", 
           RowBox[{"l", " ", "M"}]]}], "-", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
          ".", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], 
           "}"}]}]}], ")"}], 
       FractionBox["1", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}], ".", 
         RowBox[{"{", 
          RowBox[{"r1", ",", "r2", ",", "r3"}], "}"}]}]], 
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"{", 
          RowBox[{"r1", ",", "r2", ",", "r3"}], "}"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}]}]}], 
     "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D1XTPComplete", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_", ",", "n1_", ",", "n2_", ",", "n3_"}], "}"}]}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"ytp", ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "&"}], "]"}], "[", "XTPComplete", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D2XTPComplete", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_", ",", "n1_", ",", "n2_", ",", "n3_"}], "}"}]}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"ytp", ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Join", "[", 
          RowBox[{"ytp", ",", 
           RowBox[{"{", 
            RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}], "}"}]}], 
       "]"}], "&"}], "]"}], "[", "XTPComplete", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.710056675774544*^9, 3.710056715745891*^9}, {
   3.710057700642304*^9, 3.710057722539542*^9}, {3.710057763619389*^9, 
   3.7100578080446663`*^9}, {3.7100579008119183`*^9, 3.710057961594349*^9}, 
   3.715615565408841*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "error", " ", "in", " ", "vector", " ", "field", " ", "because", " ", 
       "UAV", " ", "is", " ", "not", " ", "fully", " ", "actuated"}], ")"}], 
     ".", " ", 
     SubscriptBox["D", "2"]}], 
    SubscriptBox["V", "1"]}], TraditionalForm]]],
 "(t,",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "tp"], TraditionalForm]]],
 ") "
}], "Section",
 CellChangeTimes->{{3.7156155735207148`*^9, 3.715615693671434*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DVEX", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_", ",", "n1_", ",", "n2_", ",", "n3_"}], "}"}]}], 
    "]"}], "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D2V1", "[", 
       RowBox[{"t", ",", "ytp"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"10", ";;", "12"}], "]"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["jxy", 
            SuperscriptBox["l", "2"]], 
           FractionBox[
            RowBox[{"m", "+", "M"}], 
            RowBox[{"m", " ", "M"}]]}]}]]}], 
       FractionBox["1", 
        RowBox[{"l", " ", "M"}]], 
       FractionBox["1", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}], ".", 
         RowBox[{"{", 
          RowBox[{"r1", ",", "r2", ",", "r3"}], "}"}]}]], 
       RowBox[{"OP", "[", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "r2", ",", "r3"}], "}"}], "]"}]}], ")"}]}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D1DVEX", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_", ",", "n1_", ",", "n2_", ",", "n3_"}], "}"}]}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"ytp", ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}]}], "]"}], 
        ",", "t"}], "]"}], "&"}], "]"}], "[", "DVEX", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D2DVEX", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{
      "p1_", ",", "p2_", ",", "p3_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
       "r1_", ",", "r2_", ",", "r3_", ",", "\[Omega]1_", ",", "\[Omega]2_", 
       ",", "\[Omega]3_", ",", "n1_", ",", "n2_", ",", "n3_"}], "}"}]}], 
    "]"}], "=", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"t", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"ytp", ",", 
            RowBox[{"{", 
             RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Join", "[", 
          RowBox[{"ytp", ",", 
           RowBox[{"{", 
            RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}], "]"}], "}"}]}], 
       "]"}], "&"}], "]"}], "[", "DVEX", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.709965015697315*^9, 3.709965022101976*^9}, {
  3.709965068704729*^9, 3.709965073904929*^9}, {3.7099651113519382`*^9, 
  3.709965381742259*^9}, {3.709965416080571*^9, 3.709965451640592*^9}, {
  3.709965483130177*^9, 3.709965492924549*^9}, {3.710056516883499*^9, 
  3.710056516886858*^9}, {3.710056675790962*^9, 3.710056675792774*^9}, {
  3.7100577006541033`*^9, 3.71005772254802*^9}, {3.710057763634581*^9, 
  3.710057808062405*^9}, {3.710057900824522*^9, 3.7100579008268747`*^9}, {
  3.710058103155801*^9, 3.710058191397607*^9}, {3.710064993254727*^9, 
  3.710065005680015*^9}, {3.710142429852008*^9, 3.710142430614102*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Perform two backstepping steps (which requires the derivatives defined above)\
\
\>", "Chapter",
 CellChangeTimes->{{3.709925873759316*^9, 3.7099260496981564`*^9}, {
   3.709926096462928*^9, 3.709926181966364*^9}, {3.70992621997698*^9, 
   3.709926393546783*^9}, {3.709926438815227*^9, 3.709926470927396*^9}, {
   3.709926598622265*^9, 3.709926598919483*^9}, {3.7099266315392313`*^9, 
   3.7099266855482197`*^9}, {3.709926743426301*^9, 3.709926797985737*^9}, {
   3.7099268489197474`*^9, 3.709926849858898*^9}, {3.7099268922898407`*^9, 
   3.709926895750496*^9}, {3.7099269366012497`*^9, 3.709926998804387*^9}, {
   3.7099270417772703`*^9, 3.709927041955525*^9}, 3.7099271450227613`*^9, {
   3.7099286540937643`*^9, 3.709928691796865*^9}, {3.709928723730587*^9, 
   3.709928727029152*^9}, 3.7099288467523193`*^9, 3.709928931523334*^9, {
   3.709928990475029*^9, 3.709929019855221*^9}, {3.709929086505714*^9, 
   3.709929192926777*^9}, {3.709929508351021*^9, 3.709929524062427*^9}, {
   3.7099295561382513`*^9, 3.709929662534936*^9}, 3.709929696838866*^9, {
   3.709929751510338*^9, 3.709929828820016*^9}, {3.709930022490952*^9, 
   3.709930080706003*^9}, {3.7099301554711847`*^9, 3.709930169140646*^9}, {
   3.709930328341324*^9, 3.709930345147195*^9}, {3.709930412404434*^9, 
   3.7099304321436653`*^9}, {3.709964188208918*^9, 3.709964191322939*^9}, 
   3.7099661284616947`*^9, {3.7099662395577097`*^9, 3.709966290774049*^9}, {
   3.709966327739395*^9, 3.709966344125987*^9}, 3.709966407715941*^9, {
   3.709966473818206*^9, 3.709966501846027*^9}, {3.7099665714930162`*^9, 
   3.709966636691571*^9}, {3.709966684619117*^9, 3.709966713978937*^9}, {
   3.7099667522585506`*^9, 3.7099667663367453`*^9}, {3.709966805876697*^9, 
   3.709966827884774*^9}, {3.709971533851809*^9, 3.70997167936799*^9}, {
   3.709972020314563*^9, 3.709972103985478*^9}, {3.7099722149596167`*^9, 
   3.709972217664301*^9}, {3.7099723146075573`*^9, 3.709972314764083*^9}, {
   3.709972354977539*^9, 3.709972355566905*^9}, {3.7099724827759542`*^9, 
   3.709972507129705*^9}, {3.709972557492487*^9, 3.709972558159457*^9}, {
   3.709972611589573*^9, 3.7099726196399508`*^9}, {3.7100564747415524`*^9, 
   3.710056474750683*^9}, 3.7100566758113613`*^9, {3.710057700675436*^9, 
   3.710057808082594*^9}, 3.710057900841982*^9, 3.71005907281735*^9, {
   3.710059144724288*^9, 3.710059198492785*^9}, 3.710059336272272*^9, {
   3.710059497119067*^9, 3.710059522444861*^9}, {3.710065023748745*^9, 
   3.710065033581674*^9}, 3.7100660023852043`*^9, {3.710066199321752*^9, 
   3.7100662123945627`*^9}, {3.710066624699567*^9, 3.710066633500799*^9}, {
   3.710066728906558*^9, 3.710066754700082*^9}, {3.710067041009194*^9, 
   3.710067116700877*^9}, {3.710067156258753*^9, 3.7100671727039623`*^9}, {
   3.710067402914694*^9, 3.7100674166382723`*^9}, {3.710067631753484*^9, 
   3.710067823061468*^9}, {3.710067889070483*^9, 3.71006792916485*^9}, {
   3.710068050084324*^9, 3.710068055102255*^9}, 3.7100863618527737`*^9, 
   3.710087785766568*^9, {3.7100878822534447`*^9, 3.710087892734107*^9}, {
   3.710089511700597*^9, 3.7100895533815517`*^9}, {3.710090002997528*^9, 
   3.710090009210594*^9}, {3.71013970195466*^9, 3.710139730872705*^9}, {
   3.710139861288447*^9, 3.710139887580842*^9}, {3.710139917994309*^9, 
   3.7101399189908037`*^9}, {3.71013997330683*^9, 3.7101399770178747`*^9}, {
   3.710140841052001*^9, 3.71014084594064*^9}, {3.7101413208698606`*^9, 
   3.7101413827385263`*^9}, {3.710141424947979*^9, 3.710141439666648*^9}, {
   3.710141569184204*^9, 3.710141624345118*^9}, {3.7101425308989477`*^9, 
   3.7101425582015753`*^9}, {3.710142637758362*^9, 3.710142646945826*^9}, {
   3.715615706788912*^9, 3.71561574130235*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"yRandom", "=", 
   RowBox[{
    RowBox[{"yplusplusstar", "[", "0.1", "]"}], "/.", "PhysicalConstants"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yRandom", "=", 
    RowBox[{
     RowBox[{"yplusplusstar", "[", "20", "]"}], "/.", "PhysicalConstants"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Get", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<controllers_for_transformed_systems/cascaded_attitude_control.m\>\
\""}], "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "gains", " ", "of", " ", "torque", " ", "cascaded", " ", "controller"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttitudeControllerGains", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kp", "\[Rule]", " ", "15"}], ",", 
      RowBox[{"kd", "\[Rule]", " ", 
       RowBox[{"0.8", 
        SqrtBox["15"]}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ControllerSubsystem2", "[", 
     RowBox[{"t_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"TorqueAttitudeControlPD", "[", "\[IndentingNewLine]", 
     RowBox[{"t", ",", 
      RowBox[{"y", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "12"}], "]"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"[", 
        RowBox[{"13", ";;", "18"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{
       "U3Dcl", ",", "D1U3Dcl", ",", "D2U3Dcl", ",", "D1D1U3Dcl", ",", 
        "D2D1U3Dcl", ",", "D1D2U3Dcl", ",", "D2D2U3Dcl"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"XTPComplete", ",", "D1XTPComplete", ",", "D2XTPComplete"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"V1", ",", "W1", ",", "DVEX"}], "}"}], ",", 
      "\[IndentingNewLine]", "AttitudeControllerGains", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<NumericalSloppyAlternative\>\"", ",", "0.001"}], "}"}], 
        ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<Numerical\>\"", ",", "0.001"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", "\"\<Precise\>\"", "}"}], ","}], "*)"}], 
      "\[IndentingNewLine]", "\"\<off\>\""}], "\n", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]cl", "[", 
    RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ControllerSubsystem2", "[", 
     RowBox[{"t", ",", "x3"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V2", "[", 
    RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ControllerSubsystem2", "[", 
     RowBox[{"t", ",", "x3"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"W2", "[", 
    RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ControllerSubsystem2", "[", 
     RowBox[{"t", ",", "x3"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"X2", "[", 
     RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"ControllerSubsystem2", "[", 
      RowBox[{"t", ",", "x3"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "gains", " ", "of", " ", "torque", " ", "cascaded", " ", "controller"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AttitudeControllerGains", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"kp", "\[Rule]", " ", "40"}], ",", 
        RowBox[{"kd", "\[Rule]", " ", 
         RowBox[{"0.8", 
          SqrtBox["40"]}]}], ",", 
        RowBox[{"kVp", "\[Rule]", " ", "2000"}], ",", 
        RowBox[{"kVd", "\[Rule]", " ", "4000"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ControllerSubsystem2", "[", 
       RowBox[{"t_", ",", "y_"}], "]"}], ":=", 
      RowBox[{"TorqueBacksteppingController", "[", "\[IndentingNewLine]", 
       RowBox[{"t", ",", 
        RowBox[{"y", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "12"}], "]"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"[", 
          RowBox[{"13", ";;", "18"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "U3Dcl", ",", "D1U3Dcl", ",", "D2U3Dcl", ",", "D1D1U3Dcl", ",", 
          "D2D1U3Dcl", ",", "D1D2U3Dcl", ",", "D2D2U3Dcl"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"XTPComplete", ",", "D1XTPComplete", ",", "D2XTPComplete"}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"V1", ",", "W1", ",", "DVEX", ",", "D1DVEX", ",", "D2DVEX"}],
          "}"}], ",", "\[IndentingNewLine]", "AttitudeControllerGains", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"listmethodsDerivatives", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\"\<on\>\""}], "\n", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Tau]cl", "[", 
       RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"ControllerSubsystem2", "[", 
         RowBox[{"t", ",", "x3"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"V2", "[", 
       RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"ControllerSubsystem2", "[", 
         RowBox[{"t", ",", "x3"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"W2", "[", 
       RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"ControllerSubsystem2", "[", 
         RowBox[{"t", ",", "x3"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"X2", "[", 
       RowBox[{"t_", ",", "x3_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"ControllerSubsystem2", "[", 
         RowBox[{"t", ",", "x3"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", "]"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.710141656891919*^9, 3.710141675454648*^9}, {
   3.710141709810589*^9, 3.7101417108664713`*^9}, {3.710142583561533*^9, 
   3.710142648519474*^9}, 3.710163725047859*^9, 3.710164320333766*^9, {
   3.7143244447724743`*^9, 3.714324455188258*^9}, {3.715605406120977*^9, 
   3.7156054070835876`*^9}, 3.715615704246533*^9, {3.71562744396726*^9, 
   3.7156274604218283`*^9}, {3.715627778278318*^9, 3.7156278078282833`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]Yaw\[CloseCurlyDoubleQuote] control law", \
"Chapter",
 CellChangeTimes->{{3.7156157514181347`*^9, 3.715615760314632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]\[Psi]cl", "[", 
     RowBox[{"t_", ",", 
      RowBox[{"{", 
       RowBox[{
       "p1_", ",", "p2_", ",", "p3_", ",", "r11_", ",", "r12_", ",", "r13_", 
        ",", "r21_", ",", "r22_", ",", "r23_", ",", "r31_", ",", "r32_", ",", 
        "r33_", ",", "P1_", ",", "P2_", ",", "P3_", ",", "R11_", ",", "R12_", 
        ",", "R13_", ",", "R21_", ",", "R22_", ",", "R23_", ",", "R31_", ",", 
        "R32_", ",", "R33_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
        "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "V1_", ",", 
        "V2_", ",", "V3_", ",", "\[CapitalOmega]1_", ",", "\[CapitalOmega]2_",
         ",", "\[CapitalOmega]3_"}], "}"}]}], "]"}], "=", 
    RowBox[{"-", "\[CapitalOmega]3"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.7156157527224903`*^9, 3.715615752724433*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["complete control law in transformed coordinates", "Chapter",
 CellChangeTimes->{{3.7098082802331867`*^9, 3.709808283128922*^9}, {
  3.71561577152031*^9, 3.7156157784620256`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z3", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vcl", "[", 
   RowBox[{"t_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"uclTPC", "[", 
         RowBox[{"t", ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"\[Tau]cl", "[", 
        RowBox[{"t", ",", "y"}], "]"}], "/.", "PhysicalConstants"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["complete control law in original coordinates", "Chapter",
 CellChangeTimes->{{3.7098082802331867`*^9, 3.709808283128922*^9}, {
  3.71561577152031*^9, 3.71561579273804*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ucl", "[", 
   RowBox[{"t_", ",", "x_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ucl", "[", "\[IndentingNewLine]", 
    RowBox[{"x", ",", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"vcl", "[", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], "-", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"pd", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{"pd", "'"}], "[", "t", "]"}], ",", "z3", ",", "z3", ",",
              "z3", ",", "z3"}], "]"}]}], ")"}], "/.", 
         "PhysicalConstants"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Tau]\[Psi]cl", "[", 
      RowBox[{"t", ",", "x"}], "]"}]}], "\[IndentingNewLine]", "]"}], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"Ucl", "[", 
    RowBox[{"0.1", ",", 
     RowBox[{"xRandom", "[", "]"}]}], "]"}], "]"}], "/.", 
  "PhysicalConstants"}]}], "Input",
 CellChangeTimes->{{3.709888130861339*^9, 3.709888169958815*^9}, 
   3.709888205738627*^9, {3.70988824797125*^9, 3.709888250667576*^9}, {
   3.709888281669149*^9, 3.7098884719012623`*^9}, {3.709893559798641*^9, 
   3.709893575768652*^9}, 3.709893654288981*^9, {3.709893715008765*^9, 
   3.709893732312621*^9}, {3.7098938481032553`*^9, 3.709893893916325*^9}, {
   3.709893991704297*^9, 3.709893997882923*^9}, {3.709894860811623*^9, 
   3.709894868241702*^9}, {3.710059243993103*^9, 3.7100592603866262`*^9}, {
   3.7156157493555613`*^9, 3.7156157947012577`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.016`", ",", 
   RowBox[{"{", 
    RowBox[{
    "13.331860307494507`", ",", "0.36100926542248757`", ",", 
     "0.16877349974596478`", ",", 
     RowBox[{"-", "0.1671752823929276`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.710059261244369*^9, 3.710059339410924*^9, 3.710059482936597*^9, 
   3.7100595243722353`*^9, 3.7100601418842783`*^9, 3.710060719872319*^9, {
   3.7101414473741283`*^9, 3.710141466950445*^9}, 3.710141713823021*^9, 
   3.710142810681682*^9, 3.7101637324589577`*^9, 3.710163794530761*^9, 
   3.7101643533771563`*^9, 3.7101644583840647`*^9, 3.7101647845358973`*^9, 
   3.714323624547555*^9, 3.7143242048567133`*^9, 3.714324543864079*^9, 
   3.714374178133669*^9, 3.715331317766843*^9, 3.7156272758277597`*^9, 
   3.715627486162175*^9, 3.715661757052033*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Projection: take any element in R36 and project it into X ", "Chapter",
 CellChangeTimes->{{3.7156151719663258`*^9, 3.715615219316828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"projR1", "[", 
   RowBox[{"U_", ",", "V_"}], "]"}], ":=", 
  RowBox[{"U", ".", 
   RowBox[{"ConjugateTranspose", "[", "V", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projR2", "[", "SVD_", "]"}], ":=", 
  RowBox[{"projR1", "[", 
   RowBox[{
    RowBox[{"SVD", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"SVD", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"projR3", "[", "R_", "]"}], ":=", 
   RowBox[{"projR2", "[", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"SingularValueDecomposition", "[", "R", "]"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Proj", "[", 
    RowBox[{"{", 
     RowBox[{
     "p1_", ",", "p2_", ",", "p3_", ",", "r11_", ",", "r12_", ",", "r13_", 
      ",", "r21_", ",", "r22_", ",", "r23_", ",", "r31_", ",", "r32_", ",", 
      "r33_", ",", "P1_", ",", "P2_", ",", "P3_", ",", "R11_", ",", "R12_", 
      ",", "R13_", ",", "R21_", ",", "R22_", ",", "R23_", ",", "R31_", ",", 
      "R32_", ",", "R33_", ",", "v1_", ",", "v2_", ",", "v3_", ",", 
      "\[Omega]1_", ",", "\[Omega]2_", ",", "\[Omega]3_", ",", "V1_", ",", 
      "V2_", ",", "V3_", ",", "\[CapitalOmega]1_", ",", "\[CapitalOmega]2_", 
      ",", "\[CapitalOmega]3_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"projR3", "[", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r11", ",", "r12", ",", "r13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r21", ",", "r22", ",", "r23"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r31", ",", "r32", ",", "r33"}], "}"}]}], "}"}], "]"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], "+", 
       RowBox[{"l", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r11", ",", "r12", ",", "r13"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r21", ",", "r22", ",", "r23"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r31", ",", "r32", ",", "r33"}], "}"}]}], "}"}], ".", 
         "e3"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"projR3", "[", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"R11", ",", "R12", ",", "R13"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"R21", ",", "R22", ",", "R23"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"R31", ",", "R32", ",", "R33"}], "}"}]}], "}"}], "]"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "+", 
       RowBox[{"l", "  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r11", ",", "r12", ",", "r13"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r21", ",", "r22", ",", "r23"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"r31", ",", "r32", ",", "r33"}], "}"}]}], "}"}], ".", 
         RowBox[{"Skew", "[", 
          RowBox[{"{", 
           RowBox[{"\[Omega]1", ",", "\[Omega]2", ",", "\[Omega]3"}], "}"}], 
          "]"}], ".", "e3"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\[CapitalOmega]1", ",", "\[CapitalOmega]2", ",", "\[CapitalOmega]3"}],
        "}"}]}], "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Proj", "[", "x", "]"}], "-", "x"}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"error", "[", 
   RowBox[{
    RowBox[{"xRandom", "[", "]"}], "/.", "PhysicalConstants"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.70980880119038*^9, 3.7098088308972197`*^9}, {
  3.709808861330841*^9, 3.7098088957136993`*^9}, {3.7098089287721653`*^9, 
  3.7098089609881077`*^9}, {3.709809093942932*^9, 3.7098090942857027`*^9}, {
  3.7098102755340843`*^9, 3.709810395516766*^9}, {3.7098105812328672`*^9, 
  3.7098106835487413`*^9}, {3.709810742283586*^9, 3.7098108823824368`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.709810310949997*^9, 3.709810353475395*^9}, 
   3.709810398594356*^9, {3.7098105558438463`*^9, 3.709810584408265*^9}, {
   3.7098106190045233`*^9, 3.709810649913179*^9}, 3.709810686372169*^9, {
   3.709810852188141*^9, 3.7098108830159683`*^9}, 3.709812476060937*^9, 
   3.7098126069483423`*^9, 3.709812764142112*^9, 3.709812994211029*^9, 
   3.709813218894474*^9, 3.709813435986062*^9, 3.709814523686091*^9, 
   3.709814777988172*^9, 3.709814956683399*^9, 3.709816580173197*^9, 
   3.7098168189987698`*^9, 3.7098175035037727`*^9, 3.709871049189761*^9, 
   3.7098714111292543`*^9, 3.709872013283875*^9, 3.709872244699786*^9, 
   3.709873685184312*^9, 3.709873896159739*^9, 3.7098740729736958`*^9, 
   3.7098743361608067`*^9, 3.709874716714089*^9, 3.709875819835435*^9, 
   3.709880959475746*^9, 3.7098895473903217`*^9, 3.709891207678797*^9, 
   3.709896455245181*^9, 3.709896931054151*^9, 3.7098973435883083`*^9, 
   3.709898780444599*^9, 3.709900222086595*^9, 3.7099033647382927`*^9, 
   3.709903779540629*^9, 3.7099047293207893`*^9, 3.709904956228278*^9, 
   3.7099061143504543`*^9, 3.709933974432254*^9, 3.7099717163142633`*^9, 
   3.709972648674905*^9, 3.70997305975896*^9, 3.7100601634769697`*^9, 
   3.7100607221937943`*^9, 3.7101417223052177`*^9, 3.710142812263199*^9, 
   3.7101643558888807`*^9, 3.710164458428298*^9, 3.710164784608099*^9, 
   3.71432362459103*^9, 3.71432420498376*^9, 3.714324544080624*^9, 
   3.714374178302516*^9, 3.715331317847558*^9, 3.715627275986024*^9, 
   3.715627486218813*^9, 3.7156617572770033`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Chapter",
 CellChangeTimes->{{3.7156151095743227`*^9, 3.71561511223711*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stepsize", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NN", "=", "1000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x0", "=", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"z3", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
       RowBox[{"l", " ", "e3"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", "z3", ",", 
       "z3", ",", "z3", ",", "z3"}], "]"}], "/.", "PhysicalConstants"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x0", "=", 
     RowBox[{
      RowBox[{"xplusplusstar", "[", "0.1", "]"}], "/.", 
      "PhysicalConstants"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x0", "=", 
     RowBox[{
      RowBox[{"xRandom", "[", "]"}], "/.", "PhysicalConstants"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateListStar", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputList", " ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensionsList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kk", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"time", "=", 
     RowBox[{"stepsize", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"xstar0", " ", "=", " ", 
     RowBox[{
      RowBox[{"h", "[", 
       RowBox[{"yplusplusstar", "[", "time", "]"}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"input", " ", "=", 
     RowBox[{"Ucl", "[", 
      RowBox[{"time", ",", "x0"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tensions", "=", " ", 
     RowBox[{
      RowBox[{"Tensions", "[", 
       RowBox[{"x0", ",", "input"}], "]"}], "/.", "PhysicalConstants"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"stateList", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"stateList", ",", 
       RowBox[{"{", "x0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"stateListStar", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"stateListStar", ",", 
       RowBox[{"{", "xstar0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"inputList", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"inputList", ",", 
       RowBox[{"{", "input", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tensionsList", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"tensionsList", ",", 
       RowBox[{"{", "tensions", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"xd", "=", "  ", 
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"x0", ",", "input"}], "]"}], "/.", "PhysicalConstants"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"x0", "=", 
     RowBox[{
      RowBox[{"Proj", "[", 
       RowBox[{"x0", "+", 
        RowBox[{"stepsize", " ", "xd"}]}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"100", " ", "kk"}]}], ",", 
      RowBox[{
       RowBox[{"Beep", "[", "]"}], ";", 
       RowBox[{"Print", "[", "i", "]"}], ";", 
       RowBox[{"kk", "=", 
        RowBox[{"kk", "+", "1"}]}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]",
   "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.697144670498608*^9, 3.697144801594841*^9}, {
   3.697144871491254*^9, 3.697145058488566*^9}, {3.697194422801775*^9, 
   3.6971944995778027`*^9}, {3.6971962026686897`*^9, 3.697196203668778*^9}, {
   3.6971982939991713`*^9, 3.6971983650003777`*^9}, {3.697198450349339*^9, 
   3.697198494025077*^9}, {3.6971985973378973`*^9, 3.697198598138495*^9}, {
   3.697198683550359*^9, 3.6971986870125017`*^9}, {3.6972020866865807`*^9, 
   3.6972021079744473`*^9}, {3.6972051780359097`*^9, 
   3.6972051821232347`*^9}, {3.697205244403036*^9, 3.697205245512591*^9}, {
   3.697209431602137*^9, 3.6972094837735777`*^9}, {3.6972095647681503`*^9, 
   3.697209565185904*^9}, {3.69720986977465*^9, 3.697209878899805*^9}, {
   3.69721013035539*^9, 3.6972101984258013`*^9}, {3.6972102423779182`*^9, 
   3.697210310368534*^9}, {3.697210361028081*^9, 3.697210399216175*^9}, 
   3.6972104382705507`*^9, {3.697210469281679*^9, 3.6972105247030163`*^9}, {
   3.697276942229973*^9, 3.69727697390705*^9}, 3.697277030255249*^9, {
   3.697277141422461*^9, 3.697277156205419*^9}, {3.697277318799739*^9, 
   3.697277356718541*^9}, 3.6972776371958427`*^9, {3.698246488547475*^9, 
   3.698246493209091*^9}, {3.698247563098871*^9, 3.69824756324855*^9}, {
   3.6982480189665823`*^9, 3.698248019450706*^9}, {3.6983036740358343`*^9, 
   3.6983037255726852`*^9}, {3.698502661584284*^9, 3.6985026618966103`*^9}, 
   3.6985067635653553`*^9, {3.698549717099725*^9, 3.698549719699305*^9}, {
   3.698549765461834*^9, 3.698549789936919*^9}, {3.69854987227381*^9, 
   3.698549931423819*^9}, {3.698549974688199*^9, 3.698550225727729*^9}, {
   3.6985505880302477`*^9, 3.698550592804903*^9}, 3.698550913343279*^9, {
   3.698551329394456*^9, 3.6985513349084377`*^9}, {3.69855378101232*^9, 
   3.698553781560462*^9}, {3.7098090047606707`*^9, 3.709809104776815*^9}, {
   3.709809138491555*^9, 3.709809240734477*^9}, {3.709810094417884*^9, 
   3.709810105480557*^9}, {3.709810900509095*^9, 3.709810966864901*^9}, {
   3.709810998617538*^9, 3.70981110053314*^9}, {3.709811830806892*^9, 
   3.70981183096369*^9}, {3.709812319360845*^9, 3.709812440498448*^9}, 
   3.7098125015314083`*^9, {3.709812594751631*^9, 3.70981259747471*^9}, {
   3.709812793937004*^9, 3.709812807509035*^9}, {3.709813106444386*^9, 
   3.7098131067669897`*^9}, {3.709813422801939*^9, 3.709813424705778*^9}, {
   3.709814907986623*^9, 3.7098149164898653`*^9}, {3.709816566659526*^9, 
   3.70981656681031*^9}, {3.709871392353381*^9, 3.7098713924965343`*^9}, {
   3.709871525736781*^9, 3.709871526410123*^9}, {3.709871726780685*^9, 
   3.7098717269984217`*^9}, {3.709871949563933*^9, 3.709871950300364*^9}, 
   3.709871999633788*^9, {3.709872214515512*^9, 3.7098722160715933`*^9}, {
   3.70987387070266*^9, 3.7098738732099257`*^9}, {3.709874702890387*^9, 
   3.709874705201005*^9}, {3.709876007577001*^9, 3.709876007722047*^9}, 
   3.709880960755843*^9, {3.709881002293099*^9, 3.709881005208293*^9}, {
   3.709889554656248*^9, 3.709889558495275*^9}, {3.709891217275495*^9, 
   3.7098912232291117`*^9}, 3.709896464114739*^9, 3.709896938946031*^9, 
   3.709897831743293*^9, {3.709899258679174*^9, 3.709899258958208*^9}, {
   3.709899600719071*^9, 3.7098996009947166`*^9}, 3.709900228126163*^9, 
   3.709903368751669*^9, {3.709906376713641*^9, 3.709906378601692*^9}, 
   3.709907434321031*^9, {3.709907582969668*^9, 3.709907617577421*^9}, 
   3.7099081193322897`*^9, 3.709934009295204*^9, 3.709934059648768*^9, {
   3.709934194955366*^9, 3.709934198446434*^9}, {3.709973067770371*^9, 
   3.7099730689999313`*^9}, 3.71006072707474*^9, {3.710060984725361*^9, 
   3.710060985526947*^9}, {3.710142818995103*^9, 3.710142841687476*^9}, 
   3.710164446425438*^9, 3.7101647800922537`*^9, {3.710165060504568*^9, 
   3.710165063278625*^9}, {3.7101650936801243`*^9, 3.710165131202334*^9}, {
   3.710165458939603*^9, 3.7101654796678133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["100"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.715661860573922*^9}],

Cell[BoxData["200"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.715661965782482*^9}],

Cell[BoxData["300"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.715662075790359*^9}],

Cell[BoxData["400"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.7156621820039463`*^9}],

Cell[BoxData["500"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.7156622865828342`*^9}],

Cell[BoxData["600"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.715662390995442*^9}],

Cell[BoxData["700"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.71566249522003*^9}],

Cell[BoxData["800"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.715662599575816*^9}],

Cell[BoxData["900"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.715662703524086*^9}],

Cell[BoxData["1000"], "Print",
 CellChangeTimes->{3.714323640632615*^9, 3.714324220877431*^9, 
  3.714324646398385*^9, 3.714374279850906*^9, 3.715331420004341*^9, 
  3.715627396257985*^9, 3.7156275022711077`*^9, 3.715662807462254*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["saving data", "Chapter",
 CellChangeTimes->{{3.7156150686909*^9, 3.715615074526829*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_state.mat\
\>\""}], ",", "stateList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_state_\
star.mat\>\""}], ",", "stateListStar"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6985036578259974`*^9, 3.698503658498044*^9}, {
  3.6985513603944273`*^9, 3.69855137572093*^9}, {3.698560606380211*^9, 
  3.698560634232679*^9}, {3.710161213598318*^9, 3.71016122452133*^9}, {
  3.7101614355717287`*^9, 3.7101614358044453`*^9}, {3.710165078996048*^9, 
  3.710165079217668*^9}, {3.7101652007095823`*^9, 3.710165207028686*^9}}],

Cell[CellGroupData[{

Cell["export", "Subsection",
 CellChangeTimes->{{3.69866070255951*^9, 3.698660703322317*^9}, 
   3.7120373513051167`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_state.mx\>\
\""}], ",", "stateList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_state_\
star.mx\>\""}], ",", "stateListStar"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_input.mx\>\
\""}], ",", "inputList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_tensions.\
mx\>\""}], ",", "tensionsList"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.698643310140045*^9, {3.6986605420481033`*^9, 3.6986605760214357`*^9}, {
   3.711775568342793*^9, 3.711775568511992*^9}, {3.7120360002619057`*^9, 
   3.712036000718154*^9}, {3.712036049359779*^9, 3.7120360627592773`*^9}, {
   3.71480853415761*^9, 3.714808538597221*^9}, {3.714899899030551*^9, 
   3.714899920456976*^9}, 3.7149163911269503`*^9, 3.714934563558934*^9, {
   3.7153311712011137`*^9, 3.715331205428688*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import", "Subsection",
 CellChangeTimes->{{3.698660705542233*^9, 3.698660715146965*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"stateList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_state.\
mx\>\""}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"stateListStar", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_state_\
star.mx\>\""}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"inputList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_input.\
mx\>\""}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"tensionsList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<figures/uav_slung_manipulator/plot_trajectory_matlab/data_\
tensions.mx\>\""}], "]"}]}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.698660720009779*^9, 3.6986607477347527`*^9}, {
  3.698724459572261*^9, 3.698724460867153*^9}, {3.711775571270463*^9, 
  3.7117755714269047`*^9}, {3.712035673678891*^9, 3.712035678848196*^9}, {
  3.715331219581663*^9, 3.715331249744791*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["necessary for the plots that follow", "Subsection",
 CellChangeTimes->{{3.715615086170679*^9, 3.715615093044836*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", 
   RowBox[{"Length", "[", "stateList", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XTicksLabels", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"600", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"800", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "10"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xc", "[", 
   RowBox[{"i_", ",", "comp_"}], "]"}], ":=", 
  RowBox[{"stateList", "[", 
   RowBox[{"[", 
    RowBox[{"i", ",", "comp"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uc", "[", 
   RowBox[{"i_", ",", "comp_"}], "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{"i", ",", "comp"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.70987593390843*^9, 3.709875977762858*^9}, {
   3.7098762372569*^9, 3.709876270963366*^9}, {3.7100602434518147`*^9, 
   3.710060244013678*^9}, 3.710142773969665*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metric error", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}, {
  3.709875751367775*^9, 3.709875756536969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"errordY", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"dY", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"stateList", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", ";;"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"stateListStar", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", ";;"}], "]"}], "]"}], "]"}]}], "]"}], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"errordX", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"dXToStar", "[", 
     RowBox[{
      RowBox[{"stepsize", 
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}]}], ",", 
      RowBox[{"stateList", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", ";;"}], "]"}], "]"}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"errordX", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"errordY", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<distance between [x] and \
[x\!\(\*SubscriptBox[SuperscriptBox[\(]\), \(*\)], \(++\)]\)\>\"", ",", 
          "\"\<distance between y and \
\!\(\*SubscriptBox[SuperscriptBox[\(y\), \(*\)], \(++\)]\)\>\""}], "}"}], ",",
         "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.709876505549324*^9, 3.709876532800816*^9}, {
   3.7098817547987423`*^9, 3.7098817814161663`*^9}, {3.7100606202409773`*^9, 
   3.7100606338009567`*^9}, {3.710165032484157*^9, 3.710165037708605*^9}, {
   3.710417881666635*^9, 3.710417884516633*^9}, 3.7143241342991858`*^9, {
   3.7143753089938097`*^9, 3.714375316786948*^9}, {3.714375731362377*^9, 
   3.714375737286099*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxF2Hk8lPv7P/AplBZREdEy7apTJKFNrxYnlWq0iCyNLUtk7DuDYcYwY2lT
UdKmqEOrQk0SWhQtkjZtIi1OpdRp+fo9Pte7X/+cx/O8u+Z1X/erx7hvo1z8
Vrn35HA4rUoczv/77//+dMzzdhx/xrioD+h/INNVs1z7j1UxV2Bh1fePNbB4
o4F17z/WhOrV9xv7/7EO/tPfmzb0j4dhy7fAbMM/5mLI9nf8NX88GprB6bfF
fzwWhYc7Z9T+8Xhc9UkJGlfMrI8H9zyOpf3xJCxcNahPnxPMf2HiA7WbqX88
FVd+lhdonmQ2RNT8t5N3/vE0HEr/aTboFLMRjiaJDof+8XRYNe46demPjTF1
l+/mtj+egXe8u5z/bxMornS8KP1jU2Tfn/ve6Y/N4M15vrzuT/5MJM5N2qz+
x7NQFRdaP+zP9c/G6CFHHn/7cz/m4Mm0+ML8f5jnonfb5vuTjzOb4+aNUUuS
CpnnwWVAgGbpUWZAJeupdW0+WQjI2wcoKw6x8/nwHqCitP0AO58P3mD5O+s8
dr4AXhN6cL/sZecLIO8T9Y8oh50vxLybxzx/72LnC+FeaFPvkcXOF+G98fnJ
F7ex80XY98UxstcWdm6B0oxUqXk6O7fAPX2jDg8ZO/8bFfxLWglSdv43HNpa
5qSL2fliVEteitJE7Hwx5G2RH4Rx7NwSdosc3d1i2LklIu8MOT8zkp0vgcJS
8g8njJ0vgfHpZ10lQex8KaJaTOe6+LPzpWhPPzf0hy87X4bdKhljkrzZ+TIM
7Ixu+72RnVuhbKBRp6crO7dCY1DEDcUGdr4cDVvMP/ZyYOfLMTzY4fUsW3a+
ApNKPCc7rGHnK7D/+7q53jx2vhINBkOy3azY+UpEHlKvXmrJznn4fu64+bBF
ZPCgnFwnapzH/j4PC+KMhsfOJit4iBjeJFM3ZfPW+H4vdEOyEZu3hlnXleFv
p7B5a1x5+mKd6UQ2bw3J42O53mPZ/Cpc7hqYljiSza/C8BznC2JdNr8Kc2bm
3hRosflVWF990w0abH41/jM2nvylL5tfDZ09efUZKmx+NWpWnVMbzGHzq2G+
f8zu8O+qNL8GFUF3Z1/5TMYa/DpiXtL5nixcgx4B0qd928iKNXDcVS1WfsHm
18Kj73D580dsfi1at3c2HGhg82tRuXHSimV1bH4tqiZOfn3vKpu3QbT32JxF
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
2jvWvxS3iqqEG9n3A0+K+Kvn8gNU6PvDVorl3icOFw8k86U4m7Zl66gRZE8p
ymqDpQr2fSSQ4vSWl/mppuQwKV5Va2uKFpGFUtg0TOw8YE2WSKGMpRHvnMjp
Upy/8rbB3oecJUXd3M6F78PJuVI0TWv+nScm50sRZdu6ImwbuUiKvcoTI332
k0u6719e+d3oYrJCitfrnxQfvUiukeLi92+b/60l10lhPaV2M+8R+/6XYqtB
qG7VG/b9L0WlWuoz3jf2/S+FUvLYWR9608+PDim+n23P3TuE3CXFl4RJO/nj
yJwUlGvWFxoak1VTMPjvGJ8BC8kaKdg4J9Gvy5qsk4KJ0/9d/Y5P5qZAvFt8
od2PrJ8C7eya9R9jyIYpKBz4vum3jGyWgutD274OyiEjBdxlTv6TCsmW3fO7
c9UsSsm8FNgMK9jpfI1sm4KYLUPbYh6Q+Snw6sFt2N1K9kxBtEHc/LNfyYIU
mK4QDarrxX7+p+BcSZvJKy2yMAXb25/kdbLnBUkKYi/8y+MYk9NTcPVNzwXK
C8lZKZj52TSas4qcmwJFxFv1z3xyfgqeK+9Xe+JHLkrBs6WdaeUx5JIUvBos
OpMhIytSsPBIyyG7bHJNCk527EzVLCDXpUBo8CHr0jlyYwpakr735LPnp+YU
qBvG9f7QQG5NwZjw162+r8gdKajbNeLDw0/krhRssMv0MOvJnv9S8Sp5yMF4
Dfb8lwqNsLu/z7HnOY1UHJpudu/xX+z5r/v85mPxu1ns+S8V1qkxsa2W7Pkv
Fcc1nujftGHPf6loTzjbmeNGNkuFQdlRh3UBZKQixGfig2+xZMtUTHVyaxfJ
yLxUZJ8y0+naRbZNhfb84W2r8sn8VGx9o/5262myZyryJyWcLK8gC1LRb++y
hj/Pv2GpmF0m+3DpEVmYiuWZBXuy28iSVCidNRI7fCGnp+K21TVeDyV6vs5K
RerkUYel6uTcVJyY8Ghmlx45PxUX4kVlS/TZ838qTKJDWmKM2fN/9+er1QXs
AHv+T8WP0g3cLVbs+T8Vbwq2FPvbsuf/VPys8nxr5Mae/7vvv/r6XQ1+7Pk/
Fd7DeRKHSPb8n4r6q+lJlUnkjlRs/nbcc0AmuSsV57dHqMzKIXNkqD/VYbI4
n6wqw55Hk5tmnCRryDArds0tlQtkHRkyszO+nakhc2V4mvDNfMkdsr4MxTfj
JWWPyYYycMI6L2m0ks1kcBz/6IHFRzJk0MgKvmT/g2wpg/2I1SYTldj7nwzl
/31u1VRl738ylCmN6ezoz97/ZHiZmmNbPpC9/8nw6pL9oIgh7P1PhrQ7otET
9Nj7nwwxc7yklSPZ+58Ma3WjrFaNZe9/MtjstPKp02fvfzIsCop9bz6Fvf/J
YCKuacyZxt7/ZJgX9HLauxns/U+GWw6ZPabMIhfJcPOYjOdoTi6RIfCHWD+G
vW8quv119Na0v8k1Mmzc9GZPxlJynQw71qxYK1pBbpRhX9+cSg/2/tosw38h
P7/PtiG3ylDn7NW7x3pyhwyRNw5/O+NI7pJB4br4uaMzmSNH359ZtzvdyKpy
nNQ/+ijGk6whR9e9eYO/bSLryOGiXJ/s5kfmylGdErfmEnvf1pdjzodhEvUQ
9v4vR9HfA2etDGfv/3KMNfYWCqPY+78cU95d998fy97/5chcvXlcSTzrXw67
kTonLySy/uUYM0R3+lkJ618OK7ulF/alsP7lmFT22zdGzvqXo2yamsPyDNa/
HM2LyvMGbGX9y7H4YK1DxXbWvxxel7wPeu5k/cvh4Dc5q0c261+Og0f7W8v2
sP7l6GPv+7bfPta/HOpGfcXR7PcVRXIMTf829/lB1r8cX+IOT52Vz/qXY1dV
fUjiUda/HNGtCcaVhax/OTLcBid9Oc76l+O/Z3rSYcWsfznKQyI3mLDfl7TK
EfVrxbhFp1n/cjhFv/9ucZb13+1tbb9nn2P9p0G/t/Ka8aWs/zToLjLSViln
/afhuPp2r8YLrP80fJgcuSlXwfpPg5XumrmOFaz/NGS2nPk9gP0+xzANF3qu
v3P6Cus/DVVTBz6wrmb9p+Fi4LVpL2qK5v0fSgxeBQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
CupE9wNBKp5Gbc3+0J3sk4rWlEc/ZH3IwlQc/mHiZDaYHJmKzQ1mXnrs/iNK
xagNDee1JpHlqSgurtIcYkTOSoXFb8+uC9n9LCcV75ddd5MvJitSMTf8+6Na
G3J+KvpeqB5v5UwuTEXnOmNulRe5OBVfXH7G+QjJylQYGTT06RVNLuu4/ufr
i29IyJUd17NHvdlGdn+uScXs4g9Z/lvY/T8VbmMMpMt3s/t/KjYGXes2/zC7
/6eiotlA0/wUu/+n4u3nM7FL2POBk4b1QzVsncvZ/T8NkjnnMiPusft/Gp4p
kiZufcbu/2nYOWCc8eU37P6fhqf18Rc+NbP7fxo2Pbct57ax+38axgwWhdh1
oeeZURo+nr3xIFObjDRsG/FJp1yPbJEGzxupS9VGkPlpeDlf/6gJe146pMFS
p90teiZZkIZL/1nsLmLPV580/G58suvdMrIwDRfWWOYOcWDP/w5frKu2dGPP
/zT4H4rIjmbPb3kajt2UDtkdzp7/abj/SKvssog9/9OQXZhe/ySVPf/TsHfY
p/8+bWTP/47rsSu54udO9vzv+LyCP05t+ez5nwajRUsffD/Bnv9paNE4sPf1
efb8T4OObdCUm6Xs+Z+GBuuZ3/ZXkmvSYP5W4RL2mFybBo5ixXujV+TGNHis
VdVt+khuSsO7TWZe21rIrWloX7Vx1QwVOh9x0rHq0RJxaTeyejocipM9FvYh
a6fD/ueAzSWDybrpKC/JPDRoFDv/pcNapbuxkMfOf+lYsXFRbdFMdv5Lx4nK
tNlvzNj5Lx3H1qc3ayxl57907OCG7B+4gp3/0nFtSqnKIBd2/kvHni8uRd28
2fkvHRm6TmverGXnv3QY6PR9fDySnf/S0WtWjxJfMTv/pWP58DdKrVRyZDrW
fbA/psgmi9KheULPVD+XLE+Hq/qrWal7yVnpOJO5wqPuMDknHW4bmhMNTpIV
HfnlWu4258n56R3Ps1tVAdfIhelQFartDblFLk5H0X2zPI9qsrLj+iw/fQpP
yWXpGKI/Mq/rK3JlOnyrX9uVvCfXpKPLifI9K76Sa9PR8FvP7+kvcmPH9QtI
z16mys7/6Th7ZeLffA12/k/H++Wemz5ps/N/BjaXPjYdosvO/xl4Xhv2eYY+
O/9n4MMqy/RZI9n5PwPf63erj5lA5mbAvH+5HYe9L4zOwLgz4/0uG5N5GXhd
aTzb35RslIHkPk5XOBZkZOCq4duWeEuyRQYc3LmPGmzJ/Azk1et5GK0iO2Tg
1pErOSGuZEEGOFPKInO8yT4Z2DYxp2teAFmYAesc68W7QsiRGRAqzi0UR5FF
Gai8M0t9WQJZ3rH/Gbc2qbL3pawMuFxo/r07lZyTAZuoEwvHZZEVGbjGS5ft
3ETOz0D96zU3f28jF2bggXiXgTl7HyvOwL4ND/aH7icrO67HmJ7uWYfIZRmY
eW190OYCcmUGNJzevJGeZO9/HZ8vr3zmWsLe/zKQXTLbf9RF9v6XgZsppkcf
XmH9Z8BkvM754Ous/wwYf/9xsvUm6z8TnVvmnfKtZP1n4snZFU/+q2b9Z2J0
v4QFPR6x/jMh1OneH89Y/5lIa5kU6FLH+s/EXm/1QJ/XrP9MzNyeNtPlLes/
E7wzyd9MPrL+M7FjStbVHs2s/0zo+nS7dZ297/IzMX2ajmFgK+s/E2tPxg5T
aWP9Z+Km3p2LonbWfyYa986Y/FGV3p+FmajcI92zoAs5MhPzDoyanaFBFmXC
+oLe6MuaZHkmDO99zKrvyd7/MzHE4PTuZh32/p+J9nsa0k992ft/Jjw2//R9
pMve/zPhFtMt+sRA9v6fiU43J72MGsLe/zPhqf5f1aSh7P0/EyM6y8Orh7P3
/0yY993Q5j2Svf9nAivtN7wbTa7JxNjxW3ydxpFrM/F1i+DYBfb/B42ZuPWn
63otHrmp4+evDTO1mkJu7ehvbOKnBEMyZx168SaWK6aT1ddh3FaBygkjsvY6
9O0hul5kTNZdh8WLBi49MJvMXQeD8FeXUuaSR69DScYRGxeQeeuw4oWLkYEZ
2WgdrPPbdj4xJ2MdYm/lFCfNzzf5PwZUqhM=
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {0, 3.2133358599851567`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {0, 3.2133358599851567`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"distance between [x] and \
[x\\!\\(\\*SubscriptBox[SuperscriptBox[\\(]\\), \\(*\\)], \\(++\\)]\\)\"", 
         "\"distance between y and \
\\!\\(\\*SubscriptBox[SuperscriptBox[\\(y\\), \\(*\\)], \\(++\\)]\\)\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.714375784154263*^9, 3.7153323877333393`*^9, 
  3.715627693808187*^9, 3.715662854412156*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_error_distances.pdf\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.710060336662673*^9, 3.710060340697529*^9}, {
   3.7100604181923227`*^9, 3.710060477942663*^9}, 3.7143242025774403`*^9, 
   3.714375312165207*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error position", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"errorp", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"stateList", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "NN"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], "-", 
      RowBox[{
       FractionBox["jxy", 
        RowBox[{"l", " ", "m"}]], " ", 
       RowBox[{"stateList", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "NN"}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", "9", ",", "12"}], "}"}]}], "]"}], "]"}]}]}], 
     ")"}], "-", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"pd", "[", 
        RowBox[{"stepsize", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"errorp", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"errorp", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"errorp", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
        ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550255215838*^9, 3.69855026401581*^9}, {3.709817262583048*^9, 
   3.709817275977496*^9}, {3.709874481529686*^9, 3.709874507059774*^9}, {
   3.7098745543810663`*^9, 3.709874557062729*^9}, {3.7098745895655403`*^9, 
   3.7098746220978394`*^9}, 3.709889837098422*^9, {3.709889869808766*^9, 
   3.709889900712407*^9}, 3.7100604828320503`*^9, 3.7100607711683807`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw92Hk8lOv7B/ApLdqlksrRpIVW2mXJR6sWW6mDqJHsYew7g1nNDCpFaaEF
bZIUbUy2aFWnJG3aVZI2kZaf72uu53f+6bxfd5drPl3mee77HrfZf41bTxaL
1azCYv3vT+V/bWb0Pwr6E+33ivDy798yJVVh87OPivz/rQZ1123Lf/9hPByX
LNcPmfP/1kTIorINM38z1oLr430zvncxZkPFcXpS3E/GOjD+PDygroPxBIx/
5f3mbTvjSdC1K/lY9Y2xHgbf+Z3k/YXxFOzMLim//4nxNMyqaN7d9yPjGdDf
P1KD9Z6xAYb6bDIte8N4Jk4sDdJY+pLxLFS8y83b9ozxbMQO/911+BHjOVgr
0B0V94DxXNhlZPZj/8d4HhCU8UB0i/F81F6enXyulrEh9J64LThRyXgBzI9p
vPEsY2yEJxlTDracZ2yM5ctSo+cXMTbB3i1WghX5jE3x4se2mzp5jBci6OEl
j4psxmY4ExLsMTWTMfCluOC5YxqZB5SNvN5iK2fWzVFzQZ6lJmTWzeG2f5FG
eiyzvgi4WO75OpRZX4ThGoKiLj9mfTF6FJwc2ejOrC/G3BVahbyNzPoS7G2O
PPJpHbO+BPljVo/QtWTWl8L+ecck3SXM+lLwZz/t0WbErC9Di47j7fiZzPoy
eEQ0XHisy6wvh8aDp59Z2sz6cuw10zzcOoxZt8CxgRyVnH7MugVGmNxYrPv3
D62vwK8hxZmB38i8FZjccXWx+B2zvhJHLnWFej5l1lfi2fPjgcP+Y9ZXIcNs
Z6jkKrO+ChGVTyqvXWTWV+MaZ9TBB6eY9dVIG2a1ruAQs24JtsYP3XXpzLol
QnT6ulcnMetWmHv3nXOvWGbdCm3D+JwhAcy6NXadnX3lrSuzbg2xyq378vXM
ug22Ru9r77GCDBs47NkYu8SY+fs2aCs0vrZuOllhA6O2qwvmjWXqbdGxpXPG
GzWm3hYSM53B7j2ZeluMGPvO9NzX31RviyUp0H3wisxaA+NTznNr75OxBj36
5d+XVZN5a6B+4EaYTjFTvwa954XKk3KZ+rV43BSdVJXO1K9FYf2FV/+JmPq1
+JjRa/i5MKZ+LbwCRm/f6sHU22G5ze7GH+uZejuYDf3gbb+MqbeDwmBeefJc
pt4OrM7VLpkTmPp1yNHfey12GFO/DtLVoxIW9GTq18F2kcGgG22/qH4dDjwv
+DLvGZm1HteeXbwQeZOM9XgkOdWafpHMW4/L04aPSjnK1K9HgLG4ipPO1P8L
LZMTvEECpv5f5PEHN+wMZOr/RcZtDcefm5j6f3Hi9OedxpZMvT0qOqLGOBox
9fYw/jU9ar0uU2+P/m/7LJs5nKm3R4JK+KAPLKbeAVlqNq78j11U7wDvvJyH
vx+SeQ54WXq1p301WeGAWxgbsKOQzHKEzsMJxQX7mXpHjHi13KMgial3hOGu
R8N2hDL1jmh2VrF22MzUb4Ce4MAxFSumfgOqRhmVbF/A1G+Axrhvqn0nMvUb
8FIraLqLGlPvhOVvbp3N7vpJ9U4Iexk3s/YNmeeEir2W+g13yAonLD5ranr7
EpnljJ8rE5vzc5l6Z1iV+10O287UO2MGa+PyKTFMvTPmapxUu+rB1G9Evmvu
Qas1TP1GsGdECK6YMPUbMbBoHNi6TP1G3LzoZu8zlKnfhGtZ5WsOdXVS/SYc
bHIprHlN5m1Cw+RBnY9ukxWbYP5RJ/fJeTKLg01BUuNbh8hsDhxD82fny5mf
x4GLudeA2DAyh4P6db1NF7owP5+DoF365p9WkrM4SO74lLxtDtOPgxUXszMn
apObOLCc0NJ4vC/T3wXnr1wsnfC5g/q7YJOBSXFqIxkuyHe7O6utgsxxwZjo
kfsXnyTzXMDqcc9Vuouc5YJt5V0tV+PIChf4ax3L6vQkN7nA4or2K/YaMmsz
rv+9MHqhMdN/M3rF/z1iO4HpvxlTY5NebxjE9N+MJz4a853bf1D/zeBoRrSv
e0bO2ox7RodiltWQFZtxhps1Qf80uWkz1uWmm6vtIbNccab1ut77BDLbtft5
u2/aZR8yXFHrINsnsSNzXGFjbnjN2pTp74qvWm5/h0xi+rtiXv4v0bXBTH9X
9K0fejLuRzv1d0Vj18uz+k1k1hZUXX3xtrGGzN4C8bRCYfxpMrbgTOmMe+P3
kDlb8HNdoFp5Apm3Be+/N0Q4+ZCztqBHV2/Lr2vJii3gSN5VCk2Y/ltgYVQ9
euREpr8bvHrPFx4exPR3wxbXuab67d+pvxv8csYGFz8lc9wQJixzNr1K5rnh
7RObqVdOkbPc0DNNPHBxBlnhhsWFmfoVPHKTG85kL7ti7kVmuWOd/F5LqS2Z
7Y67byY9NjJi+rsjqP/l4rM6TH93hPy9mKM/gOnvjve27bfyvn6j/u7QV/lm
N+4xWeGOUck/N+yuJDe5o9ev4X2GniSzPPCnr1aweCeZ7YFFlqVVf2PI8IBZ
rHhUmDuZ44Gi7I+yVisyzwMD1lqbuM9n+nsgW6XP4qdjmf4eiDDyurhelenv
ge+3H5TebvtK/T2xfrzCbcVDMtsTdcvzrlZcIcMTA3TndS08RuZ4Qjt9vsbF
7WSeJ167HJtuGEXO8uzeP1WuO+dKVnhC89jP7LmryU2e6HWn/8Rzc5j+XtCf
1ePz/H+Y/l6otTYfebE3098Lvw3leWatX6i/F7x+DTxbVU/meXXPY91qyzJy
lhdSFgTG1OeSFV74bvt2vUsquckLOHD5zcdwMssbGX1FRtEuZLY3TincNg1c
SYY3Hraqb94/i+nvjbU6r61mjWH6e8OusH5mjQrT3xu9vks1OC2fqb83pto5
qP68R27yRoPpCvVdl8ksH7xsG2c2J4fM9sGVCT677yWT4YODsqCpYWFkjg8C
567/O4ZD5vmgqfSvdoUFOcsH/fxnp22dyfT3wdhxqZ6ao5n+PrgxeOeR6p5M
/604EZxjF/ahjfpvReVQ9bgp98jYiriEYTOaLpE5WzEsrME74wiZtxW9qvkL
1yaTs7aiyHFeoVoYWbEVN1j9btdtIjdtxZGBo/fvsCCzfLH6uVTPYSbT3xe7
7CRh40Yz/X3x8bNFWktPpr8vThuy1UIefKL+vjjE3lqicZSc5QuuzHJOaSRZ
4Ysqn+u7fFaTm3yxtYP9VVubzPKDpLrcqeFTK/X3g+pe17fpV8jwwwS1zhzn
HWSOH3S/l52a7Ebm+aFCDo1f88hZfniXsubTPVWywg+idrZNUeNH6u8Hn8PT
rfacILP84ffQ7q8wlsz2x6bouohIGzL88dnI+F6wDpnjj9fxOyaGfmuh/v74
ZLVQEFtNzvJH9dN+A5IzyAp/+Boa3D7sTW7q/vkZDu/LTcgsLn5c2h/SPJis
xoWxhjRpxPMP9Hm4ONuovXjlGbIBFzKVO+eFAjK48Jq5rd/1f8k2XIyOrrUc
OYXM4aJ9Buegz6/3SnO54AadH19zi8zjwrWlpHVaNjm1+/MsqmDvCSJncXEh
t+zBkGXkAi4Grxg1K1mTrOBi4RWF1YgP75Su48I2ZrrlkcvkJi5eaG+yXJhK
buNiXONT/6bNZFYANO4q7kvnktUCYBF8JAuqZHYA7t6/8OVPYzPlD8An9dLW
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
+L40YeYfDzXWzEOWU5n5x4PNP8HpO4qZfzw0y0MvDe/DzD8ecUlBFRFf6PfX
Ih6BVbnhRk+Z71M8FHfm3XesJdvH40gip+bpGeb7FY+hJXHzr+0je8bDOLjf
H7aI+b7Fo1Mi+/jGnxwej9nnT98ca898/+JhstzE6bYZWRyPn70HWHYy39/U
eByuGrUyexA5Ix5a6/u83fmWvv9Z8Zhws3fZ10JyXjwuSNvmuMaQC+JRbnLX
8sMyckk8fozs37V9CFnRbdaa0S4P6PlTEw/vxdUhTvvJdfGQvPlYId1CboiH
5Y6K3O+TyU3xSOpfVpDVSs+75nj4TXzmuKOQ3BaPYk7R4Hsh5I54DH/vM87L
kMxKwNB5j+7Z/6TnqWoCrg+T/Xv0IlktAVqLays50WTNBASJj08QmJDZCZhl
prtV6xc9r/USUOo5OmbaRbJBAk7O2zDpYgTZMAFi9avjb80nIwFC7TXaPt/p
/WCRgOJZI0+kF5JtEpC31tPGwZ9sn4Dgw8+izk5l3i8J6HuXKzv9lt4/ngnY
1xl5c80hMjcBdqqPwvZvJIcn4NrOP6d3jyLzEnB4/o+UFffo/SZOQIN18rAz
yeTUBFiudZj2yIKckQBt2a3i6p7krARcsnWMj7xE78u8BNhcDl7UFUIuSIDb
f8UHLfXJJQlQ6LbPD22m968iAW/abYUR2eSaBPQqtmM5OZLrEvDqn759dYaR
GxJQsrff+9vXmfd7AjhWJ9968cnN3fNxGDT9mwm5LQE7K/TqA7/T/qAjAbFF
vz6+O0lmJeKO7gE/Z3eyaiJ+DXQ0v6NNVkvE/brqhSse0P5DMxF+a97PqE0h
sxNhbGZba2dB1kuE/71pZz+xyAaJ2N+LK9l3nvYzhokw+tNywyWQjEQ8VQ9q
N2P2PxaJ0O5o2Wr8ivZHNokwdY8T/buPbJ+IzAF58vT1ZE4ikuqdiv8MIXsm
YtC2qdNTa5n9ViK8rzuoWieSwxPROaz32oWmZF4iclqFauWttF8TJ0IrVawX
7EpOTYSJzYu8jAba32UkoilXW3+uFTkrEQvWlBtbV+6j+SfiyK2UWS1G5IJE
7LK67ji0kPaLJd2fVzXuWcVksiIR7A9lt1UP0v6yJhFP8r5ovx5NrkvETPWh
R5zT9tD8E3Gt9JN22GByUyJU2xNnzJPQfrU5ES31kzcc6EVuS0Rj0fuhxbwM
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
EC+aa1E3g503xWDyC9XNXV/ofConBtP1tkVtPEYujkGV6dAPHcFkcQxc1hVW
Vi4g1/b61tvrh3/ReVdDDArejZR7eI4sicGu6g/G2nxyewwyBMnhF5ax87FY
tBimxyX1JyvGYtrG70tjb9L5GicWzq8nHD2STdaOxZ4jBw+OWEtGLMp/hkyq
VCFbxELQJ1M+5wWd13F7f15WzXj/XjIvFiOWBVzv9CDzY6HpeSolfiY5JxYT
JEse5by/S/cfix3Vbo+LgsjiWPydkPBt2l86L6yNRe3O7co6InJDLJw62iZc
GU2WxGJ789u/j0rpvLE9FgFRVUX+C9j5YxycuW4fMq/Q+aRiHMwUAq4ssCFz
4lCnKJ7k8+4m3X8c1Fs1OmaEkREHntvFkXH9yRZxuLZSI4FbQOef3DiUN8aO
fTSdzIvDo1jdBkkNnZfy4/DvzgeCRCtyThymhe6def49na8Wx0F3alrJ5miy
OA5d5jUP/xlGro3Dm4079owovUb3H4fEvkYtV5eQJXG966mIrDEP6fy2PQ4O
s5d7K/mx89x46C2+YSvuS1aMx5BjLVN/FNH5LyceK14Pq3ynS9aOx8olzdf5
9+m8GPGoPKOgfd2fbBEPpaONR2sHkrnxkDFt7+9VeonuPx7rKtB1yYjMj8fG
V2E699/QeXROPGqCHoXnJ5CL42Fo98lthBpZHA/3PYZlZhfpPLs2Hn6xqq8W
O5Mb4pESN3d/ixxZEo++xpuEtgfoPLw9HucPuasmmrLzcT5OTTW49OLpBanl
+fjvRUzp4klkRT4Oaw69px5QI7UKHxl6Y0fnnaXzdg4fazJerMgbQNbkQ/JN
Q3mK/Tn6vPj4HfB8otnBs1Lr8qGxObJf3//o/B69r6+Yp7/OkmzCx8Zofx2j
0jP0efLx1JVneqeHzv/t+KiddqPq5zoylw9hbs/JuuOnpfbkI8Q9xm72UDKP
jyNrFpUZ+1VKHcHHSdl1W/rcpu8X8Pn4R7bmq7sWWcDHQ+V7gvDck1QPPqK2
jewz/8cJqfP5uH7lc1uxA7mYj0LjpY3nLtP3F8r42HLTWkGoRRbzccwg4MuA
HcekruJjocW5g0v6k2v5sM8f6KQRRt+HqOfj05uVE4S3K6iefIi+rLeYf/yo
1E18LDjZ9mPNjiNUXz6se96nPks5LHVz7+fbM2Xpk5BDVG8+IhVSdFd60Pcv
uvgYN6N8xayN5VT/BOivHjY23baM6p8AOA6bYWddSvVPQNeXtxd3WR+g+ieg
KuVmh+06+n4HJwGTnLR3pzrup/onoGDri+jpXvuo/glYx1skbxy+l+rf+/q3
tm5pFOyh+ifA3zB08f1C+v6ISQK8PnW/zvDdTfVPgOnm0pdW+wup/gm4rqku
6nqzk+qfgJR0YXmk5g6qfwJuf/6c3xiST/VPwK0MX+7fa3lU/wSMluUd6laj
76/wE5Ba+fZmXeIWqn8CZu7JPbumJZfqnwCbHZGqhXY5VP/e+/2TH7dyZybV
PwEhBbfmX94spPon4Nmg0xU7tqdR/RNw/Jr6jtryZKp/Ap7oXf9H83oC1T8B
ilnm15M/xVL9E3Cw/LNWH6cIqn8Cisdy75R8DqL6J+Boc8SC/Zo+VP8EPBz6
91X9IS7VPwEOgshDDemmVP8E1L8d7TSocImBtP4JMOnxepI4c4PUMonQ2mdm
q7PCQ2r5RCiPmbGizJkntWIiRo0dOfWofKjUKomwqii7/3BbpNScRCwzUzhg
MjBOas1EPFdV8FaZmyC1diL4O1dXPF+bJLVuIrpLHvZN806RGokIMo2pmBmS
JrVJIv5RVTX9EJgutUUiDlTeuHrDJUNqu0TcTx7CazPNlJqbCGGI9nPfSdlS
eyaiWN4o/EhkjtS8RESo+3703JArdUQirDc8+xOis1lqfiJ+74wf+FJhi9SC
RFxYO00ofknOScQ+8WPFX+Vbpc7vfb9j/lt9OWCb1MWJyFz6asgE7TypyxKx
uL1tzshPZHEiMl7OPVlZvF3qqkRMbhQXK1jmS12biOThb0dr/iHXJ2JLlqH1
8L0FUjck4t/0sznPl+6QuikR/Y2tJ+e+JEsSUbjmeKB+6E6pmxOx7e+tNx39
dkndnoik8sz2qi3krl63CcbtGVtI9U/CkK7q9tNFZPkkJG427xmoWkT1T4K5
ocfz0jyyShI+DpSbsmvQbqp/EmKH3Yv9Hk3WTELTjQlJFz+QtZNwR+Lemjql
mOqfBMGHPcrf7MhIgk+t3oBZArJJb/7nqF36p8gWSZjZHlU0VUK2S0JWwZkX
P+T3UP2TcF+1TOPILLJnEio6DZZZryXzkjDRa+fvtjByRBJaL+cqCreT+UkI
7rA11qwkC5KwJHu8zb1Gck4S/rOv+5nRSs5Pwso7PhLHfnup/kn4+xHnLVTJ
ZUlQlFPW8ZxDFifBMntkxyFjclUSXt3IEkxcR65NwlvNnK2N7uT6JBz2qyyp
CyE3JKHH/1/jX3xyUxK+rPr7MyaDLEmCm9pZnbVbyc1JiOxnG5myk9yehEOb
XKeO2kPu6r0f14LDQ0vIMslo3LfZKbSULJ8M9XMleavLyIrJkHytKNzDrqsk
40Xlh9MhrD0nGU7dFRPusNfXTMZ+S79+J3eRtZMx4JzD1hl5ZN1ktE30bV6S
RUYy7JyUVb4kk02S8atx3qxlUWSLZFz1bp+1zJ9sl4xyDZHSNy6Zm4yQj6uv
bLAieybD/IjzDP5SMi8Z335XqnnMJkf03t+etyEjJ5D5ydi+R+nTlkFkQTJq
jZ7rv/vB6p+MTda6HMXXrP7J6HHfNG/MDXJxMi6bXhgx4Di5LBntbves3+ST
xcmo0BgTfCiOXJWMg76DWr1cyLW9eS86Z6mvINcnI3lua9HzqeSGZKT53Mzd
OYjclIzOZ4Nt3D5Tf5Ak41/Nm1MNbpGbk3Ff4Yix1iFyezKUZZ806qSTu5Jx
92BzG9edLJOCO2NeVBxdSpZPga5k+BiN8WTFFAzYHbk2v4P6s0oKcufvKTYr
Yf0/BTxTxdcB61j/T8FY9fKrQ+RZ/0/BQG1xy+zTNH7opkDlV82dN65kpMDv
eNXzacPIJil42a/Wffg5Go8sUlDnolVa4ka2S8GuHaLaFgUyNwUtr0TnP52k
8c0zBV81+uUeW0/mpWDxjfYRxn9pfIxIQXG269CKvWR+Cv77tl2zy4gs6H2/
1yXfNN/T+JrT+/5GVraZppLzUxCjcyLGZTK5OAWedrs+xF6i8bosBeJBrq57
uGRxCkIWzBn6iI3vVSmYOMv3s3o+G/9T8PSfmubNc9j4n4KKoZOfTLtFz4uG
FJjmd0d1upKbUmB5pm/Itz/0fJGkQNEl3mr+VnJzCkITp2een0ZuT8G0Na5J
W2vpedXV+3mWzoi9aEOWSUXc1qWHzFro+Safih+P50xZFEdWTMXiHL/OLcPI
KqkY3byh22k/PR85qZh2OWx4yQKyZiqEKY6/vOrp+aqdihFVndan7Mm6qVC4
xjuR2ULPY6RiVnFy7q8oskkqdFf4W/4dSLZIxeP1o1Gyg57ndqlYGaC3tWMq
mZuKcSfePn8QyJ7/qbi57erx6dlZVP9UbBWc2tJ5iOYLEamYdObpEt16EdU/
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
WVGEP1GTtNTmk1VE2DT5h+qshWSOCDFGckbvFpM1RfBZPWioEcjaIpS+uvbF
bBnb/xXhuuV76/+MyRDhikMfsZ0J2USEqzU7Qh1Xki1EOPBFWWXoKrKdCGse
HR7kY07milCSF3wlaDXZU4Sxa03Oaqwh80RYOrTRJY05QoS45MgF25j5IriP
cjlkwSwQwabeU6+avV6OCH/nKnMbWV6+CJq787cUsPdTLMLyQbctFM3IZb3v
305juI4pWSzC5KBjtkNWkKtEyE1RyM8zIteK8HaF+9oGQ3K9CB7G/gPO6bP6
i+C0xH7+ej1WfxHGix7ZHtJh9RcBuwe1Vsxl9RdhZGRWuOcsVn8RZA24YQ+n
sfqLsOTxB6+fk1n9M7Fg8+fGOxxW/0wYvs6Z48B+fxQzkTfefGAx+/1SyYTS
xpZnO9jvHycTe8xip5oPYPXPhIv6ptDTsqz+va9fOmfp027W/zMhO/OmUuU3
1v8z0Vit523Wyvp/Jv7Tqr+54x3r/5nwjXhTvf8F6/+ZCH8x+azXQ9b/MyGx
srJoucX6fyamSFb0aLD+ystE6HBZU85Z1v8zkZi65eSjY6z/Z+IMT+3KyjLW
/zNx2PRVT0wR6/+ZWB418L3fVtb/M6E84X2PqpD1/8ze+Vjl7cx41v8zce9w
zaPzIaz/Z2L3N92io16s/2ci1dG2jOvI+n8mbv7RjXxgxfp/Ji66tG8duILc
kInnT0Pj5fTITb2vn1927oIWWZKJG0orGwwmkpszMW797yXJI8jtmbDLmJee
KU/uysRwE7P5Dt1s/M/CihVuV9pb2fifhaNtkefMJGz8z0K63OpCv0Y2/mfB
ZyOvxfYymZMF7pkFGvKVZM0sKOdWNyaUkrWzMEnuUeDlfLJuFs7c5qQ0pJOR
hUM2rZkHotj5TxYW1RgrrPAhW2TBVuFj0vENZLssfHY1CfpoRuZmYTOS7T7r
kT2zcPqOV+XZ6WReFk6u4g2yG0uOyIJ1TOWjiwPJ/CwsWSij1dnJnv9Z+PbV
fdvfe+z5nwV5paOvyivY8z8LOpzx8p0i9vzPwuNzCwY892LP/yyIxx187rac
LM7CsAt20bkTyVVZmMExf+HUQ/OP2iwUFZ/+de8JuT4L0REtV5tPkht6827a
LCrJJjdlYdu9JBN5b7Kktx4aI94pGZGbs5A/4bzsVVVyexZULfW3TPxJ86mu
LGSreKRNbSDLZOOwxZC7z8rI8tlIVla0X5RAVsxGdMHK4cvtySrZKNDe2fJX
m8zJhrbJsxue8mTNbFzb8aIo4RWb/2XjjoePhVklWTcbkgbD+qsiMrIRpTv0
yzfnXRf+B1v7jw4=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GuGvlw==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-2., 0.07009762552475604}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-2., 0.07009762552475604}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698469943974267*^9, 3.698469970044737*^9}, {
   3.698470107328289*^9, 3.698470116667494*^9}, {3.698481384616886*^9, 
   3.698481412261808*^9}, 3.698481524038104*^9, 3.698494014689568*^9, 
   3.6985036157679863`*^9, {3.698505664074839*^9, 3.698505675203444*^9}, 
   3.698505706744568*^9, {3.698505738431473*^9, 3.6985057860874443`*^9}, {
   3.698505847732589*^9, 3.69850588992857*^9}, {3.6985059216233892`*^9, 
   3.698505938460219*^9}, 3.698506081280951*^9, 3.6985061756350203`*^9, {
   3.698506208351253*^9, 3.698506238026346*^9}, {3.698506442623125*^9, 
   3.698506459723701*^9}, 3.6985064985028677`*^9, {3.698550258678968*^9, 
   3.698550275942671*^9}, 3.6985506183401127`*^9, {3.698551257631946*^9, 
   3.698551269709711*^9}, 3.698552478288631*^9, 3.6985606831794577`*^9, 
   3.698560763235948*^9, 3.709811279824759*^9, 3.709811725258622*^9, 
   3.7098125180858183`*^9, 3.7098126082726*^9, 3.7098127693302526`*^9, 
   3.709812872527194*^9, 3.709813041384952*^9, 3.709813280931357*^9, {
   3.709813544088724*^9, 3.7098135536429663`*^9}, 3.70981428310697*^9, 
   3.709814634868668*^9, 3.709814887765304*^9, {3.709815067288465*^9, 
   3.709815084432659*^9}, 3.709816689834647*^9, 3.709816925674377*^9, 
   3.709817276631494*^9, {3.70981760848983*^9, 3.709817616633629*^9}, {
   3.709871144126614*^9, 3.70987115739559*^9}, 3.70987146967312*^9, 
   3.7098716264379387`*^9, {3.7098719113936853`*^9, 3.709871920321082*^9}, 
   3.709872098333021*^9, 3.7098721299063387`*^9, 3.709872367106674*^9, 
   3.709873800074621*^9, 3.709873852186593*^9, 3.709873990470662*^9, 
   3.709874162299107*^9, 3.7098744336096687`*^9, {3.709874507980527*^9, 
   3.709874522506502*^9}, 3.709874557776506*^9, 3.709874837660089*^9, 
   3.709875994832974*^9, 3.709876214561326*^9, 3.7098898293834143`*^9, 
   3.709889908841022*^9, 3.7098916193474483`*^9, 3.709896803873766*^9, 
   3.709897112552024*^9, 3.709897541671219*^9, 3.7098980317819977`*^9, 
   3.7098985635717773`*^9, 3.709899057867793*^9, 3.709899532103715*^9, 
   3.709899874430395*^9, 3.709900732095046*^9, 3.709903581292119*^9, 
   3.709903985168486*^9, 3.709904905479937*^9, 3.7099051229899607`*^9, 
   3.709905389421441*^9, 3.709905668911672*^9, 3.7099058707413197`*^9, 
   3.709906281560294*^9, 3.7099071756812553`*^9, 3.7099080703066063`*^9, 
   3.709934048263256*^9, 3.7099341524440107`*^9, 3.7099344546867657`*^9, 
   3.7099348139589653`*^9, 3.709972733756256*^9, 3.7099729154580936`*^9, 
   3.709973213270813*^9, 3.710060483772491*^9, {3.710060759552437*^9, 
   3.710060771869678*^9}, 3.710061106765864*^9, 3.71014202965142*^9, 
   3.710164495561934*^9, 3.710165103481689*^9, 3.714324363835582*^9, 
   3.7143751963255663`*^9, 3.71533238866479*^9, 3.7156276946482697`*^9, 
   3.7156628554984818`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_error_position.pdf\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.71005592898532*^9, 3.710057803737721*^9, 
  3.710060307706399*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.709890023307577*^9, 3.709890123934219*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error velocity", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}, {
  3.709817225495492*^9, 3.709817226500821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xR", "[", "i_", "]"}], " ", ":=", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"stateList", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"stateList", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"stateList", "[", 
     RowBox[{"[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "]"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"errorv", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"stateList", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"25", ",", "26", ",", "27"}], "}"}]}], "]"}], "]"}], "-", 
       RowBox[{
        FractionBox["jxy", 
         RowBox[{"l", " ", "m"}]], 
        RowBox[{
         RowBox[{"xR", "[", "i", "]"}], ".", 
         RowBox[{"Skew", "[", 
          RowBox[{"stateList", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"28", ",", "29", ",", "30"}], "}"}]}], "]"}], "]"}], 
          "]"}], ".", "e3"}]}]}], " ", ")"}], "-", 
     RowBox[{
      RowBox[{"pd", "'"}], "[", 
      RowBox[{"stepsize", 
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}]}], "]"}]}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"errorv", "[", "i", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"errorv", "[", "i", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"errorv", "[", "i", "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
        ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550255215838*^9, 3.69855026401581*^9}, 3.7098170446596127`*^9, {
   3.7098170991440277`*^9, 3.709817188882389*^9}, {3.709873588937932*^9, 
   3.709873589469365*^9}, {3.7098745700898848`*^9, 3.709874581133526*^9}, {
   3.7098746331639423`*^9, 3.7098746442518673`*^9}, {3.709889939512244*^9, 
   3.709890014492939*^9}, {3.7098901128266907`*^9, 3.709890208320529*^9}, {
   3.709890245923353*^9, 3.709890251519005*^9}, 3.7098916791100492`*^9, {
   3.709891709194422*^9, 3.709891712857273*^9}, {3.710060783222735*^9, 
   3.710060807396792*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k8VO0bP/Bpkza0U0g72tCmIp+0oZIlpdXYlyxj3xmMmWHGEoV2RaVN
KkkrlS1Pi0rS+kiSktLyFKX8/H5z3d/X69c/z+v9nLnnOte55pz7PvdV4x18
rJx7cziclj4czv/9r+xPuxHn//+DnbFVW3wCg+j/y2OJXfmszYFCshJWLjo8
rfVJKnkE7u2YHDEwMIOsjABLH7tew/aRVWHxetZNhyfZZA0Unrwz6+iRHPIE
TLZfLy33P0qeBE35m4uuLDlOnoLLBn3dYxRPkTVxyLzXn6Ev88naiJ1wz2z2
4wLydPgOClh8ddE58kykvzOy0Dh8nqyD3iXxZZvlL5B18dWxK8/Du4ish5er
LtaY1F4kz0Zc15KaLwsukeegZd7rTu7By+S5GKb6d+OOvlfJ83BDVHI+0v0a
eT74dx9Haty7TtZHm//1zwtUSskLMCLmRZ3+P8wL8V+CW+GAyBvkRVAR9lM7
PvMm2QBbnOtChjcwG2Kkz+Hey3fcIi+G5VP1ygXGZWQjyJdvy237ygz0P+Rh
uiWnXGY+UFXVPTfGuoKOL0Fmv9DLG/pU0vEl6OXe8PPZOTLHGO8rtBv6OVTR
cWN8aNo375HSbTq+FBeXbko1LCHzl/ZcLzUbI69qOr4MOjWjSx+O+YeOL0P2
966GL5VkznLMq9DZnxFwh44vx3PuuLOXNe7S8RWYdLP47IY7ZP4KbJEqKbgG
36PjK3FUT2No4/j7dHwlPv46/ubGP2SOCZLS1CqjF9bQcRP0Kjry53YymWMK
/t8rXVca2XFT+PxsVbea94COm8Fm9Jzz4gQy3wx7nVf83fyCHV+FL9ceLqqa
+ZCOr8LxvU8P3uaTOasxaJ2c7ZaH7Phq7D6imBQx8REdX4OtMWpOUwLI/DV4
8F2Ps76MHTfHY9W9cf1H1NJxc6weYjt0viOZsxZZ+9PuNZxlx9eiS2FgE4fz
mI5bYJY4Njp9DRkWOOGm+3jnHjLfAusip4zv9Y5caoGxWmfzavXqaLwlzu8r
vTIoigxLbDReXHS4isy3BF9q3ytj2BMab4lMbteIxs1kjhVGO5SExOWSYYVn
noHlQR/JfCvM3D33aPHsehpvBdEsydPlYWSONdb8SdMbW0qGNUpFQ/bM7feU
xlvj9xFnxTRTcqk1zEadPD4jicxZhz/5/Kx+NWSsw4S6P5NGD3tG49eh60fs
OTtrcuk6yF/kl7xIJ3NsIL2o2yx5RIYN6i6veOkx7DmNt4GHYnxIsAW51AaS
6RuOn0kic9ZjSNDa6KHVZKyHxZT9mnv7vaDx62Hj4v/VDOTS9Tib62A6LozM
2YD+y3IvjTpPxgZ8vWH7eVYrG78Bm6KKi9wnvKTxG6BrNb/rpi2ZY4uEaXvv
LEwmwxbpH/rZ1Nwk822hduNrY+wPNt4WjpunNllqvaLxG/FFbXezwWYyNkJS
tSJrqZTM3wj+Q7lK56vk0o3oU2/GzWll4zfhjn89r0vlXxq/Cfcagyf5riTz
N8H7YVZ5rwBy6SZ8uNJ2Nf8gmbMZmrp/U0Oq2fjNqOYXvLX7zsZvxgzp22vn
FBpo/GaslpuvXD6BzNmC5kzjKNd5ZGyBKEUlbI8pmb8FPk/G5GzbwsZvwSXF
w/sLvdn4rTArPT9mP5+N34qhdUefKKex8Vvx/MA/+zVz2PitmBqkZHz3PBu/
Dbo2ubn9y9j4bTAJziyof8TGb8OIpWGbl7xh47chNu9XrvFXNt4OKhP4GS85
r2m8HXaJKoyHK5L5dqh4FVzepEoutUPa+nJja20yh4uPGd3NdvPJGlzkpsxs
HrSMfR8XFZ/ywm0tyFwuDF1Ovl+xhX0/F2vefQ6pdyVnc+HbuSxEwZ/F40LT
crLBh0hyAxe/bq9V9xKz+PZwbbaLzEpj8e3x6IfLVa99LL499OSFxp+OsPj2
OHVJHDb2DItvj/bRMQ9/XGTx7ZG01+lKTCmLbw8N1xN516pYfHvcaPigeKqG
xXfApht8N/N6Ft8B689Pm3b0XxbfAa+zCh8UNrP4Dniaml4X3sbiO6DufmZh
1zcW3wER9jua9X+x+A5Y3dTVrMtppPgO8LU4O+t9PzLHERr1KQu4g8gajihr
mxuRpUSGI4zCznqljyRzHTF51fxYqzFkviNOXX8+7Yk6OdsRTwvWPJswkVzq
CN7J9F/zprL4jjhq+8+PEdNYfCccntc69/pMFt8JSxKEY+fosfhOkAjT+4fM
ZfGd0H1p9nqJPovvBIO9UXY+i1h8J9xaZx48eTGL74RdxQpt+WDxnRBjnzxo
yFIW3xk6vR4qL1nO4jtjwov3NqtXsvjOmBF0++8sUxbfGS1+483azFh8Zyjk
L3KPX83iO8Mz9amocw2L74y6IyPumK1l8Z3RELxkfZgFi++CvmdrkWDJ4rvg
bYJZdogVi++CtBilOFNrFt8Fr+18v3Qx810wMTquLX0di++Cx7Yq/oo2LL4L
FNcWBvOYG1xQdyL0w0Vmjisyy7UKm5k1XNHPWuXiH2a4ovH69Pv/M9cVVjse
P3jHzHeF8T9Dk68yZ7vi1jSvOxH/i+8Kd/O+a7X+F98VIWkJD26y8+W4oe/l
VQPMmDXcMEJn8ZESlh/c8LKpt/mk/+XvBp/8/4787/rw3dBbbYHpNXb9st3g
eLbs7ld2fUvdEOgUcEuFucEN5d4qhXqsHhx3GBhJJy42Z/HdoZFakmLA6gd3
9E6s5c1k9eW6o1/TrAUjVrH47nD8kmLzif0+st2hJ50445oJi++Oq3cPjY9h
v6cGd1QIHFIWrmDxPRC7Kfju+2Usvgf0MstnpLDfJzxwOFjjj7Yxi++B732d
4q6x3zPfA37c1D4rjVh8D3gHvr1Sacjie8C/T/dbIwMW3wNe39qLzixk8bcj
7IOj3egFLP52VAw5Nyh4Pou/Hcc+9Gm697/7bzumB3sNHjeHxd+Oc+qDjriy
+zV7O7zuq1fn6bD422H/Z/rORnZ/N2zHzxQV5ZEzWHxPFJxZ5gr2PNDwxEn3
YylOWiy+J7THte+NYc8PrifyLh5Iz5zM4nv2zK8a4UfZ8ybbE8v6fLTOH8/i
e+Jn7V7VM+NYfE+0fhrwIE+NxfdCXru7x96xLL4X3uk7/itUYfG98ChCe9L2
0Sy+Fzwb92ibsOch3wuDsswb1Yaz+F542Vik/5E9P0u98PDAbJXzCiy+Fy5r
a3v5DWbxvXHjylhV7YEsvjeSh18Z9Kw/i++Nvrt6acSy5zXXG2nnly6a0IfF
90bepWWLL7Pne7Y3/ms0lTf7y57/3jhSOT34wW82/3jj35FerhadbP7xgXPm
ksKKH2z+8cGkmLz5c76z+ccHhoOCq7O+sPnHB81r3ZZ9/8TmHx9M402LWPGR
zT8+OPGHtzLlPYvvg1N5P8PusfmrwQcOelk9vygWn4fxORbus16TlXhoLTO/
bfGKnQ8PqY2dz12fk3V4mHvnt28Amy/Bg/IE081Bj8kWPBQ1a7p6PWTny8OR
jYucNt4n83i4rMrXWHiHnT8PU49sdle8TU7l4eCvvYOelrN8eIipiHiUcZNc
wIPnhRNSkxKWHw8VM1b0/nSFXMND3ta3f4XFLF8e1uXsWj38ArmdhwdWLwrT
zrL8ffH3eRGnXz7L3xf26/Z0uJ9g+ftimJuf042jLH9f9L9wcNCgHJa/L77u
/K9wxUGWvy8abC9OCdjL8vdF46+dU9IzWf6+yDA9FpqTzvL3Rf6O7U25KSx/
Xxy+fV07U8Ly90X30nrFMBHL3xeCj0vXr4lj+fuicMSLEqVolr8vbGtvDikL
Y/n3fH/vzRzXIJa/L37fwYZOX5a/H9Z/XvIgzIvl74fknTbTW91Y/n5Y1Zg+
2cyJ5e8Ho3kzQjPtWP5+qFexb3y4ieXvB/8vAWO7bFj+fkjwPPFymCXL3w8j
r859PWo1y98Pj3fOftl/JcvfD897HxS9XcLy98PsESt3nTFg+fthFLfskjNb
r5b64QvP+1h/PZa/Hy6OslTcNZ3l74ePx8YfGjKV5e8HzJ8zyHc8y98fC8p4
v66PZfn7Y7iXyZifI1n+/kjKOzFCRYnl749Byb92TBrI8vfHkNl9F6j0Zfn7
4+ikr/k//tD6nOuPGX2XZl79Seb5Y4V5SbrHF7a+90eFtc8yTis51R/3t+9Y
GdlEzvbHWNfUBa9fkgv8obX6V+G0J+x9wB8XnIKtttSQa3rON/dGnt9tcoM/
Uv32rfa+SW73R9CLOzXmV9j7QwASFw+rGF5IVgoA323claunyBoBGG6608D0
CFknABztjtri/ex9JQBnhYWDB2WQLQKQLVLyMEpm+Qdg/YwZvjZCln8Aiub2
zl0dxfIPQGPF5thJQSz/ACi21ie88GL5B8Ds/Ye5Ac4s/wA8ET7u/vC/97EA
9F1csA3rWP4BCAxyq/RfxfIPgOOdslMCY5Z/ACT+7tF+C1j+gfC+9fK0gQ7L
PxDCX2m5jVNY/oGYt+LjXUc1ln8gbquZpJUMZ/kHgv93oO1/A1j+gdiaeTKu
L4flH4iJzfzP9a30PsoLhGiruvbGJ+z9NBCVWQsDxTfJqYHI2hYvcT5Nzg6E
R074pM+Z5IJApMelf58Yy96HA/GnZfvp3p7kmkCEd3b/SbAhNwSi1O1VWvFi
cnsgxlU7jUqayt6fg2Dw+6+OnBJZKQjfb3gkTOig93ONIJwo7C5r+JesE4Th
gt8io0r2vh+EBVceBhrmky2CMGCAUPfpTjI3CBaTurYODSfzguC6kXugicv2
B4IQfDc+w3IFOTUIa2LWtq6fRs4OwsQxaku/KZILgtDub7Bi8ne2HxEE+T92
B1ufkGuCMPuJSteyK+SGIPgVbR6ic4Dc3nO+vr9FJ/ls/yMYJ3UNJhc5kJWC
YaO3Jcd8GVkjGOM+Tqnwn0zWCcbnXZINk+TYfkkwVj+Yr2nXTPstFsH4ZjtP
aWIFmRuM5zE7PnsfIfN6vKEzf4mA7c/0xBvjhT0O5NRgrK97dzCY7fdkB6P2
sWJtvRq5IBgHdrV8uvqL7ScFQ7NNqDDxCbkmGBuHVG4deJ7cEIyQ//qM9Esm
twfj0M/7YRvd2f5TCFQaTjeVLCUrheD6muqLuWpkjRAYlhW69/9J+1s6IVjY
NTrm3X223xWCinZexrI8skUIRk4uW6fOJ3NDcGCPRVjABjKvx61GT1fMZPtr
ISj/bWW7qy85NQSv8xO/2T2j/bjsEDgNv3P16BlyQc/3e0e/cBew/bwQtKVr
pR23JdeE4HD33zku08kNIVAYypuT3U37g+0hcHx3Wtn2Ids/DIWPydS45Fyy
Uii2D/ozc1kQWSMUo2K8voSuJOuEQrBh3mUdZbbfGIruyI/p7i20X2kRCs8d
prmTi8ncUDg4eE93EZF5oZg/bUzC9PVsfzMUg0fW6YVNIqeG4tvZEdctvtL+
aXYoisYuf362hFwQijrvp+sPSsmlobjtAJWxG8k1oVhX/WDK1MnkhlAcuX/6
YHk77d+2h+JFdXJJxxW2/xuG1j1JL28KyUphKPer3z7FkqwRhtLRW35OHkvW
CQMn025qWRPtJyMMunHDrvXJJ1uEwaN2SPq7IDI3DBNTKvf5GZF5YTDmdr49
1p/tR4dhj/OvHYn3aT87NQz3nQY/V8skZ4ch7tK+oc7byAVhGLM2dK/jZHJp
GFb1+vVV9SPtn9eE4Ual+tGd58gNYbBVybG5F0JuD4PPb7nCu4vZ/ns4sCBZ
kNGXrBSOdyvm7ZleTfv3GuE4tymnLj2FrBOOIvN+WjXryAjH9cbv0rcqZItw
3P9jOqD+FfULuOFISW/NP5lD5oXD6enuTCc31k8Ix8uw801yM8ip4fgr1xY+
4w31J7LDEe0bnq3jSS4Ih+XyoKxx/1F/ozQcaQr21b2jyDXh0F685mCjHLkh
HId3r+RXplB/pD0cS1ZVPLqkzPonEfhnlsrvG4eov6IUgc7er9a2aJM1IrBh
cNj4uYXUj9GJQHrbnnMFhmREYPuc0nmOldTPsYiAy6r799dZkrkRmON4XpL0
nPo/vAh8fTPQYaQL6wdFoK39je73duofpUYgMDyhRDeCnB2Byesdzj3uTy6I
QNTJN2nv0qn/VBqBSq2sKm8Nck0EFk80zPI7Tf2rhgi8ufdj/K+F5PaefK7u
sxt8m/pdnEjUh42bWLCBrBSJh9byIz82U39MIxLCN8PPVwSRdSIRsajFfEV/
MiKhoPZusG8W9dssInHouuqb1dpkbiQiPVdl/XuV+nO8SHzXH3FrpgWZH4nU
+wa3jZqov5faM95u2L+jQ8nZkcgJeC93VYFcEIk8v8tKukeoP1gaCTPLZ7vD
Dcg1kZg26YAKjpdQ/pEoOx5lvPw59Rvbe/LJ6biooMj6j1EwrDFTz11G/Uml
KBRcqSocHEH9S40ojMuNXb/2whXKPwq6+WPC/dqp34konNcunx8xg2wRhW8Z
vvDzpP4oNwoL36u833i6mPKPwo3cuVP126mfyo+C1hTz9KFzyalROJ141uND
OPVfs6PQnbZkR0UZ9WcLotDv5eb044rk0ijsflR/LGNLIeUfhT+X1c+lnqT+
bkMUmlasWLani/q/7VFQXWB+6MJa1g+ORsCOzSVNuWcp/2g0t/cx0+qi/rFG
NDQbD+YKbMg60diet/zpZ/szlH80Yje2/eyvRv1ni2hovDpbZ/WC+tPcaCjO
9NF6cPAk5R+Nf66NnhbneoLyj0aZ1OGw22zqb6dGozXbu5nfJ4/yj0bMiI1v
qp9QP7wgGrVjbqkvLzhC+UdDK3P51TZpLuUfDZUJNTE3vaif3hCNL6lfnpda
Hab8o+FrIt/4dtEhyp+PJU22m2ZqUT9eno8xN4ZHzJh7gK4HH9P85MLmaVD/
XpmPkKkOcT7D99D14eNooOX7+wpZMmvyYVG2jW8+jPr/OnyYJy079lptp8z6
fDz/EL0mWjeNrh8fF7WOdKquob8/YMLH1saPB+xeS+l68mEgCZ22UT9BZls+
Tl6sDFY8GE/Xl4/bDeeue4yMldmNj79fbxkfmRdJ15uPjb1mO2yxp7+/EMLH
ldMejSk2PnT9+Rgxx2SE22QHmcV8aH9LeL+tchnVg4856va/dUeZl/w/Z/Eh
sJnL1+3lJHM2H/6xZo9vavBkzuPjUHrO1oiJQTIX8KE6/XP9H/kImYv5UJ70
fEZpC1/mUj6qblXcOHA9TuYqPjbX9CmaLxTKXMPHqfsTrfKMEmSu52P4jV3D
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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw923lcjOv7B/AhS9bKWoRBUkJj6QjhY89yki2RZdrTOu3TPjPNTNNsskTK
MgpFliIUIWvZkiUlVLKULeGoLPHr+5rr+Z1/zuv9auqa6/n0zH1f95PhLgEr
3DuyWKwQHRbrf/9vSXm4f8mqDehT8aVYY193mfW//wQbYPnfd+WGAeSiDVC0
3NwcX/RSa9ZGjJp84pqZNxkbcUDfuHp1X7JgI4abZZr0Layl79+I2OVPx2x2
I7M2oXnG32xuTzI2YVtDY//OXjX0/Zsw7NSPjJNnq+n7N4GdXeb2qBOZxcXG
Lrd041e80JrNRZ3hYNWD/c/p53Fx2u/TtIcfn2nN5WK30vhwylSygAvHxSez
raVVWmu4mPT9TcDNh0+pHheBMx44OQwj17b/fI/1g9p8Kqm+MzItz+y4n19B
9Z2xu+3np7rOZDhD12No7NKVT6i+M84Mqboz/EA51XfGnfcnJPzPj6m+M7oE
3IvwmEkucsbbzCplB/Ujqu+MJV9iT26qfkj1XdA85/TDnZZktgt2rLtRVSh8
QPVdkLzdYGv94zKq74JYO/6OseZkgQuMH07dOqetlOq7IDGxu+zM0XtU3wUD
W0Min627S/VdIHwwpvF5rztU3xWXFlU4vrx2i+q7omXf2ebeMSVU3xXNi35o
5FOLqb4rutzfcjD8xw2q74oFG7qmthRep/quGDrUdNYY8TWq74qK+JYV45Zd
pfquOL3zvxDjoVeovht2Vj/SG1F3meq7ofLo2onzki5SfTfIt/yzu2TBBarv
Bt3EpLRHnQuovhs6DrZUie+dpfpuaLWuOPt9bx7Vd8OUj/fW2oSfovpuOPV1
9iWvtTlU3x0DN9ik9Ew8RvXdETxtiNOUwCyq747FgRn/rfY5SPXdcWrNjnLX
cA3Vb/eXQwuyxuym+u6QN372MZFvpfrueL3pRqTuIDHVd8dOy9hZfVPcqb4H
Ttt9/35bP2iWtr4HDup2YTdNSNAaHph7boIgT7FNa64H1NabmivW79Za4IH6
V2HD/LpotNZ4oPyilDXELkPrIg+E6f2tvSg5rHWtB6LWjY/acfyI1ixPrMpZ
vLX+xjGq74m365Ilf0tPUn1P/Py6qG2bWy7V98SvZzkXV1Sdovqe6DDiT/Jr
2zyq7wmhTxb8c85QfU8srt4o6G9wjup7wnbSKh2WTz7V94Kdb82ilZcKqL4X
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
akv2tJaZTP/hMDR5V1c8i+k/HCEuz167gek/HBPM8y1LGbP4SH61O0dnNtM/
H/efvV3emTGbD3+neb8eMq/n8DFqpnyrL2Pwoff7bPMDpp49H1GWr7vpMOby
cTR1euZf5v3y+AjK/ZhZzPQj4CMze0TdOqbfpPbXj/xlVsBcDw0fdfNjltYx
1yuHj8c7tho9Ya5nER8mC36u3cFc7zI+wmyWPjZm8qjlIzi9YUkAk1cTH1lj
WgQKJk9WBF62cjmBTN76Eci2vtuXzfw+sCOQ4p7yctdwpv8I9F30bGnlEKb/
CJif2tj5pRHTf0T7vLvvXG5/pv8InGu51XOxAdN/BJ7KLx890pPpPwJ3XxhM
LuvK9B+BuIVdbS92ZPqPwK+Te0S8Nub+j4DPc1n0uxbm/o/An1TcGf2Vuf8j
MOnhL5bFR+b+j4Ag8sKxr2+Y+z8CY6T262JrmPs/Epsvum67V8nc/5HI3RFb
VfOAuf8jMbhj/zN5t5n7PxKhjkkHllxj7v9IzB7nZHzwAnP/R2K8feO+i6eZ
+z8SHauq9+/KZu7/SOit/bRtQgZz/0fiv+ED3sn///MvEs630/UztjKff5EI
LrcJjZAx/Uei564Ogl5xTP+RUK/etWtjKNN/JLg5c9m+Pkz/kWhYrhNt5cz0
H4ld39K7n3dg+o+C7PxT8x9LmP6jcP6bm9VXMP1HocBqVMJBK6b/KGgabcL1
xjD9R0Hixlk/cSjTfxT6j++q6NmH6T8KjeYBa/Z2ZvqPQuaP2r6vW5n1LwrG
XW4a1H5g1r8oePXRHEiqZtb/KCxxntj3exmz/kdBGHTsTM9rzPofhdh1Tyqe
5DHrfxTq8meWrDjMrP9RqFjmXR63i1n/o7B9Zme7DTJm/Y9GSm1/4Xs+s/5H
Y9aKCZdMNzPrfzQWpuauNljLrP/RkPA/pRyxZdb/aPg8CaxqnMKs/9EYXmnj
X2vKrP/RsEj8eSSmP7P+R2Pw8Llvbugw/Uej+9OqiPwvzP4vGvuWfLu2qobZ
/0WjxsF/ROpdZv8XjfFhI1oSCpj9XzRWJLIzhxxm9n/R+Of3z9R125j9XzSM
Z/eeNTOW2f9FI0J9W6dkM7P/i4Gq9M+GllXM/i8GpidNiu/MYvZ/MdhWePzi
vDHM/i8GfYOW33Dux+z/YtBktt5zxB9m/xuD63f+TJTWM/vfGMycvP+isozZ
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
7nDhv9o26/8ACSdXNQ==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlYjN//P/Ahki3JUr1tkywhZE+SpxKl0irJNtr3pn2vaWaqmamZeksb
IXuLJdlKJEtJtmQpemOIhCLKvn37Xb3uz3X9/ON6OL3mzKvnPfd9zhmazgG2
bn1ZLFabAov1//7u/dO5jPX//8Gt4i+yjmlB9O9KaNiiarGtD5+sgqB5RnK/
Ggl5JFQb+31RLf2XrI4NilVnizsyyWMxo3rPdavRO8hsKKzM2G+ps5s8EZyH
byq+q+0lT0JrH1fRNZX95Cko5H5/fIZ1kKyN1ve1g9+/PkSejokR+uyMmgKy
DuaYVNTcyCsiz8Lh7k/2F7yPkHUxe7RqbaruMfIcBFo9qNn8/jh5LjRMfRpm
NJSQ52FwhstJy8IT5PnYcyun5VBMKXkBmjedGmdmcZK8EGdKtX+ZqJ8iL8Lh
+Vt+HpMz1sPcienRmQdPkxfD/eT0y4M8zpD1sdep/MeEyWfJS7DUet6i1meM
DTDq8IkA/+wy8lIkP+InXDcvJxti4N+dM5V+M16GAXu9Ry8pPkcGjvoMvRDk
UNFrHuBY+Sv24h8yaznOes+SzjlwnsaX47+aSx+bVl6gcSOE7DFKqG4l84ww
fue2x4rCSho3hrq5mHNk/EUaN4Zq/Ib51WfIrBUoMu5Q051SReMrENx160N1
AJllgj+3Ug1nlDHjJmiw9Ot2/8uMr8Sgxesb4k0u0fhKlIwe4REjIbNWweVd
whCX28z4KpS6jn21ePhlGjeFvkbkI0U7Ms8Uy38rZd3JYMbN4LSPJc69x4yb
YbVliNxL9QqNr8ZL5yKRiTWZtxqqEw9PnyNlxs2Rp9E9fc51Ztwco40PFpj1
u0rjFpg3Y1dMnCGZZ4FTqsMX3wtnxi1hGm05zbyEGbfEaM0KmzevmfE1uN+t
xS0ZX03ja1BlvOjXPnsyywq8x+baV8TMuBWWZG1+oVrJjFvDQGj+IOMjGdYQ
uS7zXjWphn7eGkHjt9TNciBXWaNPxD756mQyywaF055tyDtLhg1mLOpzQus1
U2+DnxZ+456Pukb1NhhQKS68b0xm2cJ/r/eMP1wybDErcpfZpl1kni3KzqnE
faxl6m0xUjRC41wXU2+HlBavFWfG1VK9HS4UBCq+Wknm2eH5TnsTkwBylR2e
vTWue5BFZtnDIqV8ReYFpt4efbsrLPktTL09WmvZPjuVrlO9PYTTb6g+0yGz
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
bQk5Jwl7hU0WVi7k/CQUbd/yN3Y0uaDn/Unr3tjUOVL+SWjIDBHWxpHLkuBw
5pbxs3nkqiREbbmck/GGzjNrk7D5y8SPL/aQ65NgPGtwWZ0DuSkJI4eaOZgq
k+VJyJdembu+xoHyT4L3fnnpjzhyZxLi0t/qT9cjf0vCK7+QWa8+rqX8k3vW
6xc6tY+QlZKx49vIV5/cySrJ0PqqF4CJZPVkuA0u71J+ak/5J0N23a5pww6y
djLU19kLJ60j6yYjaOZ7jvtIsl4y5htmPxrfQOe5SMZbJ85G83SyaTJS7po7
vVlDtk6G//R9q74MJTsmI/rbiryAW7aUfzL27f17z1ZK9uypn/DQf5clmZuM
Izk2Hy2UyRHJaL9X93LzHRvKPxnzgksb69PJomScf/twU74tOT0Ze3QKVG6M
JOckY3/fyLQ1jdaUfzLCBlbGa+8gFyTjo/lqqcMmckky5oSIvR+yyWU99YsC
9ppft6L8k7FpyUxWog25tuf3p2LEs39M59/1yXCfGnrxtAu5KRks5/PeBzos
Kf9ktM7LMBwbQW5LxpNBlgM0FMidyYi85Lw3S2ZB+SdjikPF9/R/yCwRCus+
DO132JzyFyFiraT93Tyyigj7XuD0ikurKX8RjjVOzx1kRWaLsMD70+PFT8wo
fxEuc/rcue1D1hXhtGlhc/UPU8pfhJv8VZFjJGSIoHDdde5NDbKpCKkl9fvv
F66i/EUIby+LmaNPdhShLu583LO6lZS/COUzf8Y2byB79tTfZG+d2EHfJ3BF
6Jzrp3kijhwhgh6rrE6oQuaJoB0dGL1j3wrKX4R6nz2uH+aT03vqhzde510z
pvxF4GTN62PhRM7v6ee4WfCaDiPKXwT9Ieo7E3nkEhGE77r7fxhBLhNBfUqk
nejwcspfhHHmnguslpBrRdBIyApYfgeUvwgT7t5o3OhCbhJhvN3qYsMPyyh/
ERxutl4dqk5uE6HvKl1VreWGlL8IPP1LN6K8l1L+IuR9umAxfLsB5S/GTCWB
asuFJZS/GN6JNufbX+tT/mJUcL8OmqFKVhfj4ZFQ+Q6DxZS/GOVzDyxb7EHf
52iL8SG7wVxh2yLKXwzuRQ/TL+cXUv5izFCIzxnWtoDyF2OFp7DSYgTZVIxq
rdsbig3nU/5i+Bkv1J3mPY/yF2NyUKnG1cy5lL8Y/s/ejoi6NIfyF+OT4t1F
Zh26lL8Ym8csqJitQY4QY6d+mXydZBblL4b99GkpES90KH8x+j7JEVfqz6D8
xbhsZDFlasY0yl+MKWPHPT/+birl3zMuO+jvsGIK5S/GmAEBZ9V3TaL8xbg5
b0Jj9+eJlL8Yp7wKx7xZo0n5izGkkDWwzWoC5S/G+KQsgXbfsZS/GFYxCzz+
PUXfnzWJYWe7soHtMYryF2N07IdlDzRUKX8xVP7THLohdyjlL8bTBduO2PxV
pPzF+Du621/qxqL8JTiwN2ry2Jyuyt78JYj/cmhgftajXqtI8DPZYt9v3WbD
3vwlyPmjeizrd1ev2RIEax6U6mSzlvXmLwEree9mzB7Qa10J0nd8nqtwbWiv
9SQYtMDEV2+2aq8hQaCljdHlqFG9NpVgevg4n7E16r22lkCxblq78fCxvXaU
IGuRGn/Bxgm95kigculZfZidZq89Jdg8Ld/g1LeJveZKcCdK8K1+16ReR0jw
2M3tYZ3RlF7zJFilbpK05/XUXosk6Cwuz7JIpe8v0yV42uAVekd3Rq9zel7/
S2TA5Ac6vc6X4NCX7yfMI2f1ukCCtaKpB/co6/a6RIKHqywy4uTkMgmGeg8c
vLx0Tq+rJChMqHB9JZjb61oJGpYXv/FaO6/X9RJo3l18/+aU+b1ukmDmsCHW
Q76R5RJ4NsyLmnJ9Qa/bJPic5bhVY8fCXndKoFb4pH+L96Jef+v5fQxUckpY
otdrVgqMlbSMPg1e3GulFASt27993n9klRQUKZr9Y3xEv9fqKbDsgGx8zJJe
s1Ow0MZk9xVzA8o/BTrG59/OHrOU8k/BucxGxa1vyXopKPY/EWFfbkj598zX
5V0+QETfH5umQG3b/n8MZoDyT0H45pcHbbaRHVNwyLF1qvF3MicFeNdgPIyz
nPJPwatxeVmnasjcnvefMfDsnJlGlH8K5Mo1CxIzyLwUfI/x3XX0O1nUM56a
GVS4xZjyT+lZv76cF15NzkmBJHKE06gZKyj/FEyzVXDkp5MLUlAbUrPj/Gdy
SQr+CTguvuxkQvmn4Hb05qRtF8lVKWgIuNM+fdJKyj8F5oc8RkhE5PoUrFzU
z/xYO7kpBc2pSs8yrVdR/ikYH+A3atkpclsKHiXemVWgZkr5p6BdFO9+J4r8
LQUGPv9+Kn1CZqXi0sV2BRvQ9/lKqfC02lRzeB9ZJRXt7/ZzTvdbTfmnYvHJ
5O5wdzI7FeM+v97dcY2snYrltrfDR04zp/xTEbgnYdtbMVkvFVcrcn77vSWj
5+fXKV/JW21B+afCbPbatpAisnXP+8nw9e8eaEn5p+KA72cbDS8yJxXaP1al
PL9G9kzFyoUSZfMpayj/VBh8rL5hJyRHpML/Guv49+dkXir629rl6y+zovxT
8Tavj3BkHjk9FX0mbNdP/EbO6RkPj7A2mW5N+aeioUbfdLgjuSAV80+LAg4m
kktSsSyu5DjrJLksFSHBrp2acnJVKjpUrqspDaX/X1GbCiNtwaDSxeT6VMRu
ryke705u6hk/7PrEYhtZnopS++b4JZXktlS83+oa9OYNuTMVP173y1g7ypby
T0XFi7zKOJBZUuhO/1rv4kNWksK46NEBhSyyihRHvEaN3FRFVpfiozT7q/9b
MluK4tzIqXoj7Sh/KdacVY0+u5SsK4WOUOn6O3eynhQaRzmv76WRIUX3hG3F
/mVkUymmVma9PScnW0txfebviLNK9pS/FEmnfkx30SVzpCiYH3v//DqypxTP
PJaaXYkjc6Xg6d3dGHqQHCHFin6VL+7eIPOk4OumHGv8SBZJsbj8fkai2lrK
X4rd7ze5PzYg50hhNWnSj/tbyflSDIoN1ApJIhf0vP9bH86cKSKXSOGWWyHe
eZtcJoWsPSxQ8xO5SgrBlo0rVo2i/29TK8XC+baPBuuR66XoVP89wN+J3CSF
avS9At8YslyKunW6mYq7yW1SaDq4H9a/SO6UYue/DecGyMnfpMht/FDsy1pH
+ctQYuHl6MkmK8nQ6jxzz/dlZBUZ7Ep5nAlbyOoy3JOqxDXFktkyGD3t36yV
R9aWgSVQ28g6R9btef0+u177NpL1el7/cr6bZzcZMowK+nTxo4oj5S+Dw5TF
LwbMJFvLMFPU/1yhKdlRht2JLQsfupA5MpTH+65OjSN7yhC7y7GtLofMlUEz
K13x31JyhAyXGgx3PblB5snw/p380PGXZJEME3Mc2Yq/yekysCN/KclHrqf8
ZTg/rNDZQIecL0PWsLtz/jEmF8hw+Yc0NmI9uUSGoL/HrRwCyGUyqBnfPlUq
JFfJMCTa4XxqLrlWBuOdeREtR8n1MqjOfPvn9CVykwyyDKmHwgOyXIa05223
6l6T22RwquRZD/5B7pSBd3vQ8KuDnSh/GSKnxMzvHktmpUHRWK1lx0yyUhrk
XyJNzy4lq6ThikZxhqklWT0NT2umfrXcSGanoaCis6DGm6ydhova2S9ORJB1
06AfbPZcOYmsl4YRsmev/ttGRhqOuLyeP2aP07L/A4uv49I=
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.5723422913713156, 0.5729970022566386}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.5723422913713156, 0.5729970022566386}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698469943974267*^9, 3.698469970044737*^9}, {
   3.698470107328289*^9, 3.698470116667494*^9}, {3.698481384616886*^9, 
   3.698481412261808*^9}, 3.698481524038104*^9, 3.698494014689568*^9, 
   3.6985036157679863`*^9, {3.698505664074839*^9, 3.698505675203444*^9}, 
   3.698505706744568*^9, {3.698505738431473*^9, 3.6985057860874443`*^9}, {
   3.698505847732589*^9, 3.69850588992857*^9}, {3.6985059216233892`*^9, 
   3.698505938460219*^9}, 3.698506081280951*^9, 3.6985061756350203`*^9, {
   3.698506208351253*^9, 3.698506238026346*^9}, {3.698506442623125*^9, 
   3.698506459723701*^9}, 3.6985064985028677`*^9, {3.698550258678968*^9, 
   3.698550275942671*^9}, 3.6985506183401127`*^9, {3.698551257631946*^9, 
   3.698551269709711*^9}, 3.698552478288631*^9, 3.6985606831794577`*^9, 
   3.698560763235948*^9, 3.709811279824759*^9, 3.709811725258622*^9, 
   3.7098125180858183`*^9, 3.7098126082726*^9, 3.7098127693302526`*^9, 
   3.709812872527194*^9, 3.709813041384952*^9, 3.709813280931357*^9, {
   3.709813544088724*^9, 3.7098135536429663`*^9}, 3.70981428310697*^9, 
   3.709814634868668*^9, 3.709814887765304*^9, {3.709815067288465*^9, 
   3.709815084432659*^9}, 3.709816689834647*^9, 3.709816925674377*^9, {
   3.7098171305857964`*^9, 3.709817189392317*^9}, {3.709817609048367*^9, 
   3.709817622349598*^9}, 3.709871334541585*^9, 3.7098715118404703`*^9, {
   3.7098719143329773`*^9, 3.7098719226410227`*^9}, 3.7098723774903173`*^9, 
   3.7098735905238457`*^9, 3.709874015677578*^9, 3.7098741884974833`*^9, 
   3.709874436137155*^9, {3.709874637438305*^9, 3.7098746449187593`*^9}, 
   3.709874852198463*^9, 3.709876217701767*^9, 3.709890210444119*^9, {
   3.709890249696659*^9, 3.709890283753149*^9}, 3.7098916281704397`*^9, 
   3.7098917138948107`*^9, 3.709896810149207*^9, 3.709897119623474*^9, 
   3.709897546796328*^9, 3.709898036822925*^9, 3.709898568762166*^9, 
   3.709899062993911*^9, 3.709899537817284*^9, 3.709899879970121*^9, 
   3.7099007352587214`*^9, 3.709903589249133*^9, 3.709903990238242*^9, 
   3.709904908429625*^9, 3.709905392507681*^9, 3.7099058775084457`*^9, 
   3.709906284989462*^9, 3.709907179265547*^9, 3.70990807745433*^9, 
   3.709934156393901*^9, 3.7099344588125343`*^9, 3.7099348180521812`*^9, 
   3.709972737803094*^9, {3.710060781257491*^9, 3.7100608099211617`*^9}, 
   3.710061107221837*^9, 3.710142030134605*^9, 3.7101644962267513`*^9, 
   3.710165104009004*^9, 3.7143243648215837`*^9, 3.714375197253393*^9, 
   3.71533238933967*^9, 3.715627695324233*^9, 3.715662856284288*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_error_velocity.pdf\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7100607902743483`*^9, 3.710060793502408*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\[OpenCurlyDoubleQuote]Neglected\[CloseCurlyDoubleQuote] angular velocities \
(not seen by equivalence class)\
\>", "Chapter",
 CellChangeTimes->{{3.709872625974028*^9, 3.7098726324898252`*^9}, {
  3.715615928273445*^9, 3.715615958497373*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Chop", "[", 
         RowBox[{"stateList", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "NN"}], ",", "36"}], "]"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Chop", "[", 
         RowBox[{"stateList", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "NN"}], ",", "30"}], "]"}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<\[CapitalOmega]3\>\"", ",", "\"\<\[Omega]3\>\""}], 
          "}"}], ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<hz\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.709872457137939*^9, {3.709872491025449*^9, 3.709872538685989*^9}, {
   3.709872586709271*^9, 3.709872597930764*^9}, {3.709972754930336*^9, 
   3.709972766881744*^9}, {3.710060823206141*^9, 3.7100608260202103`*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
eMZPOPx76RUu8BqXeIMrvMXx//4Pt4GIqw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
eMZPOPx76RUu8BqXeIMrvMXx//4Pt4GIqw==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1., 1.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 1000.}, {-1., 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[CapitalOmega]3\"", "\"\[Omega]3\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"hz\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB2KbjEWmrEteO+4Q/W8FosO8S+1B9HYN3u0getqf+29A
tAPbDCY2IH120ocQEO1wcu1/EM238NJdXiDdw8swmQ9Iv5ZdwisIpOusPExA
9LvEH5kgOiarbTmIfvJj60sQPWVxvboQkH4kY5MEogt81vSCaIE/UT9AdOe7
lTEiIPX7BPtB9Cmft4yiQPrBPIl1INqk/aqsGJCW+GXbB6LFhM54KgPpvIcb
8kE00+clc0D0qY8flc2AdJRAknIikJ4tW+QGonfZnzvZAaRNEyUOTQbSC7Zw
800B0swHl31sWvPaMeTR5sOzgbTKpW0q+eteO+659yX0P5B+HSzaKLD+tSMA
Z4CexA==
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error attitude", "Chapter",
 CellChangeTimes->{{3.698506624711748*^9, 3.6985066267613287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{
             RowBox[{"xc", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "9", ",", "12"}], "}"}]}], "]"}], ".", 
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"pd", "''"}], "[", 
                RowBox[{"stepsize", 
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "+", 
               RowBox[{"g", " ", "e3"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"pd", "''"}], "[", 
                   RowBox[{"stepsize", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "+", 
                  RowBox[{"g", " ", "e3"}]}], ")"}], ".", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"pd", "''"}], "[", 
                   RowBox[{"stepsize", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}], "]"}], "+", 
                  RowBox[{"g", " ", "e3"}]}], ")"}]}]]]}], "]"}], " ", 
           FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "\[IndentingNewLine]", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{
             RowBox[{"xc", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"18", ",", "21", ",", "24"}], "}"}]}], "]"}], ".", 
             FractionBox[
              RowBox[{"Rplusplusstar", "[", 
               RowBox[{"stepsize", 
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}]}], "]"}], 
              SqrtBox[
               RowBox[{
                RowBox[{"Rplusplusstar", "[", 
                 RowBox[{"stepsize", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ".", 
                RowBox[{"Rplusplusstar", "[", 
                 RowBox[{"stepsize", 
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}]}], "]"}]}]]]}], "]"}], " ", 
           
           FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Attitude error manipulator\>\"", ",", 
          "\"\<Attitude error UAV\>\""}], "}"}], ",", "Above"}], "]"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(deg)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.698506525212187*^9, 3.698506565612026*^9}, {
   3.698550631492511*^9, 3.698550637743202*^9}, {3.6985508013439083`*^9, 
   3.6985508016424522`*^9}, {3.709811384899632*^9, 3.709811447726369*^9}, {
   3.709811490349411*^9, 3.7098115168139544`*^9}, {3.709811586221568*^9, 
   3.70981163243813*^9}, {3.709814321187766*^9, 3.709814346658772*^9}, {
   3.70989034505693*^9, 3.7098904325780773`*^9}, {3.709900775317767*^9, 
   3.7099008528455553`*^9}, 3.710060834179563*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
3kz+CRjJ/hH5zY3JPwHfM8Ira5l8qxLgvDBQcIf5/5AkIDNy7s9xtkz+CTg9
ZsLCGgsm/wSMP1vStmsOk38CNqomFr+azuSfiFGrap2Fk5j8E5FTvwxbNJj8
EzFc2XDPcGUm/0R4fOnuVpRj8k/EXsdLzwXfaTw4JKLP0N99xG+Y+4JEvP9r
qTv5KZmbiI35P3TX32LGfyK8ys89N5Uw4z8RLYrd2nVHmPGfCCNb0wcKu5nx
3/v7PjknFTcz4z8Rdt+/8B+mMeM/EY/bLtyNiGTGf+/7u46Y/N6bGf+9z5sd
fX+REzP+k1DjHzFAZMWM/ySMM4+tljDfHzsJCb+vb/2kzYz/JMQtPDt9ohoz
/pMwO3NwjdsAJv8k6CqZmDl9ZL7/JHR6VClpSJnvPwkV4q4YtSNkXhJmFtr4
rd1EzktCU3CcUkc4uTQJI+O3PXu6ilyVhF+z7fkGJsz9ShImKw579EmDLE2C
dcmMLzo9NF/JkjB3902FZy3kziRU3cqPU61j5r9k8L1ybjX+x8x/yZj36cIh
rTxm/kvGjNYT7X2imPkvGdMfDQqOdCEjGTLLS6uSLckOyWgYv6OZrUfmJKOj
ZFHY2uFkbjLsdi45oPeb5mNeMnjLWQ75reS8ZBzcoR6Ue5tcmgynFX8txp4m
VyXD8mkrZ85eZv5PRtix8NLnecz8nwybiUNmKCYy838yHliWHTjhz8z/yVBQ
+fHniROZxUPOs5XFEQvJCjwEWW3dEGtEVuHhTmFCyws2WZ0HKzn8LFcms3nI
mL/E8XIPrU86POjeHWyo20E24OH345dZd56RTXgY3vB9RPVNMnhoshq05Mo5
sjUPXYqzIrsryQ48HA8JurhsB9mZh+kuz8yO5ZA5PIwIlf8yPpnsx0OiQNQk
DiFzeUh7cPTzBzdyDA+fJ2xbbuLArL88JEV9Hu0JspCHmoFRBV4GzHrMg5/2
Y4MZbHIhDyw1z9RaZWZ95oF/og9n2F9a38t5WPLnzz2VDnIVD4apU6fXPCXX
8LBsY+VA1nXmfo4H7QmzbGQ15AYernk8nbR8H1nKw4lzCfq2+eQmHi63brGr
T2bu83iYGySpPx9IbufhifCQtd5qcicPj8+feyJvQe7iod+W0V9sp5JZfPSt
4Pl9G0FW4MOfl5bU08Psh/iYWpvT4vGarM7HpTDfcs3bzP6Ij9/XA1fqnyDr
8BGjHXAnp5jZL/Fxzlw3cn4K2YSPddydPbN9mf0TH/3dnm5OsCVb88G7XFE7
cDrZgY/FRZ9Tm4eSnfmoXXBz0q8vzH0kHxOSQj1c7pP9+PCe88i+/wkyl4+C
F3M437aQY/jIu2LnNi2Sub/k4/DhoJBDK8hCfu/6mC0fZ0jO40NlgtK7jUrk
Qj4eFIUbdL1l7jv52DyRNfNwHbmcD+M4022ndjH7VT4qUzlWGgnkGj60E69z
Glcx+1c+zmRb27zTJzfwYVoQUOgxgNnP8pH530ONBc9pP9zEB6dty03+CbKM
j1OctY8NxeR2PlxUnuc7epI7+VgoMAtrNyF38bEx1UO5awhz/5qCWbHcCYIX
tF9XSEHdsnX8ghNklRR8U48Zbigiq6dg5V79ptWuZHYKzGTnm1UMyDopuHJ+
3EL3vmSDFJh2/5i+rJHODyYpcDI6eufpXjJSoNp2yHVYNNk6BSnC/EFfF5Md
UrB3wimlDHWycwokSadLpO3MfWwK/tuo1Xa/huyXgq9tc5WLhWRuCqJus2br
OJNjUnC5ZSo3eTJzf5sCi80hkn3f6TwlTMGOdxc0d9cy57EU6MukobGbyYUp
+G25L0ffkzmfpUDe3mZ2vSG5PAXnc4tHWbOY81oKuh8su3Wcud+tSQFH691D
1RKyJAV3beXL/APJDSm4kCfk1cwhS1NQdnzo4f4K5KYUDBge47DqAXOf2/v7
/9yCK/aQ21Ng3/9tl2I4uTMFaqMT6uLMyV0pSP+xLb9bmbn/TYXOtId9NzXT
+VchFdVVj4rNK5nzcCq+nAyRDkkgq6diZ9Hxzz+XMPfDqVh8ztZsoAZZJxWT
nI2PJN6l87lBKsJ0l+XNDSWb9PZf8uDPchUyUrEsW1hRd5jO+9apGH6jYfRO
e7JDKizcS8pkH+m+wDkVq7ef9MnLY+4XUsE5L/KoNiT7peJKc4j3snt0H8FN
RbjrPVWfSHJMKpJXBn3oUSPzUqHlHLtw7Bm67xCmws1C3qZ2PTkvFTPkjfp3
9yUXpqK9IM7t0n7mfjYVu08NHDNuKbm89/2s+zSrfmHua1KRvbReZ/82ck0q
jmY5uD8Cc3+TijPjfG8faqf7n4ZUCC0/7piykSxNxRyhdou9KbkpFRmJT8Tj
X9F9kywVizbsTivLIbenwnj7gJz7c8idqYjaVu5yrpXuu7pScWS2a47LJub+
Kw2vL1hXHjcjK6TB2feVwfUPzH1gGhIs5JN3FpPV0zD35sP3M+2Y+8E0KG27
ckH8+xXVPw3fh3noH6wkG6ShYpe1+yY3skka5DJk4RbDyEhD9yndyPO1L6n+
afjaEeqnEEd2SINxv75WWtPJzmm47X2he0jrC6p/GiKWXdhws4jsl4bVF6RR
HivI3DRkR3xrv6VIjkmDWu1dsWptC9U/DdcKhk6elUwWpsHW+kiwkSk5Lw3e
/svUlL7LqP6977t9zY2rR8mladiRa27kyyWXp2FjmajttT65Kg3tC0793f70
OdU/DQvlf4ye4UqWpOHuZ+8ZRc+bqf5paPTwsnngSZamoaBxj+PrN8+o/mlQ
OVM6804oWZaGvXteXtna/ZTq31uvcqMG0wxyZxr6rRN9uqBK7kqDYPgvmc6e
J1T/dJjFOmvFzCIrpKNqU71eVcNjqn86Gi6OdbnnSlZPxzl31Z8vvz6i+qf3
zjdrp70Sk3XSMeVxpPwDHbJBOtZVJ4WdqW2i+qfDdkTF/K1eZKQjdfYpZb/+
ZOt0nDyn529U/pDqn45JHd6l3+3Izun4aVHSfPzLA6p/OoxvVI0JLSb7peOW
W+M43cVkbjruHTKOav5yn+qfjpHK8eEby8i8dDyUM5hmsYIsTAdrrmF0Z39y
XjoS7w6SFZ1upPqnA4FrKi1DyaXp2O0zo6lNl1yejmV3/huY9uoe1T8db6et
KRi1i1yTjug4Ld5eN7IkHRaKav6T2OSGdPSZsXn71hd3qf6973N4x59v+8hN
6Wj1zh+FDWRZOhqDxg8LnUVuT4fw0YG9aX/vUP3TUbRx8NSo6+SudGR73t+C
bWSWAPXHvwc2+5EVBDih8/G2jSlZRQDPVF5CwhCyugAWb1/XhbyQUv172233
lY45RdYR4HbY9W3xG8kGAhive/gyLZBsIsBy7ohVBovJEGBfS2ZQ5ESytQB/
6lY42cqRHQQ4I6fYsrz+NtVfgNmrW0sHZpE5AoQPr8z7bznZT4C/C6ofs0eT
uQIMfXVhrvPrW1R/AfaXG6nMO0HmCfAi39v9ZAZZKMD1iPgvx9aR8wTIr5y/
YpwRuVCAjouKr2SDyKUCWMUd+vCy9SbVX4D2/8b9N+wyuUqA2AqZ4+oyco0A
gx5r6RenkiUCRF/0LrruQ24QwLxr0zipLVkqgFPPZu5mI3KTAHv2L+bJjSbL
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
9N+KGA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
UzI5KRRmvfanvclm73OhMDnQ5nCymJwbit73jyv0q8nyUIxf/Csy9B25OhSX
Gv+14v8iK0JhefeyTo8+9P7YFArJ4vQV43TInDDE5KwZVzaNrBGGHrfa39Ys
JHPD4PW85cJ6U7JeGAQn+FXDt7H30zA8Lnywb+ouslkYvrqfzvAJYe+rYXDv
cbb+vYjMD0MlZ1qOVwpZEIZbg9Xy+x0jJ4VhcmKzzakcsiwM9tOSYxZcIueG
IWXh1/v5V8nyMPx8tPzA4DJydRigUqu0/A5ZEYYXOaMGLq1m/Yfh0kiPM8qP
WP/hmLNyRI7wCes/HCtSXr0ofsr6D0ev+DCNLGa9cPzMrdJayP4e4Rhc2HA/
/D/Wfzi22ZZoudxn/YcjXL3t1Z/brP9wONmPGapfyvoPxwmV4AtDr7D+wyG6
Mf7UsQus/3BMHqf6sTaL9R+O0GcOlmWHWP/hyPq58qyDhPUfDlmRIq0knPUf
jn3z2jNee7D+w+HscVip3Jb1H4FZOZ8LI9aw/iPgOv9IxCBD1n8Eri69li0a
x/qPQGzd5jGf+7P+I3Ap/rLtyla2/iMwe2Hs2szXbP1HwG5vz1UDy9n6j0DU
mOH9D5xl6z8CM5PPZizZx9Z/BJTvDdzCDWTrPwI1gpv5RlvZ+o9AmsTP6cRi
tv4jYCZ10985lq3/CCTPNP0t6sXWfwS2bN6WMrqe/f4jcOfquDf65ez3L8Dw
3/syHrP7h6oAU93z4waI2P1AgH537w767ETWEmDQnu+HgleSuQKczly56NZE
sq4A5mV7amuVyXoCjE53VL75nu6fhgLMXF/RS1LKnh8ClA5ABY6TTQRILPV4
2yhgzxMBHN5rRO+1I1sLYKXq7bVsEXu+CDBYx7R3n5FkZwF0V4yY1tjOnrfd
15slN/tSSw4UoKX0uNtI9jwUCPB608SfgoNkkQDK56Lfjwpiz2MB1Kq6zvy1
Jqd2/31a5IJx89nzWQD/aTE/krXJ2QJ4nXK4aPWH9gO5AkxoGXzT8zm5QIA3
84d+VhSz8yEBfKY02Z1LI1cIUOPWUl4rYPsZAfRWWi92tifXCPBh6JMN1ivY
/kYA+9VCtTOTyQ0CLC+b+8K+P9vvCOBnNzU/opn2S20CaPrrq3Q9ZudPkbjq
vPC8ooisGomsoYs0x8nIGpHo6XNgwk0hWSsS93OfrSxxI3MjsTm1xU+TnWfp
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
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {0, 6.467593516767891}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {0, 6.467593516767891}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"Attitude error manipulator\"", "\"Attitude error UAV\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(deg)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.698506540240511*^9, 3.698506574225786*^9, 3.698550639109888*^9, 
   3.698551274212489*^9, 3.698552484376136*^9, 3.6985606939333553`*^9, 
   3.6985607673466787`*^9, 3.709811497424402*^9, 3.709811634077739*^9, 
   3.709812524916224*^9, 3.7098126123060093`*^9, 3.709812770069318*^9, 
   3.70981287796918*^9, 3.709813050324771*^9, 3.7098133304551983`*^9, 
   3.7098135591532297`*^9, 3.709814305691019*^9, 3.7098143473544083`*^9, 
   3.709814635568054*^9, {3.709815068453228*^9, 3.709815086862986*^9}, 
   3.709816705122311*^9, 3.709816926667398*^9, 3.709871336687048*^9, 
   3.709871513624998*^9, 3.7098719248457108`*^9, 3.709872386429635*^9, 
   3.70987359472139*^9, 3.709874199508333*^9, 3.7098748579376717`*^9, 
   3.7098762240750303`*^9, 3.709876279124421*^9, 3.7098903785767803`*^9, 
   3.709890433361639*^9, 3.709891741352626*^9, 3.709896821172168*^9, 
   3.7098971282561626`*^9, 3.7098975619486*^9, 3.7098980493641167`*^9, 
   3.709898578752529*^9, 3.709899073138425*^9, 3.709899538031579*^9, 
   3.709899890954126*^9, 3.709900743026684*^9, {3.709900798956417*^9, 
   3.709900853557233*^9}, 3.709903589528591*^9, 3.7099039942409554`*^9, 
   3.70990491485846*^9, 3.709905132459667*^9, 3.709905397696776*^9, 
   3.709905679338242*^9, 3.709905882234211*^9, 3.709906293411817*^9, 
   3.709907187329055*^9, 3.709908087586999*^9, 3.709934160705369*^9, 
   3.7099344646933937`*^9, 3.709934825936255*^9, 3.709972773777316*^9, 
   3.709972927984701*^9, 3.7099732267838383`*^9, 3.7100608591623583`*^9, 
   3.710061110578405*^9, 3.710142033380478*^9, 3.710164497524273*^9, 
   3.710165109705367*^9, 3.71432437000226*^9, 3.714375202353499*^9, 
   3.715332394650646*^9, 3.715627700764298*^9, 3.715662861783845*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_attitude_errors.pdf\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.710060853230784*^9, 3.7100608564878073`*^9}}]
}, Open  ]],

Cell["Input", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}}],

Cell[CellGroupData[{

Cell["UAV thrust", "Chapter",
 CellChangeTimes->{{3.710060892059832*^9, 3.710060894352007*^9}, {
  3.715615967579527*^9, 3.7156159679484777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"aux", "[", "1", "]"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<UAV thrust\>\"", "}"}], ",", "Above"}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.7098117708344173`*^9, {3.709811843596953*^9, 3.709811864482003*^9}, 
   3.7100608786448317`*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
55Nj1BsNKcgdumVP0zvGPwUbo21sLahXBKnImyIvSaCe0UzFUI3756qod3RS
4T8rLqcb9ZF+KlY93tfa5zPjn4rHX7P0jlFPGafCK2XQCV3qL9NUHBYu/XcZ
9Zl5Ku5kDl1/uYnxT4VaoMWpYdR3tqlI0LKatVql/1LhOevmhF/Uh66pWDAh
PMmX+lGYiiVTcrvUUl/6psJ1WeZLOzXq7VTk78l9r6A+jUyFt8ErQwvqWXEq
RtnlhB5po2RJKqr91z8aQz2c0/J7h77Yl1Ev56WiYW3MuYnU04WpmKfVZHKe
erskFeMe9I1y6EC9noo2L9cWPaFeL0vFbb+320Q61O+pWO2ywbc19X9VKkZn
d61f34V6vuX3LEr1RjN/qE3Fa+2j9deZX9SlYkqe0DGQ+Ud9KizW3bLp1JN6
PxUnxw06eZD5S1MqmoPdd7j2of5PQ6Jj8DcB8yHNNPhY227fbUj9nwZr/6OF
rsyn9NMQ9Ca9ri3zLcM07LYMmVfOfMw4DRPEA74vY75mmgb/q+blRsznzNMw
K8kq4z7zPaRBkH/MYw3zQds0mH43GGU/nPlUGn5euv1fB+aXrmnofGlc5tWR
zK/SMCM/92fWKCX7pmGOnvlIR+avojRc3utg2J35bWQatu7XPfGI90vEadi8
bf23IubHkjS4b2p9fgXz55w0OKxb1NOS+XVeGgzLd75uy/shhWlwPvPc8A7z
85I06M1sLiti/l6ahukjnmwN532QsjTcuu53w1Z1Hy4NGpFh43qzXlCVhqX7
bl5o4P2P6jSszbQLO8/7TrUtz6O32ayA9Yi6NDzKyfgUynpFfRri7lcUz2I9
oyENPc9+t/6L90Gb0jBw8a0Taqr7o+k45Neo9oj1Es107Fr1W6Oc9RSddIx4
KDm1diHjn44pn0x6hfD+hmE6UpJDOjmwfmOcjt7rP8tHsL5jmo5zX0ZLO7L+
Y56OfsLTn9/zvgbSYaCjr7jK+pFtOiK/n6nby/qSfToihkyyzWL9yTUdFSba
bwJV9zHSETht1+E5vH/hm472v9YWmvL+hSgdn2xmbtRlPSwyHYWt7TZ84v0L
cTomWWvn3OJ9C0k6LHfrLP+H9bacdGhfrhmwlvW4vHQI4h7sDGO9rjAdwydu
+zA3jvFPhyS19OUY1v9K01FjLE3sxvpgWTr67Dv8zxfep1Cko3T3maBbrC9W
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
vM9mno1hL393dWV+gWy4y7Ujj7TkH/8D6PLeuQ==
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 15.341147155725906`}, 
       PlotRange -> {{0., 1000.}, {15.376037027266893`, 16.073834458086633`}},
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 15.341147155725906`}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {15.376037027266893`, 16.073834458086633`}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"UAV thrust\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "True", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.709811771931218*^9, {3.709811857619562*^9, 3.70981186620709*^9}, 
   3.709812528359996*^9, 3.709812615012621*^9, 3.709812770214444*^9, 
   3.7098128818881683`*^9, 3.7098130648377*^9, 3.709813562710742*^9, 
   3.709814433777321*^9, 3.7098146359151697`*^9, 3.709815068643018*^9, 
   3.7098167237877607`*^9, 3.709816926820354*^9, 3.709868575361066*^9, 
   3.709871347109676*^9, 3.709871928229492*^9, 3.709872393667204*^9, 
   3.7098736048518667`*^9, 3.709874208016602*^9, 3.709874865477833*^9, 
   3.7098762952919903`*^9, 3.709890498280491*^9, 3.709891750952454*^9, 
   3.709897150309716*^9, 3.709898596307485*^9, 3.709899080029595*^9, 
   3.709899538087639*^9, 3.709899896383185*^9, 3.709903589759807*^9, 
   3.7099059025034113`*^9, 3.709907197504488*^9, 3.709908096143264*^9, 
   3.7099341696745577`*^9, 3.709934470104744*^9, 3.7099348349407787`*^9, 
   3.7099727792737617`*^9, 3.7099729416441803`*^9, 3.709973233499691*^9, {
   3.710060862828719*^9, 3.710060879333851*^9}, 3.7100611109171886`*^9, 
   3.7101420336360292`*^9, 3.7101644979254713`*^9, 3.710165110042387*^9, 
   3.714324370461652*^9, 3.714375202817078*^9, 3.7153323950763073`*^9, 
   3.715627701021866*^9, 3.7156628621171083`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_input_uav_thrust.pdf\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.709811931934916*^9, 3.7098119379495153`*^9}, 
   3.710055928990815*^9, 3.710057803742318*^9, 3.710060307711289*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["UAV torque", "Chapter",
 CellChangeTimes->{{3.710060903288764*^9, 3.710060905904479*^9}, {
  3.715615972923072*^9, 3.715615973201178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "4", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(3\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<torque(N m)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550656905706*^9, 3.6985508377666597`*^9}, {3.6985512963371563`*^9, 
   3.698551296631171*^9}, {3.709811874450719*^9, 3.709811914998761*^9}, 
   3.710060920425396*^9, {3.710063663899836*^9, 3.710063732740912*^9}, {
   3.71437709534519*^9, 3.7143770976946707`*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{1., 0.0074520487938914805`}, {2., 0.004846490330559918}, {
           3., 0.002278435639796049}, {4., -0.00018597752682599059`}, {
           5., -0.0024858068698508616`}, {6., -0.004567854180512517}, {
           7., -0.006388691163327691}, {8., -0.007916048187267813}, {
           9., -0.009129510855205554}, {9.976959520986258, -0.01}}], 
          LineBox[CompressedData["
1:eJw9lg0wlHkcxx/qehGdUHGlxBSVS6yI2P16l9f1tt7WenapVESI8taqdJX0
OnOk8TJ310hJIqGrqBZlOBfV6ErHHTq6u6EXUa7uZX/P7czOzme++3n+L7//
y7NMFu+/SZVhmP3/fP/9nT3oM8PbeA3SdSrd+tMONDL/fdaiuFFRZWq6n9gc
OT3NyXGJ2cQW+FN7qO/6ZBYxD/n80WT9G2nElojRrDqc4JNCvA65oWVvz3fu
JLaCQ25XyrHabcTWMGh9NmytISNej+7Ut2tm5QcQ28Dbzu1HfuxaYluojxTk
TIidBUregLtVWkVik2BiO5RsGqu/xkqJ7bGgKWVo157NxHzII81mSn7eRizA
70GyLf1f7yAGYnjtVvndCUqWA7fZ+hON6omUO0AyZ95KwRSx3AGmRo/S+suS
KHfEYLd9cdX8ZModIQurmXHPk5hxwohW9rG1Qi53gmIgsUVhwuXOqEtzSFz8
lJ4nd0bX1lr9rFju+S4wd6lXPOrn2ndBdLJa8WUB1z9XPLB5bG51ZCflrnjS
FM/wmmk8jBuudWiYG/4WT7kb5L2S1Xd43PjdcWsq3uxGYizl7nin1lI1VM7N
10bENBibHeiNoXwjkvTaPH3nbaHcA6UV2i0H3TdR7oE5S2Ytm8yJotwTXtOv
KD5vp/rIPZEdlZf5ZDFLuRfWP0k4bvJGTLkXplUtaIhtC6XcGy4pncwft0SU
e2P3/o8ryroDKPfB6iGHHis1P8p9kH3x5FxFqxflvnjceFfV/a4b5b4IT7C5
sGOWE+VC8Jn6o2lr7ZUMIZ6yL1uuDFnS/4VgU9Q7hDGrlNwkxBq/r5yfR+mS
7weLPsG9E50/3VL6fjD3OLh9OFpPuX7lfhhYam1kGG2s5CY/dL5b4LwolVvf
/qh/p5s3XG6pZPjj3JrUJTZe68n3x4uIhhkjkRvI90dzh1HD+JA9+QEo3p1R
E/urgPwAtJd80qy5CPIDYC5jefsMHcgPQN8bs7p1wcRMIBZ26vY99yBGIA5m
6RUf/cj5gdB8k833SCJuCsSUqUaPXSC1xwShrPX8pI479QdBUDMcXaKjsCU/
CKKVua+Wt1mTH4TDSQ3zV4tpvIwIjmy17H06zQdEWFopfN0sMiFfhI2TbXU3
qvTJF8EtRhzrpKJKfjCOPUse069To/oFw5JfMGBbaUj1C8bgVX7hukwzql8w
KtTPVotyrah+IUh/W61Y/j1X/xC8uDxU/vCcI/khCE8OUzUociU/BDDcOTZ5
24P8UNQVXGyt1vIlPxSNVoc0LrVw6zEUZbm303sWBpIfiij9OLW8dFrPTBhC
FA2jTqMh5IdB5cZMXcvkcPLD8CzxfIXrZxLyw3D9gc/KHCG3f8JxvOjTLv9v
aH8hHLotmq+k4zLywzFRaJ/Z7BFNfjimD5TdRxHtV0YMUW2in+AlnZcQo6Sg
8dJ9c26/i2E8Lz8+LW4r+WLkzR6/kFjInQ8ROL3qbKrP1e3kRyArWnFH7xp3
nkSgtp4/7FIYR34EajQdq0vDuPNHgtjNl7Z6jxJDArtPC6fdDuDOKwm6qlZJ
7mQQN0nAmzwyHi8jZiIxWGSR4fWB8yPRscdVJdCeWB6JnLMTpxct4dqPRIHm
a+u/TlF/GRbsipsb/E/S+AxYFGyO67o5l843sJho1So+rELzx7LY21SxZb6U
5l/OQs36lFGtF9WvlMWYk5N4joU3tceidcdu19l6Xyq5j8W7M8dsLxpx+0+K
ep/2M0vfBynZQAqHbXt/GBXQ/QgpVLTdv33K0P3JSjEVWlku1qH7VS4Fj824
d99rl5JLpfi48lCWSf4e2i9SFPY220X0Ziq5T4qcGu1fxlW5+12G7yI3JvHe
72tUjHwoefiF7P/3g78BlJRl4g==
           "]], 
          
          LineBox[{{153.65710647969732`, -0.01}, {
           154., -0.009649297848340024}, {155., -0.008383631096571163}, {
           156., -0.006898789124213374}, {157., -0.00522713874928497}, {
           158., -0.00340856097685147}, {159., -0.0014888389734588694`}, {
           160., 0.00048233401300952635`}, {161., 0.0024535924457202147`}, {
           162., 0.004374224357948633}, {163., 0.006196420380923002}, {164., 
           0.007877290734292311}, {165., 0.00938052011269772}, {
           165.47760779253844`, 0.01}}], 
          LineBox[CompressedData["
1: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
FY7b3O46+9J+ZKfi9P6c0X38aT9zUiGwWrO4OFy7/1PRui5bxpDS+ZGXimeO
1e+Mj9N5o0zFiKPNX++20XlVkYoLIstexvZ0Htam4ptfZ9sRGZ2fDanI9cn0
j3xP560qFf8e256tG0Dnd3sqih8sPD/yvvb8T8O7r01GUyfQ88MwDUXerOIz
HWRmGs7q1oe+ukzPJ5s09Jm0ABGF2udfGq79vvdWN5Gej6w0BD+R9l3hTc9X
dhqufrUaZ2ZPz2NOGlr6/dr1chg9z3lpiNgnuzZfX/v8T8NO/619nn4hK9Ow
ovN1twmvaH6oSMOHD7OPn26ieaM2DQFZQ8/p19N80pAG9iRGtfgfmmdUafjr
7KLgQzXa+ScNJoU2s16U03zESMeglU0XNxTT/GSYjmfLFnQwt9K8xUxH/pui
r5/n0jxmkw67y12tR54hIx1ufzZurJ+inf/S8WFtzvat+7XzXzrO/32sY7Ip
zYucdMwOG9XXJZfMS8ePn46s9O/kvHSUGlzezQ+i+VOZjpV7qur/XCFXpGPI
paSWYmuaX2vT8fXo7b/NZeSGdES5fGcNbyGr0rEtUzZ3uSPNw+3pEEyKdZNK
yYwMHLJ/tD2wkWyYAT9lXEDxEJqvmRkoO/XLqL8f2SYDa3YEmsRtICMDP+6E
qTZcIrMyIBxnkTTvE5mdgY4Pk64FDqZ5npOBiRu8ul52IPMy0KW+15Wli7Tz
fwYie42SMYK0838G9iUYVVdFkisyYIlHrWEx5NoMTJj02HB0FLkhA2lc33Xt
2r9XZQCrh8y970Vuz8CfWr+tHx3JjEzIrTfGrzIlG2Yi8+8wmwXftPkz0W9g
VdrDa9r8mSg82zTVZZs2fyZe67W5Xg/U5s9E3+e3Fh0aqc2fifd372TavKD7
y8mEpIVvW7qdzFPXH2taE+JJzsuEq070neud1D9lJlJPHE+ccoBckYmSsUsW
6npp+58J564955V8pfXRkImsgvjJwgKyKhMtjpvRz4HcnokXhfq8s4203hg8
BPOKInRjyfo8KE7phS3tTTbkoflwjzkTS2k9m/DwVxWjrNdsMpOHg7kNf7Of
0H6w4uFNgEHYAa52v/AQ2BnZP9CE7MDDh6Omqj/RtL/Ag+NW0+lfqmj/ufIQ
KbphJ/9N+5PFw4oA6/UH3cm+PNw/HfFsfAntZzYPplPDt77RJYeo/94rYVBF
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
zBBhRvBwzhsvsr4I/909+NU0iGwowv4VTsk7Y8kmIhiPjKyN55OZIvwafHrZ
znVkKxEmNiXkD99BthGB8XkN//d+soMIplfSe9oeJ0OEXN6MF1fOkV1FqJjU
Z8vp62SWCBfivWT97pN9RVh5J7HrZRWZLYJT1XnLp/+SQ0Qo/9H9h99HMkeE
80KrpGk/yMkiFCu5afwu1tR/EeyyOh+M1ydL1J/XLc5rZh9yngi6i52KTg0g
F4ggZI2LUpqQlSJYO5tEvTcll4rAOuHnUswkV4hwO8hsz8UR5BqR+vyWWXuN
IteKUP3iVv4CK3KdCPeX9JEdHkNuEMGo3OA2fyy5SQRu2/Px/2itUl9/WEJ0
jNatInzqdz0uT/v37erfH7tkJFP7+R0ipGX/Thuurc8Q42XXiYJN2uvTFyN3
1wlWuvb6DcUYezG770NtPhMxbOULfx7S5meK8ejK4MBv2vtjJca2G5eLT2rv
n40Yvce423do76+DGN1juu86okOGGMwFT9Jaf2r7L8aIY74pRZ+1/RfjnX6h
b+M7bf/F+PiG1a54qe2/GIbDMsfUP9L2X4yQi/MZ+be1/RfjQMM+wdM6bf/F
WLTx993qM2SeGIXfqkYPO0qWiNG440RtP+16zRODxfz8ZYt2PReIcb2sfHzl
erJSDLfz/z0OzCaXilE99LrsUDK5QozQY0evrg8n16jrRZROM1pBrhVj/YmE
3Kkscp0YmZFPE7to92eDOl/F1bPRk8lNYkQ4r7QTW5JVYpR/GV61wEi7/8Uw
6j7Q+LSedv+LMebymQXPvtB50SHGsRbP6SdbyAwJfPsUv1jQSNaXIPKQr/3m
C2RDCWyFj213VpFNJHCwSH8aspvMlCD2RJzd1zyylQRmuT+mL8gk20gQELLy
e3Ak2UGCTQ1G4V7+ZEgQt/HOBoP5ZFcJCnuXxmy1I7MkOJVr/ufnCLKvBMxT
qyfZ9yOzJXDUCfvl3qk9/yXgGJq4zn6rPf8lsLHifx/cpD3/Jdj5x/j93Qva
81+C5h0fvyYe0Z7/Eigtej/XKSLnSTA0bmt0qpRcoL4f4R4+LxLJSgkWDb88
c3oQuVQC6cEXt2Se5AoJXv5lve3WNHKNBB+vuw/vZ0WuVd/vuTkqt4HkOgki
JjrOFjPIDRJsHrh87z/v6HnYJIGrk5lvlwdklQQxg5K3zL1IbpVgbMuNDeuP
kNsl2JBUGPF6B7lDAr9m5sT5UjIjB7prh6hqEsn6OTDeIQ52CCIb5sDfj1N8
xZNskgOTjOOBUU5kZg6kircBVmO0z/8cVK63c/pupH3+5yDygW3Bcx3t8z8H
pqvbv7a00fwA9efNrr+u+5jsmoOewtw0XCWzcnAoy3Pptmqybw4Wy5WFA0rI
7BzM/p7NLcsnh+SgvnBz71AemZOD0MNDV7lEkZNz0Lfir+j5AWReDtw5rUzO
ArIkBy8FOR6nHMh5OQgSV579azS5QJ2n3/ZxdUZkZQ7iBnlOzdEll+bAI6o9
M/YTzVsVOdjy7ZdI+Jxck4PrgsJLZ2+Ra3PA/fDvPstz5LoczBjukl1VQW5Q
/373qgMRSnJTDuoGMX1Yedr5LweMlobqFTzt/JcDu3+rPm7haOe/HKxruWT6
i62d/3JQ8Dx+hmwRmSGF+ebOpXNnkfWlMPvdvHTsZLKhFB6ZY0Y6WpJNpOgu
7bE93ojMlOLGy4HSB93IVlJ82lVbE9JB86qNFMldr78Y/obsIEXw0YNndJvJ
kMI05MsnwxtkVymMm6+OnFdLZknRM8/lvz2VZF8phuS+fTqmhMyWgtmlm+j+
FnKIFI+6DV9zSErmSCH9FfJzXzo5WYqfD4zPXeGQeVIcTm626reaLJHima2z
Mn0pOU8Kew+9vD4LyQXq648oDDjvTFZKYbkydu32SeRSKax/+PfcPIpcIUUO
u31X5RByjRT+V18J2vuQa6Uo3x+l69lVO/9LcWpEbkL9N3o/aJDC8e/g0eHv
yE1SLI3bFzL6GVklRbPpKVGXe+RWKUIw5UbHVXK7FHYyHZlBLblDisYHN/Wd
jpEZMrx857BBdICsL8POoUMS3+4kG8pwhXHzd+gmsokMcybFJHWRkZkyRH8y
mniER7aSYcZhXW5yItlGhs+mX3b7RJAdZHj+w7FzQSAZMkx/8uepty/ZVQar
yrCiOA8yS4Zw/u31e+eQfWXwcH4+8L0jmS1DY8oF4byJ5BAZfunNmVk5msyR
QTCl7dAEM3Ky+vqsbMefGUjmyeA9Vjh2eS+yRIbVD1cZGuiQ82TgzBK6X9W+
3xXIcK7k2eItbdr3PxkGvKoriH2lff+T4eKs9o3+j8kVMmTsy7iw6C65Rgbf
fwbv875GrpWhZuSns0H/kOtkCCu7vCnjBLlBhjeL3lQWV5CbZKheMqukcR9Z
JUOXD6xOw53kVhnqZdaLfTaT22WwX5zpVCInd8jQcE3g81tIZuTico/vWJFG
1s9Fa6TFzstxZMNctOlVG08NJ5vkYsWsZu/KQDIzFxHSAbqT/chWuZha/te9
k4vINrm4Ezo3c/58skMu9kZvO/4EZOTCdGW+HdeB7JoLh7aiU0NtyKxcHPKy
6nF+NNlX/fnzUp9Gm5PZuci8U6FnYUwOyUVC6PY5D/qQOblY1+Ng8KZu5ORc
rCprcvLp1L7/q/P/J9049Kv2/T8XJsa8mS3vte//ufBtP2xS1UIuyEXKObsP
wsdkZS42uE0p9mskl+YiklNtMKWeXKH+/HtF3ftdJNfkYu619LgPp8i16vxF
PJvGo+S6XMgU3sxTh8gNubh/V2/U3mJyUy5Gtr0euaGQrMpFyOQUPcFGcqv6
93fNPZiQS25X16uv7wwTkjvU14vQ1sA0MkMOLBy3aHk8WV+ON7euWvhFkA3l
eJEkcFm2mmwiR0dC536/ADJTjlvl9rYrvMlWcjDXr7kb5Ea2kePD4kex4XPI
DnL03fjlZ7wTGXIc8/jjx5tCdpWDvc80VW5NZskxKW6CS6El2VeOxx6X9h8y
JbPlmJypIz8zkBwiR/OqrIe3tN/vcOQ4co6V+kqXnCzHu1v1S3/9ou+DeHI0
Lt62dMAXskSOrZXiVePek/Pk2MOX+M9pIRfIEeG+ZeyKx2SlHGncg5XJjeRS
OcQx++9tqCdXyFF2wzv58EVyjRwnZkxLvnaaXCuHWUH5sdfHyHVy/FIe7aNb
Tm6QY/uSjpXMveQmOQZwLwqdisgqObZM+urju5ncKodtnw/lcQpyuxyGis1B
ChG5Q459A2YuKM0gMxQ4tO5vu3OJZH0F/t40+WdTFNlQgetRziFta8kmCrwy
uuGmu5LMVIAbZZVovJRspYBpz7eHrTzJNgqclehcsHchOyjw2rqMO2cGGQqM
PhqzzcOe7KrAZD2L1iUTyCwFlmx8NspvNNlXAddxg0z8zcls9fXIklJ9jckh
CmxN7NbXq6/2+z8FDIaYrHPprv3+T4GK0+7HHf7Q94U8BeSXldNHfiNLFFhv
tLrZoI2cp4Cwda5r2ytygQLzriy1vf6ErFSg8GE/nz33yKUKzGzy84+/Qa5Q
wPG07LPzJXKN+n6nJN/UOUOuVcDeiVtw9hi5ToGHhlE/4svIDQrIbl8qsigh
NymwYEf++LpCskqBNotM9zUbya0KdDV7s+e7jNyuwNOXr+8KBeQOBZyk7oJu
qWTGOthNPMHKiCXrr8OSwJ2P34aSDddhct7SKx6ryCbrEJMwvHKvL5m5DtyL
9rafPMlW61D0/u5/k13INusw6MY8bogz2WEdPO0/xuTZkrEOFlfXRB+0Zs74
H61MrlQ=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
bXmll8h6G3Hc+Ojw+yOsqP2NWHA4b5w8mMzeiJriV/0Mb5K5G9EkfnY9sB+o
/Y1QCtG7a2hClm3El9ySZ1uXkeUbceby3Y/KAWSWL+LPjpQUJ5H1fGG7uP/M
pbvJ8EVv+5ePzuaR2b4I333N+s0ZMtcXFwzPe1y+yLTvi9fHW096XGHa98WZ
J2vnXb3MtO+LIed3ze5dxrS/CXPmaO6bVcy0vwlcXG9KOMq0vwmPdr6f+WsH
0/4mOC2qqr2TyLS/CW+Pmn7R9GPa7ylvfGeuxFyvbBMqo3Kel0xh2t+EFae1
zrkNZNr3g+1TO4x+TPdTzw+8806T25KZ+++H5yePGSaaMfffD3Gprz8qV1N/
cf0Qmtn19FYMWeqHGq1hbcojyDI/bNC43Nh9mul/P3Td7W3YaEdm+WNjv+tv
VV7ReNLzx6wnxa58f2b8+cPxmc+rI99pfLL9oT28+Kc4jsz1R+jqXzkxvchS
f+wNTpiwO5kZ//7obhmSO0yJGf/+yN1UeUuHS/OHFYDJmRcGvOtk5l8A9rMN
KjNCmfkXAI/2MesXNdJ8ZQdgdb8/nbM8mXgrAPm1pq0Zj5n5H4D30rMH/GyY
+R+ARN0tgd/P0nohD8BgLv+D8zgm/toM3rzlRYVZtL7obcaeRTszDFnM+rMZ
Lfe717wOpPWJvRmOE1YN/VFN6xd3M2bnjq2S2JClm/H86qV7D/+l9U62GeVR
1XaPRjLr32YsVn2VeyaViX8DIftveL7RW1o/9QIxqso+V7eE1lcEYn1Lm1uy
iOI1diBGNq9tEvjQeswNhL6j5X7vuRS/SQORd/DrIRtNWr9lgQhdsGS+RxOt
7/JAXElrv/jk7gRqfwveisI9XufR80BvC56Oa3Tfl0bxPLZgUOeuVotN9Pxg
b4G3kp7zS3sDan8LBFNyT/wzhZ430i1IKN416owmvR/ItsAj7rrE5Q/Fg/It
mPWy4fCyZzrU/lZM0essSDlD8aHeVvhv6KNskj2C2t+KXs4i1fAELWp/K7by
r4EfqEntb8XrT+s8hexh1P5WNDXUrzzsPoTa34q2+a9OPDtHz1v5VryXJ3b1
vd6f2g9CZljlkT5v+lD7QZgwZ8b5LiWKNxEEn1HbPw/l/FE839lBuPHgWJ/d
re0Kc4Pw+G3xtLW6TQpLg3Bzz/rOz2K5wrIgNNa46PSVFissD8KDi0Ori989
p/cvDlr13t2a9PaTwuocNIqyb/53v01hPQ5+8Pu5+kk6FTbjYMO5kMe2+5l4
hQOraam8WXVKCjtyoLVjst0Ynb4KszkY0tfQedSS/gpzOHh9ZulJp4CBCnM5
OG+yt6VtPsVLEg5sYoM/J18borCUgwMa3iZNVsMULuJgqigiclkJxb8yDgqv
ykpKjIYrXMnB7k+yt7Y7KV6T91xPTOMN7U5thZs5mHDb4d0i95EKs4Jh3+K1
4PNZiv/Ug2EpGGRj2J/iQ71gTJl2PlrdneJHs2BM/IcffOcoEy8H48D574tm
hlO86RiMD56p9UJNik/ZwZhmt8yJc4bMCYbKTOe6tuUU/3KDcX3Qk7ixDWRJ
z/cxuB+ommhA1x+M3yenrC4eNo6uPxgv03ZoGh0jy4Ihds46FjGT3scrg7FP
95jqsRtkeTCCDxcYXHYcT9cfDK1LKqduviSzQnD50sI+17wm0PWHoNfXdOOS
BrJeCNIDdvHzAo3o+kOwZs+G+h3fyAgBr2C7bezWiXT9IbDfKnno/oXMDgFn
XdRBEz9juv4QTL/48PyXt2RuCC56GtSI3Si/IAnB6+KdCaoPydIQlB7aJFi6
cDJdfwiMWo+vsj1DloXggWWfpAZ9E7r+EDTMqZVri8nyEEy7ULn0yk9ycwiq
1pzddmX9FLr+UJTZOi7vvEZWD4Vay5N3DuNM6fpDkTrezXZ7EtksFAvauV0H
3pARimvDrdv/GUn5EsdQPLDbYnrKhswOxYm/jwIrA8mcUMTmThS2ZZG5oeiV
5Rj68zxZEgrnbwd1yqvJ0lCEDr+ZpNtBLgpF4N01B35rTKXrD8XxRfM3mZmS
K0Px4820l9sWk+WhmFud2driTm4Oxf6XmWeNA8msMAgu+cxQiyGrh0HrruVh
3xSyXhg8J25apZpBNgvDnlFTai6JyAiDZael4cpMsmMYhiTqRYjTyOww6Pcf
f8wyjswJw7T8YzN0tpC5YTAR24d0uZIlYQh6vKZgjxVZGoYBBWHeF/XIRWHI
zm+PMuim+yELw5nPuhE7H5Erw5DnuuVupZQsD0PANJPh+/zJzWE4NEQQc34S
k98KR+W+2fL796k/1cMh35JuV2fO9H84Sidrl1luo/FhFo6amQW3N76g8YRw
fA1e8LVzGNkxHNlPNyZmz6fxyQ7Hxcgxea9caTxzwhG6M8s/3IsZ/+E4slpW
puVB80US3rM+T9vLXUjzSxqOuTO4FtHaNB+LwmF/Q2/c89c0v2XhmD6uPjZ+
G60HleEYa2BouN6M1g95OFTUg5Vir9D60xwO3+sOph/n0nrFikBcReZKiROt
d+oR+HL+plphH1of9SLgKXY3vL6H1lezCFzc+exe9gBajxGBkhL143PKKF/h
GAGZ7Z0Rv8Yw638E2vf43taX/FE8PzgROOJx+b3Duy/0fhuBY2s8S3kymeL5
JInApqtl9VeU2uh5FoH+nwpP5o+j/GBRBLbsX3/nZBM9P2UReHVj+5T33+h5
WxkB83mahmVh9P4qj8Dbf/6Z7dmHnu/NEeiuzG/Kl1I8wIrE0z6NkWP0KH5Q
j8Qbz8DKOxyKN/Qi0TFEcjReRvGJWSQ8Bu98s2wg5RcRiVxx8OJ5LhT/OEai
VmD5xSqbiZcicS80/uq8BxRfcSJx9cN3mfA3kx/r+bx9sz+tGEjxmyQS8t6Z
Dm6aFO9JI3G/3Mg6S4PiwaKe72u/y6ehH8WPskgsKWoJWfadXBmJKb9VVl1g
4lF5JIz9+6tNPkrxanMk9iZdv/PvJopvWVEweGXyyn00xcPqUbisWZrndJWs
F4VA/vOdFS4UP5tFQXlCwVMV5n0SUdDtiBvjvYTib8coOGRVm684zsTrUdBc
d3Ddih9kThT6ObuIWVOY98couFe9S9ReRZZEIXPHvFhfH7I0CuEDwlqqNpCL
otBXaPrUZylZFoX8J7fPztInV0bhS933Hal11J48CobXp6ceziI3R8E8t59y
xxTm/Tca5gvXDh10ga5HPRo/TaaN5k4l60XDM2vSMdYeuh9m0Yg53eve6mbm
/SAaR6wtdq21IDtGY+iKjvG/g5n3hWj8jcp7Oe0g9QcnGiNDXRaoXGbyB9HI
Huw7mv+Y+lcSjSsxA5yfvGb6PxoT8zW/D66h8VEUjWGbfGZ5PWfi+2i8fyI/
3n6HxlNlNIasya78voXGmzwaPP/zquZWNB6bo7Gm7bChSn8ar6wYzNlc//B8
JcXn6jFQC9o9YOcuJh6PwdX+G+LeuNN8MItBYI7X0Dv/n2+NgXG7+rzetTSf
HGMQM/rPDts0mm/sGLiuyK1KtaL4mRODiv1TllQMoniZ29O+S680leaBdP0x
+PlK5bDhHxW6/hh0VbbvVjnUrVgPimIgyA7+Pq7wM8W3MZg1d2JA2PwdivWk
MgbH44RySfxnheUxWG5c7GDJofi1OQb1qwZrnJ5I8SorFsniA5GLCyj/qh6L
RW4ftmqVU3yqFws1ydLOyxMoHjWLhVWWZkS0GbP+xaI2Y0p2/x8UjzrGIujw
uUeuIbResmOxRd5R6ZtL8SgnFi0PWLluGRSPcmNxqnSCKlef8o2SWLT5WWa7
byRLY3HE9cC7o87kolhs9Lu8xPMr1ZfFojg8y+OFCbkyFuKRb/eUazDxbyxW
63+M0DpM+crmWDj8U2ru95i+PysO1WtZSXn5dH3qcfga/efzUTtaz/XisOjB
3T0fM+n+mMXBVWnAnzX6lL9GHGqiOLpyDcpvO8bB8Ui/ff5BLxVmx+HvqVuX
jsx4r+gvThyqjocO7eruoveXOHSWeXYFxVF+UhKHlVornqhdVqf+j8OPeTPN
TnXQ+1ZRHO6isXTrJiaf3+OOJaslPMo/VsZhCKepo48XvR/K47D/5texqk40
npvjUDz3fMGKJcz+UDxc86d7BNvT+6x6PPSHhvHe2TPvw/HYUWFslGRA880s
HslFD220DtJ8RDzmss5j3VCav47xeLk+TadvAs1vdjw6apQuVtUw8z8e+/aK
rXZMo/WCGw/ZFadlkyNpfZHEI6L8c5P0BJPPi4fI8JvpsP9ovSqKh7dH+pw7
z5j1Lx5aWX80p96jfEplPBzP/7xad5zyL/J4rOLvfpO3lfI3zfEo5LU/uaDG
5H8SkD9Mf16JM1k9AcV19jc7xEw+KgGHzffq2jD5LbMEaLYO/hT5gslPJcDV
IdAy4xPZMQEvx9b8zPzM5KsSUFVX+v6fWjInAWlh9jzVW0z+KgHnw3wuDDxE
liTgsqAgQHMzk89KgKr+0zs7jMlFCQiZaLJ2RDldjywBj638dhqokSsTULCt
8QxvMXP9CfBMPbMrOZDuT3MC1o7fdy89ke4fKxFT9izs05tH91c9Ecv2KPG9
Q5j1PxHC38MqJrkw638iuswrrV4ZM+t/IgrUXri3fqf+dUyEU6f7yW9Mvoed
iP2CoyvtAml8cBKxtflrXtBoZj8xEVcO6o757xaNL0kitPxX+J8LpPVcmog7
Him3f46hfExRIlYev+1Vxqb1W5aI2pHPrNQP0/pdmYjr2xKTzN9R/kSeiGuu
nBjr8TQfmhMx5NOhQtMgmi8sLlxs3mRlx9N8UuVix17Li6kmFD+pc1E81rlj
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
TFPE
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxd23+MHOV9x/FpacqFUnXbuuUSEToQ2h4kgoUYWGwMHwzGy0+vbYwPY8Pg
n8fvxfju9jhjhvPZXt+ez5sGiaOt6CCouKYJ2baKdIWiTiMiThVJlkitr6nT
LmoargoVKxWaaxRCb579rnTP+/5JXnyfZ57nme8zz8w8Oz5/52Ob9vxyEAQL
ZwRB9r+dv/Z1gf8nnz06uOLV9e8++eaqjnNdv9bxCr123pGfbJz9N4v3wufq
4u0nv/VR38/NoVZ+Kfs7Y3XHF8AXwn8A9+nNj/qWjvip1zu+GP6i/nvj7FIP
LjJfAufhy/S3rr8yX474l+CV8BXwlfpp1p2PbjFfBRdQ/mp4Fcqvtv5tNV8D
r4Gvha+D5TsW2rvedwwHa1F/LeI3+OOJ4eBG2Tg6+YzhYB3i63TtWadeKq/Z
aPGbbP7dY/Gb9J23l/5uiyy+Xm66nd5pcTgoIl7U+1n/Htpj8Zt9x3BwC+K3
dObn3+y1+K2Iw8FtiMPB7YjDwR2Iw8EGxDeo+O6TK159a7fFS74FxyX9b5bP
QXMKBxt9a6NeLq8569Tnu/XhdKM2Z+l/Z5fV36RfcuXM2qQdXj7gdJN+LUv/
RDd/mzvrS8GszRrYu/T34/utPpxu1tle/Tt96041lmbTikusPzGcwsEW34Jj
OIWDu1D/Lt25/PzEiKeIB1tRfyvqb9Wil7+t+tPnl/4+050f/b4Fx/1Sdr29
YU7h4G7fuls/Wpo+6++3+R/frerS6nDep/ZZfTjYpquWXy/apv/06m/Ts0vp
3/4b5nSb1nrt36PPZJf/s9324fgenV5K71lbu/2/Ry9449+uwaXp+VK7O3+3
68JsOXuhO3+36/tuPemePzjY4VtwDKdwcK8m3Pno5g+O4fReG7/N5+A+7cmu
j+33Wn04htP7tN6tn3db/ciPh7DgCI7hBE7hFhzc7/cnhAVHcHy/+rJ8nXen
tQ+ncAsOdur5rDsn7X4S7tQK93/usPbhaKfGs/lSvtXahxM4hVtwsMt3uEt7
sut3403WPhzt0qZsfV5fsvbhBE53qZytf3u3WPuIB7u1d/nxw90quRtiwdrf
rVfcDffXrX04hpPdevnTWX4+27m/p3ALDvbolex6eDvfcbhH33bPB1d0LMQj
OIaTPdringfM6R7tzNbHVy+19uFgr/5vPJsPl1n7sOAIjvf67SV7dY6bn932
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
Rv8SeAZuwLNwiuPPId5EfB79a8ELcBtehIOjvnvgHNx71D/fIdx3VM+5/bXc
6538wwVYcBEu4fj9iEfwAFyGKzhejHj1qN5y+3df7LgOT6N8gvgM3ED5WTiF
5+Am+jsPt+AFuI38LR7F9X8M1z+cg3vh8Jh//D44DxdgHfP7W0S8BPej/Qge
OOZfP2W4AsdwFa7D03ACzxzTme646+36h2fhFJ47pt93+2232fUPz8MteOGY
LnCf29v3XW148Zj+Knt/fXSz5b/a+X7zY/s+rKeqZjb9Jvst/1Xdl6XnXPu+
uhcO4T44j+MV0J4QL8IluB+O4AG0X0a8AscoX63qg2w6/eUOy39V12X9/Zx9
Tz4NJ/AM6jfgWZRP4bmqjmXzeY9939mE56v6Xtb/r9n3yi14AW5X1ZvtH39o
348uwsFx3z3H/fo5uBcO4T44f9zvfwFxwUW4hP71w9Fx/V22nzlt39MOwGW4
gvrxcR3Ifn4omatovw5PwwnqzyDeQHwW8RSeg5uoPw+3MJ4FuI3yi3Aw4bsH
zsG9cAj3wXm4MIH8w0W4BPfD0YS+kN0/eswDcBnlK4jHcHXCn691eBpO4Bm4
Ac9O6MpsO/u3u/8eYaLzvfw/dK//CX3F7T+YmxO6fvn6MA+3JrQqO97/2PfU
CxP6Yfa+8tx9ln94EQ5qvntqnfW5e/wc4r1wiPJ9cB7lC7DgIuqXaro0y8+C
xftRPqr54x+ode7HL5rLNa1z9xtbfys1fbh8PY5rKmXPF2eaqzV9kv1+9s3t
lv+avu72Y8zTNW3PXl9/05zUdJbLo90/ZmqadfdXc6OmNa5/2yz/Nb3v+mdO
a/rjLN8bzHM1FV1/bX+5WdPZrpx5vqbvuv0mc6umeja/1pkXatrh+mdum9+x
+91iTaH73sUcTHb6c7+5Z1LfcL/vde//kzrqvk/Zavmf7PTvDXM4accz903q
p24/wJyHC5Od/q81Cy5O6qD79xi2f1ea1Bfc8425H44mbb/HPDCpquuvPV+U
J3Wl+33LXJnUj9zvY+Z4Ul9x37+Yq5O63v17lO7+36Ta7vyYp+EEnpnUbe78
2PNVA56FU9SfQ7wJz8OtSb3i/j2LeQFuT9p+zybLPxyc8Mv3wLkTfvlexMMT
fn/6TvjjySNeQH3BRbh0Qvd1voey/J/Q653vmSz/8ABchitwDFfhOjyN85Eg
PnNC77n3tw2Wf3gWTuE5HK+J+Dzcghfg9glt7XzfZPk/obfc9zy3WP6nfPfA
uSn7/bJo+Uc8nPKP3zflt5+HC7DgIo5XQnv9iEeoPwCXp5B/OIarU35+64hP
wwk8g/oNeHYK1z88N6V/Xb6eNaf89WkebqH8wpQ+v3w9bk/pIfc9RHf9h4OT
vnvgHNwLh3DfSf21u3/Y/Sx/0vaH7X5YOKm1bn21+6dOasKt1ztW/z/uoHSk

           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.01, 0.01}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0., 1000.}, {-0.01, 0.01}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(2\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(3\\)]\\)\""}, "LineLegend",
         DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"torque(N m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6985507001710777`*^9, 3.698550717526689*^9}, {
   3.698550765867029*^9, 3.6985507929795437`*^9}, 3.698550838937842*^9, 
   3.6985512922299433`*^9, {3.698552516714411*^9, 3.6985525368255033`*^9}, 
   3.698560747181594*^9, 3.6985607801022263`*^9, {3.7098119023147297`*^9, 
   3.709811915565405*^9}, 3.7098125351956244`*^9, 3.7098127705098047`*^9, 
   3.709812884325437*^9, 3.7098130684158382`*^9, 3.70981463630086*^9, 
   3.709815069582802*^9, 3.709816726612154*^9, 3.70981692726938*^9, 
   3.70986858373102*^9, 3.709871931388651*^9, 3.709872400479445*^9, 
   3.7098736078443213`*^9, 3.709874869932499*^9, 3.70987630298131*^9, 
   3.709890515149897*^9, 3.70989175511252*^9, 3.709898601483211*^9, 
   3.709899099166195*^9, 3.709899538201262*^9, 3.709899901762289*^9, 
   3.709903589894353*^9, {3.7099072024519863`*^9, 3.709907216354295*^9}, 
   3.7099344775856667`*^9, 3.7099348440331593`*^9, 3.7099729470175333`*^9, 
   3.709973249551299*^9, 3.710060924426415*^9, 3.710061111215005*^9, 
   3.710063661169512*^9, {3.710063692437187*^9, 3.710063733080749*^9}, 
   3.71014203385667*^9, 3.71016449839093*^9, 3.7101651102798967`*^9, 
   3.714324370898074*^9, 3.714375203191057*^9, 3.7153323953772507`*^9, 
   3.7156277014491653`*^9, 3.7156628624670897`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_input_uav_torque.pdf\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.709811943394271*^9, 3.709811948267392*^9}, 
   3.710055928993925*^9, 3.710057803743363*^9, 3.710060307714752*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensions", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}, {
  3.698506725913652*^9, 3.69850672844914*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"tensionsList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "3", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(T\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(3\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.69850669195057*^9, 3.698506717899823*^9}, {3.6985508208686934`*^9, 
   3.698550885416868*^9}, {3.698551309719589*^9, 3.698551310008038*^9}, {
   3.7098119851768627`*^9, 3.7098120064221*^9}, 3.709874876888335*^9, 
   3.71006095166644*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23c81e/7B3ClT1aDJlGdSqVBp2VlvFQiGjSljOwVx94c8ywOTTRVioaS
FE2nQdpKQ2mckmiJQirVz+9xrvcf3/7p8Xzcbve5z/W+7/d9X/dtnFvQCs++
cnJyLfJycv//v+xfm7nc//7D/1IRikuSGxqMT1yWWRWP2ssKp2ZUk4dhxgvd
VZZBT8jq4OT5qo7d/ZashbQ/KtUNtz+RWdh4zW8pNn4nj0fncW/H2ks/ydrY
FnM+LjdOrlLmSXjy375gW34/sg5s2ownrZdTIk9F8Fb94XVvB5Kn48elGMvS
HWpkPUy3GN5yInAYmQ1npQNtDyJHkmfChlcwb23JKPIspG8QDF4wYgx5NroK
S/qfqmOR50Bbd/33gpLx5LngZ2s4F+drk/Wx2exkuuuBSWQDDJ3DGmpSpkM2
hP6FD/GHH00lG+HrvaNn2vroko0R5rHhw1rjGeR5CN/je1n+Mptsgvvp57Iz
384km2KRRwCvVmk22QylgyOm3Zs1h2yOxgV6RSkb5pKB8y9UlT6l6cvMBZLY
Y+N7ig2o3AIjF73bfbLOkMotEOA/pKSn04jK52Pf3oqvL4fOo/L5SPHSuWo3
3YTKF+Dc33tf1piZUvkCdJvHSX5Ym1H5QqijTsfC1pzKFyJ8c4eL9nhQuSUq
kk657sgjcy2R+NAhSqhiQeWLcG7RtDN5kWTuIvgsmFPi9pIpt0Jx9wepwGQ+
lVth2Cbl9+e2keWs8cOj9NrBJqbcGkOmV4/4p7eAyhdjw7IXpkIOmbsYs+2+
RiofZcptMJWn+9O2gSm3wd7IpV3j+i2kcltsLn122EubzLUFy7bd7Pc8pnwJ
3t3s8+aGDVO+BCZG//Ev2DHlSzGs5OHH20uZ8qX4+0BtXacFU74Mrxe4bTHW
ZcqX4Yq5VW7BYKZ8OcYFeMbO/8B8vuVwHLBXe8p55vPbQXxCPCo0mQw7nLr1
YwHmMz9vh4ExvMIzP+n7kdjhUX7ilD9FzPdnj8gzRVaWdmTYQ+v57zrJVyYe
9hi+yufEYR5ZYo9XR9QSZqoz8VmBZ282+O3bT/HFCgTs1Ho0U5uJ9wqMV7AZ
4wh6PiQrIA0bZlQyjXl+VuLRGuHtbmV6vrASJj0f2m+9Yp7HlQiwf55xpdCY
6q/ED8fwyhgv5vldhQ5XESdHk55vrMJ7DZf7528w42EVFlaovRD403iRrILk
++fvRxWY8bQa27pKNlbtnkX1V8Mxu9837jQaj9zViDAyU1fxpfErWY2PXjF7
OjnTqf4a/Hn7xG0wZwrVXwPBS8dVBd40X3DXIDmq38k/DhOo/hrcGsVz2mjJ
zD9rwd7nfmH8BpqvsBbLg+o27NCh+Y27FiZbY9RHN6lQ/bUI0nqScb39L82v
DjD+NWdjoqBeZjjAS49nINn5zUxW3wEd1Z0+y/f+J3svSBxQu93Ucm+rKr0n
1qHo43f9b31Hyox1OPZh+yM15dEyc3ut/fvDH+44qr8Oc/yXf3UJ06b6jhj8
41C6ufNkqu+IgatNpp01nUr1HaF+2CDqvZou1XcEO/nIyp5nM6j+epxd9V6w
w2Ym1V8PfZHj/fX7Z1H99Xi4b+38b22zqf56OEytUpY3mkv1NyA9LdXQJFqf
6m9AXh/Hm3anDKj+Bhi1HzzeLTWk+hug//339TYFY6rvhKx3L5t/TZxH9Z3g
fyCw4aWxCdV3gtuw2BWei0ypvhPSn1a932htRvWd4TmnXO0IzKm+M/q9rdws
HAmq74yJI5x2XxWQJc6wrV2c09pFlnPBxILLt/q6WFB9F3ydMPNB5xUy1wWX
o6ZlScbOp/ousH2wZqpzFFnOFVNzjv67fZvMcsXF+8W5SqMW0O9zxbfw0/vU
3cmurlCb1vWw5zCZ6wrb/NCuC03kfFcc6fS47jR2IbXnijcuM158WkmWuoJv
UXQyOIUstxHpSsLAnmIyayMGa/d83VlHxkZ4FqrvdOogu27EFrGX1RpVS2p/
IyKTl0/NnUzO34iEuOMnDIzJko2w3rx7nY01WboRz206Ct/bk+XcwO8o+TRh
LZnlhinibp1RDmS44cppm+9vVpFd3WDtu9d221KmfTdYvjbi2sxn2nfD2IMa
g8fMZtp3Q97E8yIdFtO+G6olCoIUJaZ9d+hWjOZbf2X67w6JYNXn7AdM/90x
8dznjvASpv/uOJHqfVE1g8ztLf/tZBrjQc53x9IDHhtuGzHfvzvGxtl0aQ1g
vn93WL6/2c5roHjJeeCDx7aVE4vILA+4DExZOSiEib8HxOsOB28wYuLvAcWe
b4Ipf+l54XrAt9OpKUtCzvfA9qMuVke5zPPmgbsnlH5sNSNLPXC5z6hrPr/o
+ZTzxAC7i3KWZWSWJ64lt6daBjDPc693Pc/ljSe7eoLb4fpB5ykzPjyheKg5
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k0lG/YB/ApijZLKFKaitKuZKmob0UkaooiUWOXJWMf+4zBzDCGVlpp
pU3a5Nc67SqVdqUypUW70qKN13vmet5z3v75nc953M/9XPd+3fyG+EctDOrK
YrGa1Vis//2v6l/LdNb//4f/T00cdC7ZZ5b09IzKOhjBGdOwU9RK1kdZsb6H
9hfWWZUN8cvVwcJKTZM8ELGPCte13O1DZoM7U6C35YAOeSg4hWbtokeMTZFW
WDMr11iLPBxrh+34++RfN7I5kv0a3ZY9/kL1j8KQ9V1W9D/ydZrKY8C1P35r
M1+H4hqHqZ4n8/a+MSFbQGk9K/LFlxHkCRj8xE7UftuCPBF+59a/r7a1Jlti
X0zytVkmduRJ2FM3dNkH2xlkK2yeyvE9UOhAtoaoJDH6c29nsg2EB8Z809s5
l2wLjkJsKnWdT56Mv/xSg9T0BeQp2Be5JNVqsTt5Kj6L3dlWIxeR7dB1jkmv
3NbFZHuMrZG/W3fIizwNieV87b5cb/J0FO/d06j7dykZuHd9tqmayFdlAbAy
3GfD/q/L6PkMGCzRk68z5dLzGXDOsHydcJ7Mmok5/xKOeS30o+czkbEhZ+Pp
u2TWLNzIsv5vzmx/ej4LXUeuazm7h8xywO97Fbod/5jnDjAffsS0Y2YAPXdE
zMIrl2/yyQJHVOV8LissYZ7PRuSmvuOSjjPPZ0OLY4paBfPcCWL25ykNJ5nn
TjimcVJbbQ/z3Bl9Ng+S7ZUwz51xrYf8KpYyz+fAfMuj81OHMM/nYKnRzD79
G5jvd4FLzNPDC6XM97tA1+v46JgxzPO5ODp8Yuyfi0z7zEVQvwk2Ce5M+7ii
7Ox+k/B6pn1dUXkh2izAg2lfN3h9emRws2A5PXfDMp9BO/8FM/0zDzr4UOo/
num/eThqmLxe4x3Tv/NR9ePC9NYi6n/BfCS1v/k8YsoSes6BVnVu7x23PVUG
ByU+Bht8ltN4EnCQ8fxu3eyXHiorOJg+wuKmmx8zHhegiyTJ3vMhjVcswK9x
941mOnGo/AJwHti+rg1wo/ILcKfSLHGUhQuVXwiFRbutxffZVH4h1MM3b/M/
OovKL4SHhmZPmyhQ+YXwbHT+PHzeFCrvjvmmeg2bT1hSeXdcFA/XP+k6isq7
Y+tmu0Cf+QOovDuGX4piLV++jtYHDzj2a111pdcA1XoCD3iGLbn2udsolQUe
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
+kamJHNTkDH6pzg6RENlXgo8bocaFD8jC1LAnlPfe7kj/X6sMAXrhtr5D9tE
Lk2B01Hvw2gkV6ZgnOOMZF3dHiorUqAxS93j83hyXQoGHv1iazmVrEzBpYQl
V60mkltScP1Lz43z9cmsVCx6tl38SEnv10lFpcVp7bFFZHYqJIONKndaky06
n++tmrv5DH0/UrHs3od10ePInFQMq+WJsrKZ+FPhdtXunM0Fai9eKi6/tZvw
5TW1pyAVofKtEQNaqP0LU1H+Ze3cIc+of0pTcXzY0hh+JfVfZSpulFs0FQVT
/ypSUXS/26g/HTQe6lJhV3t3oE/bb5WVqVijNrxH2LGfKrekYs6kBX/mWtP4
Y6XBokvMh8nJLTT+03Bb3c30L+stjf80dLPQCfxQyIz/NNiP1T1dJrtJ4z8N
HFaJfP2a/TT/0xB6aI7nrxUPaf6nIcxEonWA/Zrmf1rnWXH+ngU5LTT/0/Dy
7r11ArsfNP/TMPBUnvfDiX9p/qdBajOofd0kWn8q0yD4Ybt9YxStV4o0DIpS
3nC4RutbXRpGXBv2a54DrY/KNAR6cHz8n9J62pKG8oqLU/JcaD1mpcOdN92V
b0Xru0461E02X5wwnvYHdjq0J8WsCrGh/cYiHQZXb3RTuNF+hXT0Vvw68TCa
2f/S8XN4KX/GDtpfuek4tXuXac5z2s956fApKfTt2485/6TDroU7Ys4M5vyb
Do+W35qDYuh8XZqO/Mjco9PKmfN/OmKqXnT1bqL8QJGOcTFvuvUbRvlIXef3
m54abBBC+YsyHYd+XzL5XsHkP+lYcypr2fzflB+xMlA5ccbHamfKr3QycLqn
tOr8BsrH2BlwWbPi8K8PlK9ZZKCCtVfWymbyvwzMu+g0T7OWyf8yEFeStyA1
kfJFbgZWKXwdtYdRvsnLgK3n/oSMm2RBBhKO/PwmTaJ8tTADM2WHq98No/y2
NAPnuZ7XfW6QKzPwJUc3emM85cOKDAxKeuDuO5Dy57oMpHVcPbjsHFmZgT7j
Lgs8Ayn/bslAteJZJasb5ecsARKMq5z0dpA1BXCcmrTReRrl9zoCTOjtmer9
gGwowAJNpyi1cOZ+QICvsq/32v+QzQVwG752cA8p3SdYCHD4fUlXpS7dN9gK
UD9ac8fM9WQIcPful8tfDOh+wlmAsMX71SsLyRwBzjufa5nRne43vAQwTWxx
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
o7P/A6ye6Eo=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
oA==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.004096829054056241, 2.009373075813259}},
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.004096829054056241, 2.009373075813259}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(3\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+IjXw/y5Pa9dtTRUhAG0VwbbzuC6Jw3ErdA9A/Z548L
gXQfp/vS54tfO966avACRC/jiGd5AaT3HbITBtEcFjnaIPrWqlVvQbS5xm3l
l0C6QqLnM4ju+CTE8wpI1/9sdmVe8trRo2HDTlYg/cJzczgbkK6q38TFDqRZ
rh/6zQukD21b8E4QSDuVeiUJAemZjAUTQLSU9MEYEZC+V3eUxID05nsyE0H0
qrBTxcpAel/MfWszIH2td24yiH40W8g4EUiXSL93A9G3Nric6gDS83bGHJoM
pCuuX+SbAqTFNmZ/alrz2jFUtPTIbCBter9CNX/da0e+47vD/gPpvAW3GgXW
v3YEAIiJo9M=
  "]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_tensions.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{3.710055928962397*^9, 3.7100578037443657`*^9, 
  3.710060307715787*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Thrust and Tensions", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}, {
  3.698506725913652*^9, 3.69850672844914*^9}, {3.714322845556993*^9, 
  3.714322848587514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux1", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aux2", "[", "comp_", "]"}], ":=", 
  RowBox[{"tensionsList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"aux1", "[", "1", "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"M", " ", "g"}], "/.", "PhysicalConstants"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"aux2", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux2", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux2", "[", "3", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<(UAV thrust - UAV weight)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(2\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(3\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.69850669195057*^9, 3.698506717899823*^9}, {3.6985508208686934`*^9, 
   3.698550885416868*^9}, {3.698551309719589*^9, 3.698551310008038*^9}, {
   3.7098119851768627`*^9, 3.7098120064221*^9}, 3.709874876888335*^9, 
   3.710227167729561*^9, {3.714322902386936*^9, 3.7143229586535683`*^9}, {
   3.7143230222970743`*^9, 3.7143230243912992`*^9}, {3.714323178386656*^9, 
   3.7143232274685593`*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NrL2ZlT+cUpO+kNQfKBxl3cOpD8EVdO+v2lD64M5BOrvt5Z3m0r61SioXVwk
nkT61cixGfGl6XjSr4Z09O6kKhnpV0OZsiV5nw3pV6Pc3W+kp5T0q2G++/mc
yJr0q2Gome65rz/pV2Ocab/LKDpP16jh4JR5+2BP0q9Gw7q5rXv+SvrV0O62
koV3Jv1qBMp6Zl4RkX4Wr43JoWUb0q+GboF2x9gWpF+NqryK0qWNSb8axiZF
b/2/Uf0TCvvMyTPD6qn+CcWL9f91CvxI9U8ovMtswxVUr0hDof+oOjiR6hmE
ov7bx787UL0jD0XxF8Gs+4+p/gmFx4Ti1roHVP+EwnD/0cJxd6j+CYUxZMrC
yutU/4Qix2K1jeoK1T+hyJ1X0L3+AtU/oSi/0m9U4Bmq70JZftsWvTBwrgiF
Y/WanBl0f1AVioKh7tY7/+BsZvaq0dr3u0l/GLKyfG/Y/E76wyCsetPXh+pT
SRiKrnXYt4XqV2kYrKNq407rSH8YRAXLb96l+wd5GJQZsqPP40l/GEx+6nmv
okh/GJuvAsuq1KQ/DOJ/W46v8Cf9YSjueePWUW/SH4Yjm6ftz6R6Xh8Gi0Md
/nWnet8YhtLWfa5bLyb9YQjMNa+oWUD6w6DOKnj4O91nmFn8Sw4e8umkPxyu
vwgH/wvSHw7zhmErM2n/IgmHLks70ZL2N9JwSC4vfK+n+w6EIz4g7ZBNf9If
Dvuzr07rJaQ/HIqkJvMsfyX94ZCqVcXraT+mCYes64VOX9qQ/nA2n2y75kz3
IfnhKNvqOd3jB9//6dnzx3QXW32g/SXrT9y8o4UvOFeweKZRJSPv036Ttbcr
N+HUFc7mcFgtCj0/uoT2nxGw+rXngH20nxVFwLTibWCXHbQfjYDm9ZeVYRs4
SyOgKDUY79N9CSKg7Bwzeyjtr+UREA2UmGJW0341gu0XnIdWuHJWRcD+16V9
u82l/XMEZB+Q4j6Jsy4C+nteI/eOoP10BOR33/1XS/cl+ghUlbXVj6T7EiPr
7/eEARGtSD/Tc7hhbGkDnXdEwHx15bF2tZzNjEeuWeNK5x2CSOQseNBv/23O
okjgoOhQU7oPkURC7Rp1S2HgLI2E5HO3GRd+nk8y/031N623cZZHQr7yzz7b
6XxREQnlaV1tVzpPVEVClDS8aksgnd+w52XjtvT34qyLhPDlllNnXOg8h8XT
rnqkoPMnfSQEG64kt5tI5zuRKCu8PLeMzgcr2PPDHA5k9CX9kVDt6NrHjc7H
zJHQr7/S064V6Y+CPPBDu+Hf+PmbKAqad0NchprpPC4KwvEOrrbPOUujkH85
UOV0j84Ho2D65P5Kc4WzPArGlPw2p0rovDAK0ogSy2Z6zqooaHWb/ZfvpPPD
KJgvHBx8NZuzLgpWp9zSpqbQeSLjQNuzNyM566Mgi571wdePzhejUNQ5YHaP
lZwroiAOPFxX6UznjUzfhyjhfgfOZtbfpcJdOtD5YzRMIzNfxduQ/mho1x57
kWJF+qNhjjl16PfupD8aZTG3PcpFpD8a6KdsI2xG+qPhnLfsxMIvDVx/NCSD
FocdfcdZFQ0rZYNr/2ecNdFQevbx3XePs449H2t5ctKfnPOjIRO3nv3mLGd9
NIyWl4YXHuFsjIb0jVeI/x7OFdGw3+HYf/52zlWsPz5Bc6ds4GyORlG88pu9
lrNAA/mJAxMVkZyFGlQr/7JM8ecs0sD0/KzxkhdnsQbOTqm9uyzlLNFANarx
cvV8zlYaKMbmpr6bzlmqgf7OvrNB4znLNCgbFGvRYQRnaJATm1l41oqzvQa6
Jhm6mJ6c5ez5e2n/OllwdtZA69vr88RWNL4aaP5Rnxwn4KzUwJgZ4DX701c+
3hpY/XPKyr+Gs1qDos+PBu17xlmjgTp/7o56E2etBtKPWSWLb3DWaVClHXPk
5kXOOUz/6JfnlpZwzmfPP1rR+8chzkVs/Hrmdz62h7OejU//E49j8zkbNKho
/e7Cyk2cjczecnu75Rmcy5h9hX3rtQmcK9j4PAxumR3B2aRBvunwkjsBnKvY
eHQNWTRwDedq1r/GooU5bpzNGghOpB3ouZhzvQaG29tKT8/jLIiB6mtwXdAM
zsIYlAUU75g+ibMoBroTbYeNGMNZHAPJssiWY4ZxlsRAPvvSBpcBnK1iYKX3
HbuxF2dpDJQF2lU1v3CWMW4Wk7G8I2fEQBZX07W2FWf7GDjPWRC0tQlneQyQ
+7XLyob/eP5jYD/jsI/Dv5wVrL+vct7M+4ezMgbS6Bffg15xVsXAOEPf7UQV
Z3UMTIZzB7s95KyJQXXzBcO23+asZf3P/6vlpGucdTHQ7Hi5p+llzjkxEB2+
FPXayDmf6Q+Jras9ybmI6bmqCxIf5ayPQX3jQ6vdD3A2xECgvDD25h7Oxhjk
/9g4062AcxmLV3W5oUse5wqWn975B2s3czax9hPeXarJ4lwVg4rnrza103Gu
Zu1FWUQuTOVsZnr7Di4/l8i5nvV3YivTgljOgljoDOvMraM4C2OBE7lub0I5
i2IhHvw9pDaIszgWsm/uId38OUvY82+cC3x9OVvFst/buImvV3OWxkIgnJyQ
6sVZFgvjgjX6hR6cEYuqWRmfp6/gbM+4g1OG2zLO8lhoNtsXFi6h/MfCOfPa
qg4ulP9YVDwd1XyXE+Wf9W/b1R3ujpR/Ft/2umLmfMp/LOT16z0Wyyn/sWz/
FffnhjmU/1hIz0sPfnKg/MfCdMJ9SNwsyj9rb9hAlzEzKf+svyOqp/wyg/LP
2h+mbNzHnvLPxqfgbZ7TdMo/0/PCdsCRaZT/WBian9ptS1zGnj8S2PvdVMp/
LOrfDNleRmyKRXV6WI/rxFXM/9SF/G/E1bFQ3V/RbxG1Z46FevzuvQ+J61n8
Deb+WuqPIA66A4ezl1N/hXHQtM54pyA9ojjoz87vlUZ6xXEQNRJbPqXxkLDn
e0x5s3w25Z9x3WaFcC7ln/HbKcEPabxlcZC6vuh6j/KBOCAqW/qV8mXP4pU3
3jtjEeU/Djmv3b3PUb6d4+AsyFzm5kr5j4O5uLmn9XLKfxxMnrWev7lR/uMg
Uw+aYruS8h8Hscb5SbSS8s/0aE3id2so/3Go32+6EbuW8s/svoueIYDyHwdl
5MDB/UMo/6y/S5qmjQyn/LN4UaEP1kRT/pn/4Ga1V+Io/3EwdGhXOFdL+Wcc
9uZWQxrlPw75Li/m3Myk/LP+/Bj3T3k25T8OZXnShNqtlP84VGd++Vu2g/LP
/JW3XxbtovzHQV3xbf7EYsp/HIxTzn7/epDyHw/1Zi/D4+OU/3hUL58/59Vp
yn88rKxep3cupfzHI//3QrtVVyn/8TAUdrJ9VkH5j2f1yu0JmvuU/3joLm8W
2z2m/Mejou/IzIEvKf/M/m+qalQN5T8e2tq8SM+PlP94yGeuizr5H+U/HlV2
2bLhjfn6oIiH/VaR6lpLzsp46JuGV6d2oPU/HpKNgR4+tP6omR5rY6EfrU8a
xven+uTQ+qWNh3KkRfhTWt90zP/BigyHsbT+x0O1N2Plg8m0/rN4My3PJM2i
9Z+NX2il4yJHWv/jIY3JeTl9Ka3/8TBu8x7k4knrP3veP7cqZS2t//FAzLYz
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
8Q==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23c81e/7B3ClT1aDJlGdSqVBp2VlvFQiGjSljOwVx94c8ywOTTRVioaS
FE2nQdpKQ2mckmiJQirVz+9xrvcf3/7p8Xzcbve5z/W+7/d9X/dtnFvQCs++
cnJyLfJycv//v+xfm7nc//7D/1IRikuSGxqMT1yWWRWP2ssKp2ZUk4dhxgvd
VZZBT8jq4OT5qo7d/ZashbQ/KtUNtz+RWdh4zW8pNn4nj0fncW/H2ks/ydrY
FnM+LjdOrlLmSXjy375gW34/sg5s2ownrZdTIk9F8Fb94XVvB5Kn48elGMvS
HWpkPUy3GN5yInAYmQ1npQNtDyJHkmfChlcwb23JKPIspG8QDF4wYgx5NroK
S/qfqmOR50Bbd/33gpLx5LngZ2s4F+drk/Wx2exkuuuBSWQDDJ3DGmpSpkM2
hP6FD/GHH00lG+HrvaNn2vroko0R5rHhw1rjGeR5CN/je1n+Mptsgvvp57Iz
384km2KRRwCvVmk22QylgyOm3Zs1h2yOxgV6RSkb5pKB8y9UlT6l6cvMBZLY
Y+N7ig2o3AIjF73bfbLOkMotEOA/pKSn04jK52Pf3oqvL4fOo/L5SPHSuWo3
3YTKF+Dc33tf1piZUvkCdJvHSX5Ym1H5QqijTsfC1pzKFyJ8c4eL9nhQuSUq
kk657sgjcy2R+NAhSqhiQeWLcG7RtDN5kWTuIvgsmFPi9pIpt0Jx9wepwGQ+
lVth2Cbl9+e2keWs8cOj9NrBJqbcGkOmV4/4p7eAyhdjw7IXpkIOmbsYs+2+
RiofZcptMJWn+9O2gSm3wd7IpV3j+i2kcltsLn122EubzLUFy7bd7Pc8pnwJ
3t3s8+aGDVO+BCZG//Ev2DHlSzGs5OHH20uZ8qX4+0BtXacFU74Mrxe4bTHW
ZcqX4Yq5VW7BYKZ8OcYFeMbO/8B8vuVwHLBXe8p55vPbQXxCPCo0mQw7nLr1
YwHmMz9vh4ExvMIzP+n7kdjhUX7ilD9FzPdnj8gzRVaWdmTYQ+v57zrJVyYe
9hi+yufEYR5ZYo9XR9QSZqoz8VmBZ282+O3bT/HFCgTs1Ho0U5uJ9wqMV7AZ
4wh6PiQrIA0bZlQyjXl+VuLRGuHtbmV6vrASJj0f2m+9Yp7HlQiwf55xpdCY
6q/ED8fwyhgv5vldhQ5XESdHk55vrMJ7DZf7528w42EVFlaovRD403iRrILk
++fvRxWY8bQa27pKNlbtnkX1V8Mxu9837jQaj9zViDAyU1fxpfErWY2PXjF7
OjnTqf4a/Hn7xG0wZwrVXwPBS8dVBd40X3DXIDmq38k/DhOo/hrcGsVz2mjJ
zD9rwd7nfmH8BpqvsBbLg+o27NCh+Y27FiZbY9RHN6lQ/bUI0nqScb39L82v
DjD+NWdjoqBeZjjAS49nINn5zUxW3wEd1Z0+y/f+J3svSBxQu93Ucm+rKr0n
1qHo43f9b31Hyox1OPZh+yM15dEyc3ut/fvDH+44qr8Oc/yXf3UJ06b6jhj8
41C6ufNkqu+IgatNpp01nUr1HaF+2CDqvZou1XcEO/nIyp5nM6j+epxd9V6w
w2Ym1V8PfZHj/fX7Z1H99Xi4b+38b22zqf56OEytUpY3mkv1NyA9LdXQJFqf
6m9AXh/Hm3anDKj+Bhi1HzzeLTWk+hug//339TYFY6rvhKx3L5t/TZxH9Z3g
fyCw4aWxCdV3gtuw2BWei0ypvhPSn1a932htRvWd4TmnXO0IzKm+M/q9rdws
HAmq74yJI5x2XxWQJc6wrV2c09pFlnPBxILLt/q6WFB9F3ydMPNB5xUy1wWX
o6ZlScbOp/ousH2wZqpzFFnOFVNzjv67fZvMcsXF+8W5SqMW0O9zxbfw0/vU
3cmurlCb1vWw5zCZ6wrb/NCuC03kfFcc6fS47jR2IbXnijcuM158WkmWuoJv
UXQyOIUstxHpSsLAnmIyayMGa/d83VlHxkZ4FqrvdOogu27EFrGX1RpVS2p/
IyKTl0/NnUzO34iEuOMnDIzJko2w3rx7nY01WboRz206Ct/bk+XcwO8o+TRh
LZnlhinibp1RDmS44cppm+9vVpFd3WDtu9d221KmfTdYvjbi2sxn2nfD2IMa
g8fMZtp3Q97E8yIdFtO+G6olCoIUJaZ9d+hWjOZbf2X67w6JYNXn7AdM/90x
8dznjvASpv/uOJHqfVE1g8ztLf/tZBrjQc53x9IDHhtuGzHfvzvGxtl0aQ1g
vn93WL6/2c5roHjJeeCDx7aVE4vILA+4DExZOSiEib8HxOsOB28wYuLvAcWe
b4Ipf+l54XrAt9OpKUtCzvfA9qMuVke5zPPmgbsnlH5sNSNLPXC5z6hrPr/o
+ZTzxAC7i3KWZWSWJ64lt6daBjDPc693Pc/ljSe7eoLb4fpB5ykzPjyheKg5
xEpIzvfEo8zHvn1MmPHiiZCf5RYf62l8ST3Bz6xuSDIgy3nB8mGPVv9tNB5Z
Xnih46VxupXGK7wgeSVefN2K7OqF4B8268L2MePbCw2Pub96Omn853shpUdw
cYctWeKFuY9iWqLyab6QeqF+lq/bsw4jat8bxgo7sz5bk1ne0Lq8zqJpN803
8IYkUaego43mI1dvHHZ8OMvGkpmfvLHzUN/ioTtp/sr3xj7Ja9X4rzS/Sbyx
P8g8p8SSLPXG2BfKpU92z6H2fbBkS8iAEZ00P7J8cCpmT8bWZWT4oKW/YE3I
EZpPXX1ws77hft1/zPzqg+WlEQVP3Wn+zffBmyF5t3ddY1P7PrgRHZlpMpEs
9YGpp/2QI2rM/O0LvuRY+M8XNL+zfHE50KRf3vHp1L4vfhtb2Z/mTqP2faEu
DH7AWce8H3yh8GdtS5f+FGrfF2GNa7u8NXSofV/8uyXwapSj94u0t9z388W0
LxOpfT8oxEoKfF7T+4jlh0/3Rvw78GQCte+HStaWduu68dS+H7KNnTv9H9P7
jOuHgyVO70e9ZFH7fghWGzPx+qOx1L4fDpuu3LrjF70PpX64pfju2YVpWtS+
Pyw7BX9NfUZR+/7Yo3rSb3yJOrXvjz6mqwb4ydP71dUfQS4OkWpuw6l9f2yf
M0pB7c5Qat8fWSc3yTlZDKH2/RH488Xppiv0vpb6I+qNA2bsGkTtB+BxJ3tq
eY0KtR+AIAXecd0BStR+AN7P2ha3xrM/tR+AmPyma6118tR+AP41v/IqXtuH
2g+ArdHWHenSP7L1gyQAXoJzpuXGP2WWBsAxfek8w0sdMsttQuZkQYmNd5vM
rE3Y42jZbMtpkRmbkOj2fm6bk1Rm100w3dGutXPaA1qfbELzlOrddzfulzl/
E1JGZY99LKqRrWckm+B+u+Ntrt5zmaWbYMfza62vaaT1TyBePnOdnWP0UWZW
IPIv6266MbeN1kOBeD3W+IEPm/anroEQl9wyujSwS2ZuIL6KdGY/udctc34g
tqQptNSE/ab2A/F8ifRIsRytt6SBGDj44aX7Rsx+NggbOEH3nbz7yMwKwoih
xZuzBX1lRhBWsI+YdOfLy+waBK54UsrEE7T/5QYh5dcy5yOn/pM5PwjTTz18
Pux4f5klQfhZ6tvcvUdBZmkQPr0/r/2ep0jtc7Bp4PGzAX60f1blgFWuNVJr
kTJ9Hg4GhQ78mKxJ60c2B3cyZtfpfSKDg9IX3UuOnxkgs13vzxu/56bH0v7b
tff32UaMszIdJDOHA0XxUsuI32QuB48O1S3YeXawzNkcNCZuu7nLQJX6w0Hg
nnMrW7aQSzjwe33xQ8gXsoSDFXmW22OsaH9fy4Hm0wczTfeTpRworW1y/vGL
3MaBKON+yLtVQ6j/wTDZIB9odpKsGozT3b9aTZWHUv+DUXp7/6RRXmR2MMYo
mt1VvEZGMBTH1Y00G0frbbtgRHd1Fn/mkl2D8XKhSr7lWzInGJ/DWpyiLIdT
/4Phu+9ecelRcnYwuKblB1lDRlD/g3G4+EPu51hySTCGudVOMG8hS4Lx2LKf
qvlayl/UBqNic+oatZtkaTCGD1Ab8cxUnfofjPneu0XlZ8hyIehg31G+w9ag
/odgZkZs1+yTZFYIFM/NPac8k/YX7BDUmO655HuW2W+E4LZdmZePuSb1PwSp
qr8VtO6QXUPQ/nbty5wNWtT/EAxbdbnvlzYyNwRbivn+UwWjqf8hOJcV9WzD
RMq35IfA/MaKOnEVuSQEGZeVd9X4jqX+hyDkb4WaohLth2pDEDe9JHmOC1ka
gn2vtI39ysltIfBYoZlXpDaO+h+K/E3CK182kVVDUWd8LEv/DpkVChXJxy0J
0ym/ww7FkMvR/SViMkLxyTji5vdvZLtQlE86tkZtHe3XXEPx8OXbC4OukDmh
mHTnZrZ0KuWHuKFQHujyJXoHOTsUF/ntLnfkJ1L/QzGoqujtjRBySSh2BeTV
OjaSJaEYxfF6Hrya9ou1ofDP4fz6UUOWhiLSO8fnielk6n8ozDyzMjtOk+XC
ENL9sNNgGuWjVMPgIpqzMPUgmRWG9A4N7QtatD9lh0FyxW/exR3MfjUMPkdN
tDzVKH9lF4ZVM2z1N2eQXcNwd/XiGg3FadT/MEzzGvPgcQqZG4ais6w+O/+R
s8NQds39mGEs7Y/zw3Bv0szypC5ySRg+cKo3zw+m/JgkDOKgMNaiT+TaMNyU
Nz+9ykOP+h8GjuvY7tkvyG1hOGk18OvhFUw+LRySY12vNt0gq4Zj3I/miRNG
U36NFQ7d5o6I8NVkdjgSwp0fCzLICMemqhM3jK+S7cIxkOfltbGL7BoOZR57
/WMdygdwwtG00vRNwDomPxCOT+uaqnt45OxwqL8p4TiUkfPD8XDe+5f2r8gl
4WiZUXni3H+Ub5CE4/IM7+kuU8m14Xhp826F6hKyNBzuDwe8zPMjt4UjN+bY
ihtpZLkI5Fh8V3ffQ1aNQIPQPU3/FJkVAc7Red+VrpDZEciL3dVQcIfJd0Tg
aW5A2906sl0Ecm10jW2fkF0j8Nj2tOFbppwTgeUqP/s7MPW5EXgzol9ycCU5
OwKzn7eGfD9Ozo/A1IejLh7YRi6JwImrQsHCCKb/EUjycE7da8/0PwJrvNyU
Iicx/Y9AfVq+2/YO+v7aIrCxp07+6gUmXxqJmcK9N6tjyaqRaGGtmBc0h8yK
xKJdo+7zm5j4R+Kyjg27UczEPxKrdZN5dmwm/pGQf/qQb7uVnifXSAR+1XsQ
foaeP05v/eNHDj+ppueVG4llJzM1p9+g5zs7ElbS6XomZ2k85EfCSHOO6+Ot
NJ5KIhFRp7DkvguNP0kkWjnjDFRG0XitjcSm5vX5YVeZ8R+JoSNG3uyzjuaL
tkhsVhtuWPaS5iO5KCjWfpuTZ0fzl2oUdnSNmXfrFM2XrCg4PvOvft6X5l92
FNza3VP8E5n5PwriqQ9Dbzyj95FdFKreSvjCIfR+dI3CY0eTvfWrmPd/FIzv
/uBzF9L6hBuFw0mO+vWfaL2UHYWOiZP87xxvovVUFCzyPSwf3nouW9+VRKEp
580O76PdtL6MguSh54m8NMpP1UZhUk7P1u3NtL6VRuHQkLTaP/OGydwWBc3P
oW1nNDRklotGy/1HnVNUxsisGg2NeVNnm/Bofc+KRlJ+9eJHqrQ/YEejj2p0
0+r9k2RGNC79bLA7aUD7D7toaFaF6FY9ZPYr0ajSvzIrNFhPZk40IK8bt0hA
+yFuNNqUX3kEPaf9U3Y0cu94WORMo/1XfjRi3e8ZjYmj/VpJNCbMMJ3odpvZ
3/XWr7TvU6lO+8Ha3v588fLPcqf9ozQaA/2VNHWP0f6yLRr6bzSc2luZ/FUM
Ho1Wy5qrR/tZ1RhMudqct9KH9rusGKwdqRdweDftj9kxsL/wOUR4i8lXxcCv
KlrxZBTtt+1iYJelrWyhyOzXY5DV/9Kw4q1kTgzm31h8+PAoJn8Qg5/utZqN
u8nZMYixXtSsweSf8mOQsmbK9X5byCUx8Iw+99GlH5PfiMEko/sWHznk2hh4
qC/N8nzK5DtioMGeWrjDgPItbTF4+XdonuVmJv8Si3eXDr4wfUdWjYW4hhW3
jL2I+h+LkXerTG3CyexY3CyMvq1wmoxYeGg012/8QLaLhUir3spA3Yr6HwuT
I6U2/uZkTiys3L+kNjmTubG9O0zbKVsiyNmxyG44NNwtnZwfizO6Cp9txOSS
WMzvc1fHirEkFrqfhXPXMD9fG4uLOuuj4pjfJ43FJZ6tyzWmvbZYnNbc4m3E
fB65OOxYP5f1bSRZNQ5dIY8n92f6w4rDX0/riVtLmf7HYcYRyfkLYUz/4zD0
gWlo4Qym/3EYrqJ2NLmRyZfF4bOybUBCNpkTh/XSrpW1+kz+LA7hm4c5lT6h
eGXHIVRrbZkbE8/8OBT7XUicwMS7JA5TA1j7jZnnQRIH0RnN0HbmeamNgxd7
HXfbXibfFIfmVc1zQ0eT2+LguKsx+3UOk3+Kh9pPlRrdQWTVeMxsv9l+mkvP
MyseR11PL9v6mp53djyuKEXaZpXTeEA8MtWWPx8kpPFiFw/5rNTKqrU0nlzj
MfT5UYn3OMoHceKR+nN/Y2EzjUduPMqcSkoMjtF4zY7H1sqZ0dUBNJ7z4zFe
17ZATpfyOyXxsLfvI5/1meYDSTw4q7qmjzhO80VtPPwqut/PDaD8jDQeT9oD
tvF1aX5pi8en3e0+lm+Y/EsCzOw9n2oHUP5FNQH9nF7PvdxD+RVWAuYeX6ww
ZBvlU9gJEC5b0qE2m5n/EvCi/wPb/OeUL7FLwD1b3r4sEc2frgnIHjS3e2Em
za+cXgcNih6hQfkObgK6vkZ8fXqB8hnZCWj88nFQcYQa9T8Bmv6xu2dtV6b+
JyBH61WBXHBf6n8CNoxqHrizX6fsfVCbgJb83FitlU8o35DQu38x+nL8CZ0/
tyXg6dB981R//aD9fyKKR+Z3DFGh/bVqIh6Vdtq7vqb9MCsRrcMF0Q0mtN9k
9/58pa+w/yZm/5eI6kuLns7nMu+/RJRm9b17NoL2T66JqN3DW7vbjtn/JOJE
SVSA+SDav3ATcWjsPZu/T+l9m50IfY8Hl8dq0vs4PxFVDk8kEjt6X5ckYk9E
g7Z2NO0XJInYNvzznC3b6P1emwj3vX/6Oxxk3v+JMLhwrb76ELP+T8To1hEh
s3cz589cPGNtEnem03pCkYv3ITeXenvRekOVi2OngorfGdN6RJ2LjK5sxdv9
aL3C4kL9oNr+qOtkHS6MCsLZS2JofcPmYlN8K7dgEq1/DLmIUYkcJL1JBhdS
/YaTGzxovWTNRWlHvFVkF9mOi6r6h5csQesrBy5WuilciE5i1tdcBM8xeyxf
Sfbhoi3nj/3gn2QOF++qLQKqZ9B6LooLtZ6VFivcmfU3t3c8x0mebyXzudAq
cd2TfoVZj3ORVf1xYexnci4XQQcSH70YxqxPuTA46T30njG5iAsPLYNAjjOz
XuXCIWdwR2MiuYILFZetq632MetXLnTD3JvKL5JruBCa9dtpX8+sZ7noKv5P
bcY3cj0XxnuWbvVVpvN9KRfi/zxHaYwjt3Dhtv7omlX65Lbe78do6Vm2Dbmb
i35LfwZc3cDcD0iCyjT1OK1AsmISeKFbL9glkFWTIFnWtzEok6yehJ+NelsF
u8isJIz+/sbleBFZJwl7DN49ayojs5NQlDUpb76EbJiEfZbyVvdukZGEJ4oZ
RVsfka2TIFj1rGj3S7JdEjRG27t/ayI7JCFpV4Puni9k1yS0qfw9UNBB9kmC
lcqjY4N/kzm9n3/MG8E7OTqvjUrChMIyqU5/MjcJGxesr3yjTOYnoUk/78jQ
weTsJERrfMy/OoScm4Qv4vm634aT85Owdclmz0Pq5KIkVE3/8+PVKHJJEg6F
vpq5X4tckYTDD4IVWkeTJUmwVlioeWMMuSYJPW6rq3THkmuTcD6vQ2MC4/ok
TK20aytkfl7a+/35XG25yPy+liQEz7wT4sa019b7eUfUPcxlPk93EkYty5rs
ynxeuWS0O+gHVTD9UUzG4pUuGfuZ/qomgy88YKPJfB/qyViW3ek2UYXMSsaS
MVWJlcz3qZOMvrPv4UMfMjsZMY3lZgd6mPgnIyg2aNDHLib+ydgisF4oaWPi
n4wfW95GaH9k4p+Mau0nFiMamfgnw3voNOvtDUz8k3HjbJ7+/jom/slQ6ZNX
ZXSbiX8yJlvOu+B8lRyVjK9bGj4PPkfmJqNVuAdLT5L5ybjJv3JixCFydjLu
yN+fH7CTnJuM8v45WsuyyPnJcNuuGnwxhVyUDMs6VVF5JLmkt38XpbfN/ckV
ydg7t/TYameyJBkOs7vO/bQj1yRjzMnte6YvINcmI01j8PCvc8j1yRj+IbrL
YhIz/nv78zZ4xqSRzPhP7n1ff7q+W4EZ/8nIndzx8PAPmj+6ez1kQ4ZlM7P/
T8EHB3vjGGa/rpgC38jmeYuqmHxACoyss/87dpqsnoL+3HTW0f1MfiAFFzSn
TbXMIuuk4F77mrr4OCZfkAKxcP/r1b5kwxSUOe/Vvr+ayR+kYLZATfDJgmyd
AuvvWv2KdZl8Qgo2t3ntHq5BdkjBdfN53pP7MfmFFMxdWsh710rzs0/v583d
orv8GZNvSUFlv0fbfK8x838K2t4u7KdfzMz/Kajxfnjn7A5m/k/Bc2uxdWsi
M/+nwHBi5bNXPsz8nwKbDe0fhPZMfiYFsZ8UP3QYkYtSsOD1qiVjxzP5mhRM
eVuQOUCZXJGCrz4bp1a20/tJkgJB2+EDRs/INSmYeMUjKkFCrk1B1J5EvexC
cn0K1lzttgpm8g/SFKhlaFhph5NbUiDUKjh+bD25LQUXFyv9UJpP7k7BSVbB
fgsd5v5YKi4a/p6wehBZMRWWbNW3mS1MPiwVr8qUvswqI6un4tJWruHeRDIr
FZ567emPbMg6qeg6Gp3xfDiZnYqmg0e/lEmZ938qfN56mvkcY97/qbg567bc
z3CydSqupM4u8AfZLhWlgcap15XJDqlw0X7SrPCY1heuqRC1xMsZ7yP7pGJO
j/MHZ18yJxWd//YdjplNjkrF9Wul2pv/0HqFm4pFTmUGh5n8Cz8V++Madl7a
zORjUjH/TsfX5+vJual4MO/L5T6TmPxkKqrk/cLnttH6qCgVJTMCvaLPk0tS
sTxo4K3aVHJF7893TrtktpwsSUX4OFuLag1yTSoKC9xM/N7R+qs2FfOkVVG6
J8n1qVCZOPzQkBiyNBWsdONVWpbkllRUNwX/WaJKbkuF3Pv1PYcbaH3XnQot
J83N0wvJcmnQbY+Tvg5h1n9peJCg03HVjKyahgRpw/mnymT1NBw5f0KR9ZTJ
D6fBqck5Zw+TL9ZJw1uVQ/1XcMjsNPxT3/zCzJRsmIamYa1pnspkpGHNr+Nr
bjyl9al1b/t6a4SezHrVLg2TJicttAglO6Th7wv7zestyK5puLL3t+eZwWSf
NIz+ZL1/+Sta/3J6/WrygGnF5Kg0PKkzdrSOY+5XpWHkm4CpRbZkfhpYFwUK
tprk7DQoldX7zPxE6+vcNJR6nC9df4HJz6fhzllrg1siclEaPrzp1o/fwOTr
01A51PxNmC65Ig35HrNXn/rLrN/T0HXF4MCsWnJNGi4J99Z07yfXpuFWpP15
+TByfRp09katX7mILE2D/JRxKc3q5JY05GU1/q78RPuFtt72FAWpLy6Tu9Ng
33Sy1mQLk/9Lx6ZDgQKpJ1kxHfIpnUtvGJFV02E8V6+sbSBZPR2synWLN7yl
/QkrHcv7H9+iVE7WScevQU0Du0XMeUk6Vhc0z5y8kWyYDt+FS4N26DPnJ+mY
NukH23IA2TodD2bufjHrLZ2/2KVjcs3KOucKskM6SoxHh9SIya7p6HfLfUiQ
J9knHX7jE5VXmJA56fg3iX2CM5QclQ5FhVHLb32k/RY3HY9jDUydr5L56fCc
sOTGtJ3Mfiwdms3282aFkHPTwXN7+55jQ85PxziD3SObx5OL0iE9pGig84P2
dyXpmDe+Orm1iFyRDsdE49Kx65nzq3QM/Kvmc34guSYdT77E2VySUL61Nh3l
jTXyk8PI9elwyWmf3zWZLE3Hxq1TLk55QednLb3f5xnHKZJscls6ykR7bSos
yd3p+HLixHvV37QfleNBPGrp7ZoSsiIPhacK7r7yIqvy8OrP/lv2o8nqvN4d
/8JC1iM632Px8Fep2c5GRNbhYZtz6qW788lsHsqOfP105Bfliw15+M5Tevey
lMkf87D90OezPv5kax64tUMTF2uT7XiwD4h2TXxJ+2kHHlb4lfCVcpj9NQ9S
tR96zXZkHx6MMxdsG6lC5vDwrsxGfmcVnXdG8WD+X1LtJi6Zy0Mwa4Tjlnlk
fu/n6/qooPCDzk+zeXh5I9n2dik5lwd3s6/7XgWS83lYfbdcgGnkIh7ski/u
aGtmzmt72xcNc24tIFf0tpfTkmjkxpzf8qBov/jQg7HkGh7qR/flnn1J58G1
PMxY73OreRe5nocI+8lWno5kKQ/qPYpX9DTILTwE/L6gvLCezpvbeBhfueNv
QQ65m4cB+g4J9muZ++98BEx8H7J4JFmRj5/rlO5kPKX8hiof979O5mrmktX5
uFP7R9TpwJyP89GzY+W3UaPIOnxsUi+7IGqg83Q2H5WFrC6rPWRDPsqWXC9b
7kIGH1+0Dg8+OI5szUfBQ8cJ89/Reb0dH1rPz6jqFpId+Oj/JbrH3Y/syse2
cKXBzbpkHz7qakaEnW2nfA2Hj36RqxwfniFH9ZaXT/xuHEPm8lGttzykzYzM
5+OFVtHA7/LkbD4OTs79mbaF7ifk8lH/dGe7ZDQ5nw+zxtrInCN0vlHEh2JX
YF9lfXIJHzPUaxU1rtF9iAo+Dg1427fKjizhY8m0bT6DXtP9iRo+flRZn+rc
RK7lQ7J28crYP3Tfop6P1Tmm1/ZlkqV8TMg/FOo+htzCx6INax9Vn6T7G218
tM/+Z3/Lgtzd+/0uLVgd+Ij5ewkBuhzZC097kxUFMNP8HZ/3m+6HqAqw5dg6
53HZZHUB+lfOnGc7kcwS4PzdbI+RF+h+iY4Ab22ttNPtyWwBmv7jX8ppofMe
QwGqD4gClnDJEGCBo6FXgTrZWgD1rrtP9zH3WewEuDRsx3szW7KDAHmXc08m
NdH9F1cBHNautvLhkn0E6HiReO6bJpkjQGj6VcVxFZTfixJg9vkUve+ryFwB
jBxKRvl+o/s2fAEUVgpPJ2eTswUQ5cc+Np9BzhXgnMuXFfn36L5OvgDWiyZ0
HAwkFwmw00wz0mYwuUSApTrBWVtL6L5PhQBXyxe9T1hBlgjgc855jvrHf7J8
ZI0A7HVICGeTawWYE3Tj4rAouj9UL0Cu94QvHZI/dJ9IgKBPw34MUyG3CFC4
5PPx0DU9lO8UIHtI1u3BB+l8rbv3+72U+qu57RflP4Xo469855c5WVEIUxPd
S4uy6e9vVIWosfs099Ybut+kLsRh1fWClDlklhD7r9d3cviUT9URYvUA40PZ
L+l+FFuIahOFYulssqEQFibnB7mIOul+lRCVt/pWKL3rkNlaiJ6OwSmvTMl2
QvSPe6XfkEv3rxyE0Por4v3p+Eb3sYR4c+DEiAUryD5C3B97KvRISbvMHCGy
78/S0lMlRwlhXuQfd49D97u4Qny/N/n14ENfZeYLwZ63l3vSr5XOI4WwZM1d
ETHri8y5vT/fJ/6Icw/9/VK+EOtKUy+51dD9sSIh9pRWF8bt+CBziRCxEZqe
h71aZK4Q4svTk0+eGTbT/TAhxm3+d1V14HuKvxCvZ9U9Wdj4juIvhC3L4nDQ
BbqvVi9Es8OpYuF2ymdLhVghalyRFfyG4i/ET8UfTRHLpRR/ITL2tiwMd35F
8Reic8tJ18JxLyj+IkTvN7aJaHlG8Rehc3mu0qPSpxR/EWq0+6eXch9T/EVI
26bIl19RR/EXYUJS0oWKSQ8o/iJMTxC68/7cpfiLEBnkeGNa2U2Kvwgz7yzz
tgiuoviL8MY57fXROVco/iL093u+bHvPOYq/CDbLd0/rv/sUxV+EbO+hW5+J
D1D8RdhzVm1T8YMgir8IRgOOrFn+e7cs/88RYVTQiP/evzkhc5QIg2tjzQbk
ltP9QRG2yx2vXF9WKTNfhO9r2xsHNV6TOVsEF/7BZTfe35A5VwT2gUMW4U23
6b6hCL9NXz7Tf31f5iIRRM9/DR/+ke4nlojwa3R6vv7bOpkrRGgNKFcaXP+Y
zq9FuFhcbll8+6nMNSLIG0w0Y116RucZIjzlba6NON4gc70IIzcq3a3Me0nn
GyK0HCjsUEp7LXOLCI5rNHpmltN9yTYRbi50m9d69I3M3SIEDDX/K9nzlu5f
ZkDlzAHuqaxGmRUz8Ejrxvdq7juZVTPwYl1OvGJwk8zqGQhijzWMd31P9zUz
UGQqN3P68maZdTJwNuezj5Yp3d9kZ+DNn0l1q6Z+kNkwA11RiqtfjPhI9zsz
sMVLVHWu7yeZrTNw42fD5+9fyHYZWKLcmrK5/rPMDhmYPFN9Tt7VL3QfNAPN
WmU71I63yuyTAaux1+f02f6V4p+BK2+WLSg3o/ulURmoPXXn58lSMjcDPxwb
WzZNaqf49/6+oXWzOvLI2RnoifneZjmQ/h4mNwOFbdtme3HJ+RnwNHrXx+E7
uSgDp5bXrhvj9Z3in4HOjd9mXKwnV2TA/21k0Bxbuv8qyYDCoUG/BMx92JoM
aH56WFg5gznPysBmT3Or+v3k+t6f/zdmz5OhXRT/DLyO53pcSiO3ZCC96tiy
rB/ktgzIPVCXX+77g+KfgQdzfcb+e06Wy8QFbSeDA0voPoViJjY01z8yvkxW
zUTj8aeRt2fQ/V31TIw4GrhjzX4yKxM3Im7vfjXkF8U/E2t5c754ppLZmUi6
ryxt7SQbZkJj5Z1rsd6/Kf6ZsL028uWgZ2TrTJxqKvE6atND8c/Ejjdpm+0u
kh0y8dDgTKq8Ht0vds3ELO42p6p9ZJ9MqJSUz8hV+0vxz4TWz+5+CSnkqEyU
Tkp6GdVJ5maC41Z7Uuj9j+Lf+3nW3/A584ycnQkv5/rwPxPlzGXxz4RO4ESB
ngs5PxPsJz5PAnPJRZmY6tTPovIBuSQTNwsPFLJU6H50RW/5CpN3WxeSJZlY
8VPrjkYCuSYT95e0zDhdTq7NxAz5fQ2u7eT6TBy9cnDHhGl0/inNxPpPlRN6
PMgtmYhYrmPxaS+5LRNOJ5OK2uvJ3ZkYN6FpkOpQur8tJ8YA63faVkvJimKk
L87ckcMjq4rhWRCo0vcqWV0MjUs7J/F6yCwxjA2OpU826CezjhiL5K9XNQaT
2WKYz9kRffE42VAMw1S32aXNZIgRtet3YtV4ur9jLUZV35rmLieynRjyt661
LsojO4gx8n3SsLOPyK5i7J+t+2ihKt1P9xHjNFtQ8N2WzBFD7PTtx1UeOUqM
XfbOJqevkbli/PFd33D9H5kvxtZ5qsbd8xRkzhZj/C7jc0ujyLli7Fund6aq
jJwvRs3xujTXdnKRGP/MDyWM0VOk+Ivh3lbc+s+PXCFGiWE6678iskQM9aX2
jnpN5BoxFBvPvYwdT/fva8VYWtza/MWFXC+GQfLeU6l7yFIxHJZ0BKKB3CLG
kqwty8dp0Hl5mxixd8UJk9eSu8Ww5waMX8mcp8tl4VjHSKeCOrJiFtZcl9pq
DqG/B1DNgolemEKFHVk9C5mTnx6MyWL+XiALdTNd2e73yDpZCFA4VR48cADF
PwuTh5SYH15CNsxCYWnSTbkMMrJwyTnJPun2APP/A0AQiaE=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k0lG/YB/ApijZLKFKaitKuZKmob0UkaooiUWOXJWMf+4zBzDCGVlpp
pU3a5Nc67SqVdqUypUW70qKN13vmet5z3v75nc953M/9XPd+3fyG+EctDOrK
YrGa1Vis//2v6l/LdNb//4f/T00cdC7ZZ5b09IzKOhjBGdOwU9RK1kdZsb6H
9hfWWZUN8cvVwcJKTZM8ELGPCte13O1DZoM7U6C35YAOeSg4hWbtokeMTZFW
WDMr11iLPBxrh+34++RfN7I5kv0a3ZY9/kL1j8KQ9V1W9D/ydZrKY8C1P35r
M1+H4hqHqZ4n8/a+MSFbQGk9K/LFlxHkCRj8xE7UftuCPBF+59a/r7a1Jlti
X0zytVkmduRJ2FM3dNkH2xlkK2yeyvE9UOhAtoaoJDH6c29nsg2EB8Z809s5
l2wLjkJsKnWdT56Mv/xSg9T0BeQp2Be5JNVqsTt5Kj6L3dlWIxeR7dB1jkmv
3NbFZHuMrZG/W3fIizwNieV87b5cb/J0FO/d06j7dykZuHd9tqmayFdlAbAy
3GfD/q/L6PkMGCzRk68z5dLzGXDOsHydcJ7Mmok5/xKOeS30o+czkbEhZ+Pp
u2TWLNzIsv5vzmx/ej4LXUeuazm7h8xywO97Fbod/5jnDjAffsS0Y2YAPXdE
zMIrl2/yyQJHVOV8LissYZ7PRuSmvuOSjjPPZ0OLY4paBfPcCWL25ykNJ5nn
TjimcVJbbQ/z3Bl9Ng+S7ZUwz51xrYf8KpYyz+fAfMuj81OHMM/nYKnRzD79
G5jvd4FLzNPDC6XM97tA1+v46JgxzPO5ODp8Yuyfi0z7zEVQvwk2Ce5M+7ii
7Ox+k/B6pn1dUXkh2izAg2lfN3h9emRws2A5PXfDMp9BO/8FM/0zDzr4UOo/
num/eThqmLxe4x3Tv/NR9ePC9NYi6n/BfCS1v/k8YsoSes6BVnVu7x23PVUG
ByU+Bht8ltN4EnCQ8fxu3eyXHiorOJg+wuKmmx8zHhegiyTJ3vMhjVcswK9x
941mOnGo/AJwHti+rg1wo/ILcKfSLHGUhQuVXwiFRbutxffZVH4h1MM3b/M/
OovKL4SHhmZPmyhQ+YXwbHT+PHzeFCrvjvmmeg2bT1hSeXdcFA/XP+k6isq7
Y+tmu0Cf+QOovDuGX4piLV++jtYHDzj2a111pdcA1XoCD3iGLbn2udsolQUe
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
+kamJHNTkDH6pzg6RENlXgo8bocaFD8jC1LAnlPfe7kj/X6sMAXrhtr5D9tE
Lk2B01Hvw2gkV6ZgnOOMZF3dHiorUqAxS93j83hyXQoGHv1iazmVrEzBpYQl
V60mkltScP1Lz43z9cmsVCx6tl38SEnv10lFpcVp7bFFZHYqJIONKndaky06
n++tmrv5DH0/UrHs3od10ePInFQMq+WJsrKZ+FPhdtXunM0Fai9eKi6/tZvw
5TW1pyAVofKtEQNaqP0LU1H+Ze3cIc+of0pTcXzY0hh+JfVfZSpulFs0FQVT
/ypSUXS/26g/HTQe6lJhV3t3oE/bb5WVqVijNrxH2LGfKrekYs6kBX/mWtP4
Y6XBokvMh8nJLTT+03Bb3c30L+stjf80dLPQCfxQyIz/NNiP1T1dJrtJ4z8N
HFaJfP2a/TT/0xB6aI7nrxUPaf6nIcxEonWA/Zrmf1rnWXH+ngU5LTT/0/Dy
7r11ArsfNP/TMPBUnvfDiX9p/qdBajOofd0kWn8q0yD4Ybt9YxStV4o0DIpS
3nC4RutbXRpGXBv2a54DrY/KNAR6cHz8n9J62pKG8oqLU/JcaD1mpcOdN92V
b0Xru0461E02X5wwnvYHdjq0J8WsCrGh/cYiHQZXb3RTuNF+hXT0Vvw68TCa
2f/S8XN4KX/GDtpfuek4tXuXac5z2s956fApKfTt2485/6TDroU7Ys4M5vyb
Do+W35qDYuh8XZqO/Mjco9PKmfN/OmKqXnT1bqL8QJGOcTFvuvUbRvlIXef3
m54abBBC+YsyHYd+XzL5XsHkP+lYcypr2fzflB+xMlA5ccbHamfKr3QycLqn
tOr8BsrH2BlwWbPi8K8PlK9ZZKCCtVfWymbyvwzMu+g0T7OWyf8yEFeStyA1
kfJFbgZWKXwdtYdRvsnLgK3n/oSMm2RBBhKO/PwmTaJ8tTADM2WHq98No/y2
NAPnuZ7XfW6QKzPwJUc3emM85cOKDAxKeuDuO5Dy57oMpHVcPbjsHFmZgT7j
Lgs8Ayn/bslAteJZJasb5ecsARKMq5z0dpA1BXCcmrTReRrl9zoCTOjtmer9
gGwowAJNpyi1cOZ+QICvsq/32v+QzQVwG752cA8p3SdYCHD4fUlXpS7dN9gK
UD9ac8fM9WQIcPful8tfDOh+wlmAsMX71SsLyRwBzjufa5nRne43vAQwTWxx
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
o7P/A6ye6Eo=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.006944444444444445], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxFm3dYU1m0xWPHhtgbKooFO4oK9sUoih0LCiICgnQk9A6BBAiBRBBHUEaJ
HQuKvWsUC0qZKKDYUSyIBRQLOpbH+15W3vwz38/Dyb777nvPXnufc/uv8V2y
tqlAIKhuJhD87///77+66UvSRrz50V4AzT+g5Mz6BXfbkHWQlFBrq2pF1sOg
G+WGZ5qTu2B45vuTqibkHnBXjB5x6Nef6f/H+oiM7BzW8I1sAC+751MdP5EH
YPKaEbYv35EHIqvdW2Xia/JgBM7b/GLWc7IRmo4YWDvgMXkYbK33S3tXkEdA
WdY01LiUPArx7VtKnErIxhjSc1PgoZvkMegG187dr5HH4ryneESWimyC1ubb
FZPOk8chYMyYtl9OkcfDP3dO8K1j5Ako2eyy5+xhsimumP8MuHaAbIahvXTP
1OwlT8SvlTKrYbvIkzDi58muEiV5Mvo1S6n69g95CopsdTfGbyZPhWtO7p8R
m8jTUPQ25+f7DeTp8LkZubpgPRlw+Gr/5VyKhkXAbK/L8oIkjptj5Mb62vcJ
HDdH4rhLT4dLOP4XLBYP1I+L5fhfqOjbz6EumuMz4Hsg2j44kuMzcPzGreud
wzk+EzoSM4uCEI7PhGPYwaj0II5bwO/nzQ5BARy3QNZc3U3efhyfBbcTX3eH
+XJ8FhYXG6uzfDg+G3dlpco7XhyfDWmIMruPJ8ctsfjxPKtId45b4rxO4dgP
rhyfg6dH9+b7r+X4HHzPWxHZ2oXjc7GgY2bpkTUcnwuTe7emejlxfB6E6ctH
jnfk+DyEG7Tq3MGB4/ORUb5udYM9x+djp2J2dN0qji9Al093Kr/acXwBktwn
fm5DFizEdovXg0es5PhC6B54/drWluOLEHJ2yt50G44vQpfj4+5WrOC4FT7v
P/faiAwrZIv2WYmX8++t8KuqrfS1tYZVVpjfw7uVNVmwGPcW680rXMb5i3Ep
2uzOHLJoMeasXN5PvZTzF6PLEZy2JwuW4FW+0+BPSzh/CRwvVn5NIYuW4MGU
62dHklVLUFPVu1XZYs5fioCOrYJiyFiKmuNPto8mi5bittOU0S+sOH8p2h3X
yf+HLFiGSQPErWzJWIbo1RYHepBFy+Dr8ZfTw0WcvwzZ0ZcrlWSBNWa1sH7p
ToY1Mo8UjzIhi6yR0XJY7J+FnG8NmUfcrmKyYDkW//jospWM5TBdG7lhHVm0
HJNe1AnMtfOXI2HPrcQu2vkrUF+u2/TNAs5fgQx/o4UXyaIV8Jx6ZcFGsmoF
jtdse+lJFtggvdz3l7l2vg3u++yP6amdb4PkzatsP87nfBsIZwjCb5IFtri/
aGHpdjJssXxMR9twssgWZ5d/EyzVzrfF/INrrwzXzl+Je55zNzXXzl+JFr51
wY/ncf5KjLEudThJVq1Et4zABevJAjv0fTNmqjsZdlD16DPSXDvfDjqHynv3
0s63w/ZNLjr1czl/FRIG9PpUSMYq3MpeV7GLLFqFNq9eno0iq1bhxpCvmcu1
8+3h4fLJb7R2vj0sHzXM1NHOt0fg+5d6z+Zwvj02XZ9XdoYsWI2pzr7yDWSs
hum8eZO8yKLVmJ+eWTFDO381/HY8Wauvne+Ai5A9/WzJ+Q6QB7WbUUwWOcD+
VBPFbrLKAVernS5GkQWO+Jh65o412cARAw563xqp/T1H7FjabE8LsqMjlCtF
bo9n8/cdkVh4udMJstIRhV9rclPIKkdcDbtn7kKudITTvE0PJpMFTugb9Dax
M9nACa/33LV/O4v2nVBvpR+UT3Z0gu7qkrdZZJETenW+/TKQrHRClsBGvpCs
ckKx8/LOQ8mVTo3P++PDzcmCNSi4unbHMwvaX4PSpl/HqMhYg5cHRuUqyY5r
kPV7iKeYLFqD34sHXXcnK9dgwNLugxaTVWvQts3buinkyjVY8nBX5giywBlS
leV6A619Zyw3SZ/bU2vfGef3Ss27a+0742phVU0vrX1nrHnrfW6g1r4zfuyY
NXC81r4zshZMTZuvte+M+eOHuHlp7btgv7Nz0w1a+y549lt84v/9d4HaZ3TB
N619F0wbbB5sqr3/LthpYlwbo73/LrjpetH6tvb+u2D2x9pLw7Xxd8FDI0vT
9dr4r0W6xOLMf9r4r8Wlc13M/LTP31pMcPLLqtU+f2sxdN2+y8Ha92Mt+tSc
FrXk+6Zci8fDA/Zu076va/Hly+Hf0/j+V64FygLmvtauH67wiWk3L4Prj4Er
2ib0vrhQux66ovSHzKE911tHV1Qv9qi5o12fXbHw6f6e2Vzvla64Jlbn+Gnz
jSssfgUsm8t8VOmKfS3OPTBiPhO44eaHo/+1Yz40cMPB/E1hX8lww7phTXu+
ZD51dMOLZZ23VzD/itzQel70QzXztdINHa6kbyxmPle54fn6qVklzP+Vbpi0
7ZOqVKsP3FGit+v+I+oHA3eE99197g31Bdxx5L1i+g/qEUd3vErv3/gO0r47
bEcYbhlEPaN0x807U0eAekflDp9hj+/aUw9VuqPPj7aR0dRLAg+Mn7fkz3Zn
2vfAZceNFgXUV/DA84JP4z5Sfzl64MrpA8f13WjfA/+V/zo4l/pN6QFHSbtW
ER6074Gsa9cO5lLvVXpAkXdT+px6UOCJTNHShJ7UiwaeGGo6MG3JOtr3xK8b
6/6WU186NnL+tZhbQtr3xO2gNlNb+9O+J/yc7M/OoV5VeaJ3d72XyYG07wnf
OZn7/9XqWy/kdpM0dKH+NfBCVqDvebtQ2vfC70M/qnaG0b4Xur+5vOo99bPI
C8c2WHcxo75WesHoikmDOIr2vdB07ZUvaurxSi9UTJz7o6+I9r0xJOHTJx/q
dwNvPIy4UHQhjva9UfNXfKAu9b6jN1Zmfb/rEE/73lC231Z5hPWB0huZ2wqi
mktp3xvdfiu3rGA9UemNbYMNDA/IaN8Hl9bqNfuTTPs+6Hit/eClctr3wdnC
hJC9Ctr3wcW0C8//Y/0i8kF0n5tLrNJo3wc+LTKO7mK9o/KB26L37xrSad8H
HxK9383/m/bXYW/bDVlK1ksG63An6uyL+gzaX4f7rgOPzmJ95bgOv758ep+5
hfbX4ecz47iaLNpfh+EupTaTt9L+OoyZe8EueRvtr4Os15XAB9m07wsPy31y
o+2074vlAWNSg3bQvi+uH+7senkn7fvCsbzl97a7ad8XruorY6330L4vRPXN
fv3DelLliz2zFeZVObTvi933jGuG7Kd9ITK+FFR6sh7VE+J2iEWHgwd5PULc
fbvP4W2uho2F+OdCx/NGrGchhM/iY7oueRq2EsKyQ5X51iO8XiFGr+6GsqMa
FgoRonhVr3Oc1y/EtyOdLSef0HCqECZOiUO8TtIfIfZ7r4jKZH2dJ8TOsIJx
+afpnxDnk6wmvj2jYbUQD703B+udo79CvNQXV4xlvV4nxIBmg+ctuUD//bB7
cPnZdRfpvx8+zzDoIr1E//0gLS6fsY31v7Efepc3Nz1ymf77ofbx7weqK/Tf
DzcybPsU59N/P/wlrntbfpX+++Fn9KtxD9lfEPkhdNreV4+u038/+Oyvrn1w
g/77wXz4wenlBfTfD9sfT79WyH6Fyg/FR6YLL96i/37QD95knFtI//1wrSj6
a0YR/fdDUXvJ0ehi+u+PYV3F1tp+iJ4/Wv3er57+L/33h11hVNdeavrvj5Df
6q51ZPhDT78k//Jt+u8PH4P6juvv0H9/dK7qVL+C/RehPwo9rVfql9F/f5iP
NZv8iJzqj26rFUkZ5fTfH0UvRBMX3qX/jdezTzFdcI/++2OnNCU1l6z2x6mV
u/svZ/+nsvHvq22rv5Pr/DGvXPQg8z79D0AT0awPYx/Q/wCY3hvRq4BsEADr
wW2tbR7S/wCsrWi/qYqMAPQ3OVnm8Yj+B6C89QOdt2THALT32DnMjf0pYQBW
Tk4d+4QsCsDb1349rZ7Q/wA0fetdcZ6sDECsR4P7wKf0PwCDLj2+mkBWBSBT
x+xVFVkdAKd9ATcmV9L/ANiVLHBWkOsar+d96fGHZEEg/kx3PmX4jP4Hopt5
jqsr2SAQ//TfdnEn2TgQ5VCce0hGIPpu77BSl/04q0CYr2qZMZnsGIjCbjt9
ncnCQNgHrHkWTxYFIiC+Xc0OcmogNs48nniWrAzE9j8nTxeR8wLxUH0u4j5Z
FQiPTsf+rSSrA/GhtPzYc3JlIPQW7x7ylFwXCAOPmmF3tf3DIPzufuLCDbJe
EMbW2VUeIxsEQbkpIn0L2TgIfaZ/vRdBRhAeDas/tELrfxBuD3nSc5TW/yCs
6OjW6w/vlzAIo5fEHr1FFgVhspvzi1RyaiM7JxxdTFYGNeaD3f3ak/OC8K/z
hVH5jJ8qCIMGtasKIKuDYLJYD/208Q/C+8PSOdf4fNQ1/t65gGauZEEwLg3o
4N+ErBcMi/n3Nmfw+TMIxo+yhBgjsnEwYnW7GR3n84tgzAo/mzmJbBWMZPNX
d89pn/9gvN03u9qULAyGbkLBnUN8f0TB2LJd/o8BOTUYYqOv8+R8/5TByNHJ
ev2Z72teMIoWLAxeQVYFY2BIrz/H+X6rgzHqunlSe+37H4yVCVP1nbg+1AXD
csGFS4e5nghCYGKyJ+I71xu9EExr1slmGtkgBDHOC+2juT4ZhyD+88P0M1zP
EAKRu0/zOq53ViE4mfbqVH/t+heCfe52pxZyfRSG4HbrDu1CuH6KQrDxgP+l
LVxvU0NgmzLw4Rmux8oQHLr/wb2M63VeCJ6kXvev4XquCsEW21tNf3K9V4fg
qp25YWvt+h8Cw45bnnRkfqgLwdAuHtO7afvdoXjwzs2qG/OLXihcHwfod2L+
MQhFyOGUQ62Zn4xDoS8p7fiL+QyhEO9NWvyO+c4qFKc8O4TdYz50DIVt86r0
i8yXwlDUh2fnbmc+FYViwpb/bouYb1ND0f5LQbtVzMfKxuv5+snDhPk6L7Sx
Po/+0pL5XBUKo4MJ5+6epf+hCPuOgh3UA5Wh2HH12xAv6oW6UHQZ3e71aG2/
Pgzuo790/Ej9oReGvWbTTxyiPjEIw8GfyY/d2c83DoPh3A0Z/ahnEIbxrfrW
3dHqnzB8s9T7HEd95BiGp4kOeaMP0f/G+R+7j71PfSUKw8kyu4QY6q/UMHwf
5XJ2APWZMgzrFsQ+vEL9lhcGgbz3NwetvgtDf+PjvX5QD6ob/Zn3amka9w8q
w3DxmlveIOrHujBEe7aZdop6UxCOj60vtJnF/QW9cNTuThl4h3rVIBwf9uze
bEc9axyOjt2sQ59T7yIcPyta/+tKPWwVjmc11gerM+l/ONLX1/Z1p54WNv5e
xNHxL6m/ReHYW6v847CR/ofD6vyL5Arqd2U4ho1Xv1lIfZ8XjqxmT43yqf9V
4ejx6KTNeNYH6nA4djBK2s39jMpwfK4feasz64u6cIwcWDtcpN3fiMAQ+YWL
NYn0PwJN5nVLX8p6xiACexdtP3OW9Y9xBO6pjWcYiOl/BEIiVJCwfrKKgINH
YP6rGPofgUMVGY9ms/4SRmDLjqyte7X7IY3z/br0aBlB/yNgeuK0vTPrPWUE
DixfLbrE+jAvAv8NbUjrFUz/I1DbP31XIOtLdQS+z1x6q5j1aGUEnrkKuw7m
fkldBP7eNzYzivWsIBKmBR9cylj/6kVCatxUMcyb/kdi84eSQSLWz8aReOF7
alo5621EIntAr7dDWY9bRaLTt/lTo7X1eiTqCzJn32F9L4xE2clx+oO1+yWR
8FlnXhzGfkFqJCYFXvUuZn9BGYlcn53t+nN/JC8SKYHZFwPZn1BFIj/camMB
+xnqSCiuGWTra/sdkbiVYFknZH+kLhITsm5mXmM/RRCFugCvfb3Yb9GLgmzM
qbFC9msMojD9a/3M6+zvGEfheaBhnb62Xx+FFZd/zwhk/8gqCt9c6xcVsf/k
GIVHBQaGg9ivEkZh4L/WRdHa/mkUFr7QXXmf/bXUKNjPDHwwbib9j4J1to1d
2l/0v5H1zGo+gP5H4aO76cYF0+l/FIbeNnTNnUr/o5B41t9bdwr9j4J40F/H
hJPofzQuT7CdVWZG/6OxutfQMRNN6X801GNKorPH0/9oCGQdJ7UaR/+jsfRv
Tx/hWPofDbfBTQwfGtP/aCzbe9hl9mj6H40hSS2mnBhJ/6Ph83rO0YEj6H80
FthFq/8eRv+jIfnulK0zlP5HY2pI4JCoIfQ/GkXC78L6QfQ/Gjol/4m9BtL/
aAzFYveXA+h/NJLLtg5y6k//YyDLXJH/pB/9j8HEubcsV/el/zEI69T7wlN9
+h+DkJnzhzj3pv8xGNPPXFHdk/7H4Jn8coNvD/ofgw9VUT7fu9H/GIjSOtVL
utL/GLQqaZvaqQv9j8G98W/m7uhE/2Nw2ab/sHEd6X8MKiYMGlfQgf7HIH2f
s+9qXfofgxan5j//2o7+x8CueFl6Wlv6H4PUF9+ko9rQfxHqJedvFutoWEeE
8LwJq3xb8X6IkJLbZnbnlhruIULJkdrUM815f0RY63UUa5pp2EgEczdT+/ZN
eb9EuLA06v1ZgYbNREjrk93g+ee35v6JIH5VHt/nt4YtRThTFv7PnZ8athLB
/ozOTNl/GrYRoYmij2TmDw07irDhRoRLk+8adhchILrte9U3DQtF2Or5cJD4
q4ZDRYg91r+75RcNi0RomT7lZofPGpaK0K7w6MwHnzScKkLEe5MNez9qOFOE
NcGZZ0PqNKwUocfpZ9fn1mo4R4QtmyeqDD5oOE8E3SGfDn9/p+HTIqg/S7LL
32pYJcIO6w2Zx2s0XCCCg0vlrk1vNKwWoeaZbUlEtYYrREitbtfP5bWGKxvv
T9DQ7YteabhahF43/6ye9lLDdSL83v57jfELDTeIkLnoyKlBVRoWxOL4jgtu
fZ9rWCcW9WefRfV6pmG9WDw/9rF5r0oN94hFnUl5qz5PNWwQi6ZPJWmGTzRs
FIs1h1vljnysYeNYdDMVrp38SMNmsTAtun9t/kPGPxb6O9fed3rA+MdiXYXp
gfD7jH8stq4LnJVRwfjHIg1TTp66x/jHAu/3tXh0l/GPxfCLJdObk4WN9lMO
+xqXM/6xiNtlrnQsY/xjITvq9mhjKeMfC6NDH0YV32H8Y/GuVLajNTkzFu45
ZeZzbzP+sdBpPav7ejXj3+jfAtORFf8y/rE4E/ZIPoh8OhYu0r9mhJQw/rGY
dH3+iuJixj8WqXOOlg4hq2PRK+6/ywlFjH8s/quKGV5TyPjH4vRh555LyNWN
9+fe3xsv3mL8Y5HbrGT3aHJDLEpOyKx332T849BB3uFgP7JOHAz2Ox/ZVsD4
x+HvcVY+A8g9Gv++icPr/TcY/zhY29wfbEY2isPSp9fH3rrO+MchLPtdRyey
WRxmji669fMa4x+Hj993OG8lW8bBZI/H87/IVo32t5TOf3+V8Y9Dt+yFOf+Q
HeOQtaXpDyuyexzsvW7PakMWxmHU/eXpBfmMfxxWKaurksmiOJxN3zRlGVka
h/blw7b3J6c2Xl//YV0/X2H84zB3XFlWIVkZh6pxA81yyDlxUE67/S6JnBeH
qR8XnheST8ehS6eSnFVkVRzKJk49voBc0Hi/5HMqZ5DVcXgb6zBqOrkiDrY5
B7K1XBmH8rje4y3I1Y3jDqtrF5Hr4tBg9qrEgdwQh7Vbq0sDyQIxnDc5/FaQ
dcRos6nNwkNkPTFuuvheuUPuIUal3sOVP8kGYnx9vKbbcN4vIzGCxr2sX002
FuPN+jafMshmYjz1mtXhLhli/D2qYk5PxstSDN2ORdlOZCsxZjT/qXtYG38x
cjbo/d2Ez4ejGAMvxo62JbuLceZ+xsMTZKEY7R28N3Xn8xcqxrBLNauiySIx
skbdHl5Dljay95E/K/k8p4rROf5jmZqcKcYVedHeeXwflGI02C8NLCTniDHA
3GeCFd+nPDEm7qp4c598uvF+XBguc+f7qBIjbkx5p5/kAjFKDurHbOT7rBaj
SmR4a4z2/Rfjx/iXH0rJlWJ49DKrDud6US3G4aLivMFcX+rEGHPZZMY9coMY
g/NLN6dwPRJIsMjv86FZXL90JFh+8kxkC65vehJMmDroVwG5hwQ7n3Ublsb1
0ECCc/oLftlz/TSS4IvPWuForq/GEpSqHkW24PprJsGAfzvoV5IhwUjR5NmX
uF5bSnBnZtS3HVzfrSTo4Vc6KFm7/ktweUOfwhDmB0cJsq7pV7ozf7hL4NUi
0H4184tQgm1ROZNtmH9CJai92z9gOfOTSIIp4mE/bZi/pBJIWtWVODC/pUqw
YKa4ypP5L1OC5PMVY8KZH5USTHpYcETO/JkjwVZTPbvdzK95EigqFg26zPx7
WoK04PY6z5ifVRJYXjj2oznzeYEEr5I3fB7BfK+WoOf4p+9sqAcqJFh58fgD
KfVCpQR7+3Y5cZ56olqCusgX/p+pN+okmLquvo0x9UhD4/WbfAnwpV4RxGPF
N8muo9QzOvGIbDso/Tv1jl489g6ePmFmPeMfjw47Bko2UC8ZxGP4Kd2AF9RT
RvG4fqHv94nUX8bx+M9jdbv0BsY/HtfaqHbUUq8hHicL+h5dRH1n2fj7L6cZ
H9Pqv3jM/F7cqRf1oU08Pk9wXiShfnSMx7ycmIcfqS/d4/FFqDi4hvpTGI+4
Di9P3aU+DY1vzEf5nxa0oP6Ox/3e1ksKqG+l8bDfcbjQgno4NR4DT5Utvd5a
w5nxMEk68nQO9bQyHmLTfi5q6u2ceJzqVlVuSz2eF4/gb4eGvqJePx0PqU//
ZUHU86p4xHa/PqdVZw0XxGP6665/slgPqOPx3TPE3YT1Q0U8WnSfHl7cnfo+
Hm6ph408WX9Ux+PNt+9urVmf1MXjz/hpIw6wfmmIh+XsZI9FrG8ECShJetr5
K+sfnQQ8aTO0XzbrI70EyMstYuYaUv8n4Kd5c6MG1lcGCehkYdg+ZzD1fwJ6
X14yYKUR9X8Crt01sdNlPWeWgPcTbA9cHc76KaGxnp7dMor1oGUCHGyDHExZ
L1olQGfC/P31rCdtEiCaaPTgCOtNxwS0vGrz3I/1qHsC9pw3OGkygfFPwPdX
Jy2/sZ4NTQAmzpKfn8j4N7LJh2DxZMY/Af7j8xvmsX5OTUBORUmLbqyvMxMw
eZZe2jPW38oE5KZGyg+xPs9JwD/t/ryPZP2el4BF+8N2z+d5mNMJEC+6tqeP
9jxWAraMOfqilv2BggTMN9ZZks/zKeoEZBsnPsvgeZSKBAwIfR3vw35EZQIO
6jwYM5P9iuoETP2pU9Gb/Yy6xt971t3rM/sdDQmY233X42L2QwSJiB5uMSCH
/RKdRHSaIB8u5nkQvUTYmbZ+t5rnP3okIjTIfPlk9mcMEtH7wZlVPdi/MUqE
t9Wnj1943sM4ERMM3XTK2P8xS8Rqu7QNR9kfQiKm9H0dl8b+kWWjvXaPCoU8
v2GViGnKZw5WPK9hk4gZcrcxxuxXOSbict9HY/XYz3JPRJ+Mg8vreD5DmIjf
Cov1avbDQhOhXNb53zz2y0SJMJkXp5PGfpo0ETPn/hnpx/MXqYkY9uvbmMU8
b5GZiMS/HrYcoz1vkYjC5J7Zeuzv5STi1JRB72vZ/8trvL42AVUl7A+eToRq
VXhgLvuHqkSM3H9iQzLPUxQkYt+DHcYe7EeqG69ndz5msV9ZkYjntVtPDGA/
szIRK0edj/3Nfmd1IrZczs24z35oXSLOLm9VcyyV8U/EawtnL7n2PLgUwz46
6bqy/6ojRRfD/dem8jyEnhTzfN6Iu7Cf20OKHwllk2t4HsJAiqr9Qyovsh9s
JMWWL3ucN2j7xVJMy+97xoXnHcykGN7epXQ8+8+QQnxj2e4W7E9bSrFiWkX/
MvavraQ46f908naeb7CRwiVk7Stv9sMdpZAU+3YxZb/cXYojKt0zf9hPF0ph
mG9/4zrPL4RKseCmeGwK+/MiKWx3H3u/iOcVpFLMXjPiXUf2+1OlyN02sf8d
7gdkSmHx2kSUqj2fIEXHjrE/53N/IafRXvrGpFbcj8iTQreytpeK5xFOS9Hi
0oBdwdzPUEmRvquwx3DufxRI8aBNpvdj7o+opci6OTNdzv2UCimyfbaJJnP/
pVKKF+tjjV7zPEG1FONGPIxO5f5NnRSibzkhptzvaZAi5sT3lo+4HyRIQm/F
e4No7ifpJGHumpNn+mjPAyTBwSDz2lnuT/VIQl33N2bW3M8ySMKUBZ103nO/
yygJ7YrWD4nT7pcl4df3uuQu3G8zS4JndcXQXdyPQxLSd//+Ysz9PMskRMhH
vjzL/T+rJHzbbPHOnPuHNkmwPTpZcJ37jY5JCPrRs9ts7l+6J6FDf4HhNe5/
CpOQk2uoD+7HhiahfIH666kqxj8JR/u754x4yfgnobuOy+Btrxj/JBS9Wera
rprxT4JN86f2IW8Y/0b/TK42fVrD+Cdh9tQHc2fw+5W8JOzuqjdi13vGPwmy
4T7/NKll/JPwJLfjBrs6xj8JW+9MaHb0I+OfhDL90a+a1zP+Sfi53XXMss+M
fxLCFjo/zP7C+Cchbei1B6+/Mv5JWJE5a/CIBsY/CROU5497f2f8Zdho1D1q
3w/GX4akyU7Bz/9j/GXoP+tyRnd+v9NDhvMrwiosfzP+MoQ6vh4d/IfxlyHt
1JVbiwSa73+MZejyLVD0nGwmQ3Vt1bgAfh8EGYpSvlU1aaphSxkCpu9JUpCt
ZLDv86V/z2YatpFh5c9vOdvJjjJkKG73MuL3R+4yLIo+FnCQLJShXvrk8KgW
Gg6VofeWHYWHyCIZrr5cnT+ipYalMrg1jUvPIafK4NFUZjaA3ztlymAhb354
M1kpg3GDol5XR8M5Mlivvts0jpwnQ/rpjPufyKdleP85O9CptYZVjX/fvkhd
TC6Qwaxv67em/N5KLYNf5DJVNrlChtu3zi1o0VbDlTIs6GCf6k6ulkF+wzX+
JrlOhgG/ug8zaqfhBhksbVURErIgGb3MVCFPyDrJ8Dgn7T2B33/pJaPd4yyX
ZHKPZFwUpVg9IRskQxz/+9EoXQ0bJSPz7p5WUWTjZFREzCspIJslo2Bf/qhO
HRj/ZHS8/W2wLdkyGVG5z45vJVslI3FZyt2nZJtk+MzoIuunx/gn45r33uJV
ZPdkpFjEZ2eQhY32bv/+9S85NBl5ecGvW3Rk/JMx3chp5USyNBl2xjOtPcmp
yUiNOnU3k5yZjCHJLo+vkpXJKN3V0v0DOScZNbWeQV07Mf7J0A0UNp9EPp2M
VYY6XVaRVcnQfz5uZwS5IBlNFW2PZJLVybjZ/NiUY+SKxvszzMWikFyZjD61
HrcqydXJuLe0f2E9uS4Z53y/z2remfFPxoeAgKmdyIIULDk84FAfsk4KbqQd
zBxM1kvBnUMFP0eQe6RAfQkPjMkGKdixu854LNkoBY89rgvGkI1TEDX9ypyR
ZLMUCMRf2w4hIwX9zybO7ku2TMHPDQd/aq/PKgVHn+cOb0G2SUHqzldln+mf
YwrOfspveEZ2T8Hs9tcyisjCFLybH3H0ODk0Bb0HyuZsIYtSsKnnXvsosjQF
ufmba+3JqY2/f2WyYAo5MwULz4WmdicrU/73+5ftddr4p+BQzyKTG+S8FBzf
3nlOFvl0CvxsbJ57k1UpOCh/KphCLkiBwk2wR4esToHxfcPSO3x+K1JwIvNq
0hZyZQpadPUtdCBXp+CU5+XNA8h1jddn4/X1Od+fhhT8HjeqSkkWyPH4ySOn
VWQdOQKP2QV2JevJcT5GqV/E97eHHCf8j64SkQ3kGNxh/4Sx2vdfDpX+kYPP
uD4Yy1Ge2fSygmwmh2xPTdBEMuRIjL5e/Izrj6Ucc1c3L0wkW8lREmwoHE62
kaP2wbFLRVzfHOUY6LP8vBfZXY7KovPuOmShHN4z9t3YwfUzVA7zvA8PJ5FF
cvwJFOaouf5KG+c7DjB2IafKsTdLJ/gL1+/MxvmpplESslKOU3dLLTtq1385
Kvp0epTF/JAnR6M6nTSQfFqO+4szXPczv6jkWD4tw2UUuaDR3x/7TfOYn9Ry
mFourxpNrpDDc90Ir1zmt0o5Dg9Q39Hmv2o5jvnU99nB/Fgnx7i0FVba/Nkg
R+/3RT7a/CpQYMqLseHa/KujwB5VSJg/87OeAvEZmb7PmL97KJA1YrvjQrKB
Aon7V2z31+Z/BWafvJI4k/rAWIGM8x8jO1E/mCkwbZ1v0iPqCyjgfPj5iR3U
H5YKKGx1266lPrFSoOKnOs2Q+sVGgWDlwKVPqG8cFbCI62vzN/WPuwK55R/2
WVIfCRU4FFu5uIHfF4cq4PPExnYX9ZVIgVi/ezfnU39JFfi178vBjx+o/xQI
z3Jtl079lqlA2OmvH42p75QKtExJdivU6j8FjvsbhqyhPsxT4NyS8mFf+f3y
6cb7u1SdkkB9qVKg3d92eztTfxYocOVFuWQr9alagTWBJ0YPpH6tUOCzPPHo
Xu35PgUsLeu6G1H/ViuwZNJ+z93Ux3UK9BuVcKIf9XODAk1KPZtlUF8L1mO0
7zKHttTfOutxPXVZWST1ud56GF5M83nL83A91uPioNkTVlDfG6zHwgVXJ6q0
+n89nFXe4sGsD4zXI/niqb4y1g9m63GlenT3tzzPhvVY8sE/dE5j/fE/PTK7
oA==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.004096829054056241, 
        2.3398344580866333`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.004096829054056241, 
        2.3398344580866333`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"(UAV thrust - UAV weight)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(3\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6985508860612507`*^9, 3.698550937005148*^9, 3.698551310865361*^9, 
   3.69855252877886*^9, 3.6985607992224083`*^9, 3.7098120102199163`*^9, 
   3.709812545526105*^9, 3.7098127709698057`*^9, 3.7098128899612722`*^9, 
   3.7098130833818398`*^9, 3.709814637333356*^9, 3.709815070848659*^9, 
   3.709816732377987*^9, 3.709816928592106*^9, 3.709868588124206*^9, 
   3.7098736135156593`*^9, 3.7098748776027718`*^9, 3.709876309578061*^9, 
   3.710161064855397*^9, 3.710416427378765*^9, 3.7104175232696533`*^9, 
   3.714323152965292*^9, {3.714323203700494*^9, 3.714323229798435*^9}, 
   3.714324371831925*^9, 3.714375204117093*^9, 3.715332396315463*^9, 
   3.7156277022433767`*^9, 3.715662863293446*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/uav_slung_manipulator/sim_input_forces.pdf\>\""}], ",", 
    "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.7101607845755167`*^9, {3.714322971905999*^9, 3.714322973841704*^9}, {
   3.714377802153315*^9, 3.714377807762355*^9}}]
}, Open  ]]
},
WindowSize->{1239, 715},
WindowMargins->{{Automatic, 1}, {-28, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 265, 3, 45, "Subsection"],
Cell[CellGroupData[{
Cell[848, 27, 135, 1, 55, "Chapter"],
Cell[986, 30, 565, 12, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1588, 47, 550, 9, 156, "Chapter"],
Cell[CellGroupData[{
Cell[2163, 60, 150, 2, 45, "Subsection"],
Cell[2316, 64, 1365, 41, 171, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3730, 111, 331, 4, 66, "Chapter"],
Cell[CellGroupData[{
Cell[4086, 119, 126, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[4237, 124, 7065, 161, 486, "Input"],
Cell[11305, 287, 741, 16, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12107, 310, 173, 2, 66, "Chapter"],
Cell[12283, 314, 683, 18, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13003, 337, 222, 4, 111, "Chapter"],
Cell[CellGroupData[{
Cell[13250, 345, 138, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[13413, 350, 4698, 123, 238, "Input"],
Cell[18114, 475, 824, 16, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18987, 497, 138, 1, 65, "Section"],
Cell[19128, 500, 4320, 117, 171, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23485, 622, 249, 5, 101, "Section"],
Cell[23737, 629, 4685, 134, 307, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28459, 768, 524, 18, 71, "Section"],
Cell[28986, 788, 3677, 100, 199, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[32712, 894, 3706, 52, 100, "Chapter"],
Cell[36421, 948, 7462, 197, 1061, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43920, 1150, 151, 2, 66, "Chapter"],
Cell[44074, 1154, 878, 17, 57, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44989, 1176, 184, 2, 66, "Chapter"],
Cell[45176, 1180, 870, 25, 125, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46083, 1210, 178, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[46286, 1216, 1653, 37, 170, "Input"],
Cell[47942, 1255, 830, 16, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48821, 1277, 145, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[48991, 1282, 4727, 117, 422, "Input"],
Cell[53721, 1401, 1989, 29, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55759, 1436, 96, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[55880, 1441, 7922, 166, 694, "Input"],
Cell[CellGroupData[{
Cell[63827, 1611, 233, 3, 24, "Print"],
Cell[64063, 1616, 233, 3, 24, "Print"],
Cell[64299, 1621, 233, 3, 24, "Print"],
Cell[64535, 1626, 235, 3, 24, "Print"],
Cell[64773, 1631, 235, 3, 24, "Print"],
Cell[65011, 1636, 233, 3, 24, "Print"],
Cell[65247, 1641, 232, 3, 24, "Print"],
Cell[65482, 1646, 233, 3, 24, "Print"],
Cell[65718, 1651, 233, 3, 24, "Print"],
Cell[65954, 1656, 234, 3, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66249, 1666, 94, 1, 66, "Chapter"],
Cell[66346, 1669, 892, 19, 57, "Input"],
Cell[CellGroupData[{
Cell[67263, 1692, 121, 2, 45, "Subsection"],
Cell[67387, 1696, 1494, 35, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68918, 1736, 94, 1, 45, "Subsection"],
Cell[69015, 1739, 1473, 37, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70525, 1781, 123, 1, 45, "Subsection"],
Cell[70651, 1784, 1197, 36, 103, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71897, 1826, 146, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[72068, 1832, 2842, 73, 341, "Input"],
Cell[74913, 1907, 40261, 722, 326, "Output"]
}, Open  ]],
Cell[115189, 2632, 408, 10, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115634, 2647, 99, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[115758, 2652, 3523, 81, 349, "Input"],
Cell[119284, 2735, 59833, 1049, 278, "Output"]
}, Open  ]],
Cell[179132, 3787, 327, 9, 34, "Input"],
Cell[179462, 3798, 92, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179591, 3804, 148, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[179764, 3810, 4778, 117, 373, "Input"],
Cell[184545, 3929, 58717, 1031, 279, "Output"]
}, Open  ]],
Cell[243277, 4963, 307, 8, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243621, 4976, 253, 5, 66, "Chapter"],
Cell[CellGroupData[{
Cell[243899, 4985, 1741, 41, 304, "Input"],
Cell[245643, 5028, 17985, 355, 278, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263677, 5389, 101, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[263803, 5394, 4337, 105, 530, "Input"],
Cell[268143, 5501, 41505, 737, 301, "Output"]
}, Open  ]],
Cell[309663, 6241, 308, 8, 34, "Input"]
}, Open  ]],
Cell[309986, 6252, 92, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[310103, 6257, 146, 2, 55, "Chapter"],
Cell[CellGroupData[{
Cell[310274, 6263, 1313, 34, 259, "Input"],
Cell[311590, 6299, 23496, 425, 299, "Output"]
}, Open  ]],
Cell[335101, 6727, 379, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335517, 6741, 144, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[335686, 6747, 2866, 60, 328, "Input"],
Cell[338555, 6809, 51451, 914, 283, "Output"]
}, Open  ]],
Cell[390021, 7726, 377, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390435, 7740, 143, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[390603, 7746, 2589, 53, 305, "Input"],
Cell[393195, 7801, 57918, 1026, 289, "Output"]
}, Open  ]],
Cell[451128, 8830, 323, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451488, 8844, 203, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[451716, 8851, 3220, 69, 351, "Input"],
Cell[454939, 8922, 74975, 1320, 289, "Output"]
}, Open  ]],
Cell[529929, 10245, 380, 10, 34, "Input"]
}, Open  ]]
}
]
*)

